{
  "name": "d2e",
  "version": "1.0.0",
  "description": "Data2Evidence",
  "license": "MIT",
  "config": {
    "env_names_all": "local remote alp-dev-sg-2 alp-dev-sg-3 alp-stg-de-1 alp-stg-sg-1 alp-stg-sg-2",
    "env_names_base": "base-all base-local base-remote",
    "env_names_dev": "alp-dev-sg-3"
  },
  "scripts": {
    "edit": "code package.json",
    "create:env": "scripts/create-op.sh",
    "create:env:all": "for ENV_NAME in ${npm_package_config_env_names_all[@]}; do yarn create:env $ENV_NAME; done",
    "flatten:env": "scripts/flatten-env.sh",
    "flatten:env:all": "for ENV_NAME in ${npm_package_config_env_names_all[@]}; do OVERWRITE=$OVERWRITE ENV_NAME=$ENV_NAME yarn flatten:env; done",
    "gen:env": "ENV_NAME=$ENV_NAME ENV_TYPE=$ENV_TYPE scripts/gen-env-internal.sh",
    "get:drivers": "scripts/get-drivers.sh",
    "get:env": "scripts/get-env.sh",
    "get:env:all": "for ENV_NAME in ${npm_package_config_env_names_base[@]} ${npm_package_config_env_names_all[@]}; do OVERWRITE=$OVERWRITE ENV_NAME=$ENV_NAME yarn get:env; done",
    "get:env:dev": "for ENV_NAME in ${npm_package_config_env_names_dev[@]}; do OVERWRITE=$OVERWRITE ENV_NAME=$ENV_NAME yarn get:env; done",
    "get:env:local": "OVERWRITE=$OVERWRITE ENV_NAME=local yarn get:env; done",
    "get:env:remote": "OVERWRITE=$OVERWRITE ENV_NAME=remote yarn get:env; done",
    "get:synpuf1k": "scripts/get-synpuf1k.sh",
    "load:all": "yarn load:permissions && yarn load:synpuf1k && yarn load:vocab",
    "load:permissions": "scripts/load-permissions.sh",
    "load:synpuf1k": "scripts/load-synpuf1k.sh",
    "load:vocab": "scripts/load-vocab.mjs",
    "persist:env": "scripts/persist-env.sh",
    "put:env": "scripts/put-env.sh",
    "put:env:all": "for ENV_NAME in ${npm_package_config_env_names_all[@]}; do OVERWRITE=$OVERWRITE ENV_NAME=$ENV_NAME yarn put:env; done",
    "put:env:dev": "for ENV_NAME in ${npm_package_config_env_names_dev[@]}; do OVERWRITE=$OVERWRITE ENV_NAME=$ENV_NAME yarn put:env; done",
    "set:env": "ENV_TYPE=$ENV_TYPE ENV_NAME=$ENV_NAME scripts/set-env.sh && ENV_TYPE=$ENV_TYPE TLS_REGENERATE=$TLS_REGENERATE yarn --cwd .. gen:tls && D2E_RESOURCE_LIMIT=$D2E_RESOURCE_LIMIT ENV_TYPE=$ENV_TYPE yarn --cwd .. gen:resource-limits",
    "sort:dc1": "scripts/sort-dc.mjs --backup --force",
    "sort:dc2": "scripts/sort-dc.mjs --update",
    "sort:env": "scripts/sort-env.sh",
    "json:env": "scripts/json-env.sh",
    "pivot:env": "scripts/pivot-env.mjs",
    "pivot:env:all": "for ENV_NAME in ${npm_package_config_env_names_all[@]}; do ENV_NAME=$ENV_NAME yarn pivot:env; done"
  }
}
volumes:
  fhir-schema-file-1:

x-envs:
  pg: &x-pg
    PG__DB_NAME: alp
    ## Flag to display executed Knex queries in log
    PG__DEBUG: ${PG_DEBUG:-1}
    PG__HOST: ${PG_HOST:-alp-minerva-postgres-1}
    PG__MAX_POOL: 10
    PG__MIN_POOL: 0
    PG__PORT: ${PG_PORT:-5432}
    PG__IDLE_TIMEOUT_IN_MS: 1000
    PG__DIALECT: postgresql
  fhir: &x-fhir
    FHIR__CLIENT_ID: db6b2304-f236-45ec-b10c-a852681e7129
    FHIR__CLIENT_SECRET: ${FHIR__CLIENT_SECRET}
  redis: &x-redis
    REDIS_HOST: ${REDIS_HOST:-alp-minerva-redis-1}
    REDIS_PORT: ${REDIS_PORT:-6379}

services:
  alp-fhir-server:
      container_name: &c6 alp-minerva-fhir-server-${BASE_PORT:-1}
      depends_on:
        trex:
          condition: service_healthy
        redis:
          condition: service_healthy
      healthcheck:
        interval: 20s
        retries: 5
        start_period: 120s
        test:
          - CMD
          - wget
          - -O
          - fhir.status
          - http://localhost:8103/healthcheck
      hostname: alp-minerva-fhir-server-${BASE_PORT:-1}.${TLS__INTERNAL__DOMAIN:-alp.local}
      image: alpcr.azurecr.io/alp-data-node/alp-fhir-server:${DOCKER_TAG_NAME:-develop}
      logging:
        options:
          tag: *c6
      networks:
        alp:
          priority: 20
      restart: ${DOCKER__RESTART_POLICY:-unless-stopped}
      volumes:
        - fhir-schema-file-1:/home/docker/app/medplum/packages/definitions/dist/fhir/r4
      environment:
        <<:
          - *x-pg
          - *x-redis
          - *x-fhir
        PG_SUPER_PASSWORD: ${PG_SUPER_PASSWORD}
        PG_SUPER_USER: ${PG_SUPER_USER:-postgres}
        REDIS_PASSWORD: ${REDIS_PASSWORD}
        DUCKDB_PATH: /home/docker/app
        FHIR_SCHEMA_PATH: /home/docker/app/medplum/packages/definitions/dist/fhir/r4
        FHIR_SCHEMA_FILE_NAME: fhir.schema.json
  
  alp-fhir-fe-server:
    container_name: &c28 alp-minerva-fhir-fe-server-${BASE_PORT:-1}
    image: alpcr.azurecr.io/alp-data-node/alp-fhir-fe-server:${DOCKER_TAG_NAME:-develop}
    logging:
      options:
        tag: *c28
    depends_on:
      alp-fhir-server:
        condition: service_started
      # alp-fhir-server-post-init:
      #   condition: service_completed_successfully
    networks:
      alp:
    restart: ${DOCKER__RESTART_POLICY:-unless-stopped}
    profiles: [fhir]
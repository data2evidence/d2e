namespace legacy.cdw.db.models;

using legacy.cdw.db.models :: DWTypes as DWTypes;

context DWEntities {

   /*********************
    *     CONDITION     *
    *********************/

   entity Condition_Key {
      key DWID                 : DWTypes.DWID;
          DWSource             : DWTypes.DWSource  not null;
          DWAuditID            : DWTypes.DWAuditID not null;
          ConditionID          : String(100)       not null; // Business key

          Condition_Attr_Assoc : association to Condition_Attr on
         Condition_Attr_Assoc.DWID                 = DWID;
   }
   technical configuration {
      column store;
   };
   entity Condition_Attr {
      key DWDateFrom          : DWTypes.DWTimestamp;
      key DWID                : DWTypes.DWID;
          DWDateTo            : DWTypes.DWTimestamp;
          DWAuditID           : DWTypes.DWAuditID not null;
          ConditionType       : String(100);
          Description         : String(5000);
          Condition_Key_Assoc : association to Condition_Key on
         Condition_Key_Assoc.DWID                 = DWID;
   }
   technical configuration {
      column store;
               index DWDateTo         on (DWDateTo) asc;
      fulltext index ftiOnDescription on (Description)
         search only on
         phrase index ratio 0.0
         synchronous
         fast preprocess on;
   };

   /*********************
    *      PATIENT      *
    *********************/

   entity Patient_Key {
      key DWID                          : DWTypes.DWID;
          DWSource                      : DWTypes.DWSource  not null;
          DWAuditID                     : DWTypes.DWAuditID not null;
          PatientID                     : String(100)       not null; // Business key
   }
   technical configuration {
      column store;
      fulltext index ftiOnPatientID on (PatientID)
         search only off
         phrase index ratio 0.0
         async
         fast preprocess on;
   };
   entity Patient_Attr {
      key DWDateFrom         : DWTypes.DWTimestamp;
      key DWID               : DWTypes.DWID;
          DWDateTo           : DWTypes.DWTimestamp;
          DWAuditID          : DWTypes.DWAuditID not null;
      key ValidFrom          : LocalDate; // From date since when the record is semantically valid
          ValidTo            : LocalDate; // To date until when the record is semantically valid

          FamilyName         : String(100); // Family name (often called 'Surname')

          GivenName          : String(100); // Given names (not always 'first'). Includes middle names
          Title              : DWTypes.CodeableValue100; // Administrative title (also called 'form of address')
          Gender             : DWTypes.CodeableValue100; // Administrative gender

          BirthDate          : UTCDateTime; // The date and time of birth for the individual
          MultipleBirthOrder : hana.TINYINT; // Indicates whether the patient is part of a multiple or indicates the actual birth order
          DeceasedDate       : UTCDateTime; // The date and time of death for the individual
          MaritalStatus      : DWTypes.CodeableValue100; // Patient's most recent marital (civil) status
          Nationality        : DWTypes.CodeableValue100; // Nationality of the patient
          Address            : DWTypes.Address; // Address of the patient
          Telecom            : DWTypes.Contact; // Technology-mediated contact details
          OrgID              : String(100); //OrgID that is linked to Config.

          Patient_Key_Assoc  : association to Patient_Key on
         Patient_Key_Assoc.DWID                  = DWID;
   }
   technical configuration {
      column store;
               index DWDateTo        on (DWDateTo) asc;
      fulltext index ftiOnFamilyName on (FamilyName)
         fuzzy search index on
         search only off
         phrase index ratio 0.0
         async
         fast preprocess on;
      fulltext index ftiOnGivenName  on (GivenName)
         search only off
         phrase index ratio 0.0
         async
         fast preprocess on;
   };


   /*********************
    *    OBSERVATIONS   *
    *********************/

   entity Observations_Key {
      key DWID                    : DWTypes.DWID;
          DWSource                : DWTypes.DWSource  not null;
          DWAuditID               : DWTypes.DWAuditID not null;
          ObsID                   : String(100)       not null; // Business key

          Observations_Attr_Assoc : association to Observations_Attr on
         Observations_Attr_Assoc.DWID                 = DWID;
   }
   technical configuration {
      column store;
   };
   entity Observations_Attr {
      key DWDateFrom             : DWTypes.DWTimestamp;
      key DWID                   : DWTypes.DWID;
          DWDateTo               : DWTypes.DWTimestamp;
          DWAuditID              : DWTypes.DWAuditID not null;
          DWID_Patient           : DWTypes.DWID;
          ObsType                : String(100);
          ObsCharValue           : String(255);
          ObsNumValue            : Decimal(34, 10);
          ObsUnit                : String(100);
          ObsTime                : UTCTimestamp;
          OrgID                  : String(100); // Organization that is the custodian of the record

          Observations_Key_Assoc : association to Observations_Key on
         Observations_Key_Assoc.DWID                 = DWID;
          Patient_Key_Assoc      : association to Patient_Key on
         Patient_Key_Assoc.DWID                      = DWID_Patient;
   }
   technical configuration {
      column store;
      index DWDateTo on (DWDateTo) asc;
   };

   /*********************
    *    INTERACTIONS   *
    *********************/

   entity Interactions_Key {
      key DWID                    : DWTypes.DWID;
          DWSource                : DWTypes.DWSource  not null;
          DWAuditID               : DWTypes.DWAuditID not null;
          InteractionID           : String(100)       not null; // Business key

          Interactions_Attr_Assoc : association to Interactions_Attr on
         Interactions_Attr_Assoc.DWID                 = DWID;
   }
   technical configuration {
      column store;
   };
   entity Interactions_Attr {
      key DWDateFrom                   : DWTypes.DWTimestamp;
      key DWID                         : DWTypes.DWID;
          DWDateTo                     : DWTypes.DWTimestamp;
          DWAuditID                    : DWTypes.DWAuditID not null;
          DWID_Patient                 : DWTypes.DWID;
          DWID_ParentInteraction       : DWTypes.DWID;
          DWID_Condition               : DWTypes.DWID;
          InteractionType              : DWTypes.CodeableValue100;
          InteractionStatus            : String(100); // Current state of the interaction
          PeriodStart                  : UTCTimestamp; // Starting time with inclusive boundary
          PeriodEnd                    : UTCTimestamp; // End time with inclusive boundary, if not ongoing
          PeriodTimezone               : String(50); // PeriodTimeZone
          OrgID                        : String(100); // Organization that is the custodian of the record

          Interactions_Key_Assoc       : association to Interactions_Key on
         Interactions_Key_Assoc.DWID                       = DWID;
          ParentInteractions_Key_Assoc : association to Interactions_Key on
         ParentInteractions_Key_Assoc.DWID                 = DWID_ParentInteraction;
          Patient_Key_Assoc            : association to Patient_Key on
         Patient_Key_Assoc.DWID                            = DWID_Patient;
          Condition_Key_Assoc          : association to Condition_Key on
         Condition_Key_Assoc.DWID                          = DWID_Condition;
   }
   technical configuration {
      column store;
      index DWDateTo on (DWDateTo) asc;
   };


   /*********************
    *    PRACTITIONER   *
    *********************/

   entity Practitioner_Key {
      key DWID                    : DWTypes.DWID;
          DWSource                : DWTypes.DWSource  not null;
          DWAuditID               : DWTypes.DWAuditID not null;
          PractitionerID          : String(100)       not null; // Business key

          Practitioner_Attr_Assoc : association to Practitioner_Attr on
         Practitioner_Attr_Assoc.DWID                 = DWID;
   }
   technical configuration {
      column store;
      fulltext index ftiOnPractitionerID on (PractitionerID)
         search only off
         phrase index ratio 0.0
         async
         fast preprocess on;
   };
   entity Practitioner_Attr {
      key DWDateFrom             : DWTypes.DWTimestamp;
      key DWID                   : DWTypes.DWID;
          DWDateTo               : DWTypes.DWTimestamp;
          DWAuditID              : DWTypes.DWAuditID not null;
      key ValidFrom              : LocalDate;   // From date since when the record is semantically valid
          ValidTo                : LocalDate;   // To date until when the record is semantically valid

          OrgID                  : String(100); // Org to which Practitioner is associated to.


          FamilyName             : String(100); // Family name (often called 'Surname')

          GivenName              : String(100); // Given names (not always 'first'). Includes middle names
          Title                  : DWTypes.CodeableValue100; // Administrative title (also called 'form of address')
          Gender                 : DWTypes.CodeableValue100; // Administrative gender
          BirthDate              : UTCDateTime; // The date and time of birth for the individual

          MaritalStatus          : DWTypes.CodeableValue100; // Most recent marital (civil) status
          Nationality            : DWTypes.CodeableValue100; // Nationality
          Address                : DWTypes.Address;          // Address
          Telecom                : DWTypes.Contact;          // Technology-mediated contact details

          Role                   : DWTypes.CodeableValue100; // Role of a practitioner at Org. codified value.
          Speciality             : DWTypes.CodeableValue100; // Specific speciality the practitioner is associated with at the Org.
          PreferredLanguage      : String(100); // Preferred Language of communication with Patients.

          Practitioner_Key_Assoc : association to Practitioner_Key on
         Practitioner_Key_Assoc.DWID                 = DWID;
   }
   technical configuration {
      column store;
               index DWDateTo        on (DWDateTo) asc;
      fulltext index ftiOnFamilyName on (FamilyName)
         fuzzy search index on
         search only off
         phrase index ratio 0.0
         async
         fast preprocess on;
      fulltext index ftiOnGivenName  on (GivenName)
         search only off
         phrase index ratio 0.0
         async
         fast preprocess on;
   };

   /*** Practitioner to patient link ***/
   entity Patient_Practitioner_Link {
      key DWLinkID                             : DWTypes.DWID;
          DWID_Patient                         : DWTypes.DWID      not null;
          DWID_Practitioner                    : DWTypes.DWID      not null;
          DWDateTo                             : DWTypes.DWTimestamp;
          DWAuditID                            : DWTypes.DWAuditID not null;
          Patient_Key_Assoc                    : association to Patient_Key on
         Patient_Key_Assoc.DWID                                    = DWID_Patient;
          Practitioner_Key_Assoc               : association to Practitioner_Key on
         Practitioner_Key_Assoc.DWID                               = DWID_Practitioner;
          Patient_Practitioner_Link_Attr_Assoc : association to Patient_Practitioner_Link_Attr on
         Patient_Practitioner_Link_Attr_Assoc.DWLinkID             = DWLinkID;

   }
   technical configuration {
      column store;
   };

   /*** Practitioner to patient link Attributes ***/
   entity Patient_Practitioner_Link_Attr {
      key DWDateFrom              : DWTypes.DWTimestamp;
      key DWLinkID                : DWTypes.DWID;
          DWDateTo                : DWTypes.DWTimestamp;
          DWAuditID               : DWTypes.DWAuditID not null;
          Role                    : DWTypes.CodeableValue100; // Role played by Practitioner with a patient
        
          Practitioner_Link_Assoc : association to Patient_Practitioner_Link on
         Practitioner_Link_Assoc.DWLinkID             = DWLinkID;
   }
   technical configuration {
      column store;
   };
};
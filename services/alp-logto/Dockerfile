###### [STAGE] Build ######
FROM node:20-alpine as builder
WORKDIR /etc/logto
ENV CI=true

# No need for Docker build
ENV PUPPETEER_SKIP_DOWNLOAD=true

### Install toolchain ###
RUN npm add --location=global pnpm@^8.0.0
# https://github.com/nodejs/docker-node/blob/main/docs/BestPractices.md#node-gyp-alpine
RUN apk add --no-cache python3 make g++ rsync py3-setuptools git

## Git clone
RUN git clone --branch v1.14.0 https://github.com/logto-io/logto.git /etc/logto

## Copy modified files as needed
COPY ./to-replace/SignIn/Main.tsx /etc/logto/packages/experience/src/pages/SignIn/Main.tsx

### Install dependencies and build ###
RUN node .scripts/update-parcelrc.js
RUN pnpm i

### Set if dev features enabled ###
ARG dev_features_enabled
ENV DEV_FEATURES_ENABLED=${dev_features_enabled}

ARG applicationinsights_connection_string
ENV APPLICATIONINSIGHTS_CONNECTION_STRING=${applicationinsights_connection_string}
RUN pnpm -r build

### Add official connectors ###
ARG additional_connector_args
ENV ADDITIONAL_CONNECTOR_ARGS=${additional_connector_args}
RUN pnpm cli connector link $ADDITIONAL_CONNECTOR_ARGS -p .

### Prune dependencies for production ###
RUN rm -rf node_modules packages/**/node_modules
RUN NODE_ENV=production pnpm i

### Clean up ###
RUN rm -rf .scripts .parcel-cache pnpm-*.yaml packages/cloud

###### [STAGE] Seal ######
FROM node:20-alpine as app
WORKDIR /etc/logto
COPY --from=builder /etc/logto .

COPY ./connector-alp-azuread /etc/logto/packages/connectors/connector-alp-azuread

WORKDIR /etc/logto/packages/connectors/connector-alp-azuread

RUN yarn
RUN yarn build

WORKDIR /etc/logto/

RUN npx @logto/cli connector link

RUN ls -l /etc/logto/packages/core/connectors/

EXPOSE 3001
ENTRYPOINT ["npm", "run"]
CMD ["start"]

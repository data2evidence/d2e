<!--suppress MavenRedundantGroupId -->
<project xmlns="http://maven.apache.org/POM/4.0.0" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.0.1.RELEASE</version>
	</parent>

	<artifactId>bioinf-java-svc</artifactId>
	<groupId>legacy.health.genomics</groupId>
	<version>1.0.12</version>
	<packaging>jar</packaging>
	<description/>
	<properties>
		<java.version>1.8</java.version>
		<jacoco.version>0.7.7.201606060606</jacoco.version>		<!-- 0.7.7.201606060606, 0.7.8 -->
		<jacoco.coverage>0.5</jacoco.coverage>
		<!-- <spotbugs-maven-plugin.version>3.1.6</spotbugs-maven-plugin.version> -->
		<jackson.version>2.9.8</jackson.version>
		<spring-boot-security-jwt.version>1.1.4</spring-boot-security-jwt.version>
		<tomcat.version>9.0.12</tomcat.version>
		<org.eclipse.m2e.lifecycle-mapping.version>1.0.0</org.eclipse.m2e.lifecycle-mapping.version>
		<dependency.locations.enabled>false</dependency.locations.enabled>
		<start-class>legacy.health.genomics.vcf.parser.Application</start-class>
		<whitesource.name>SHC - XSAC_CHP 1.0</whitesource.name>
		<project.reporting.outputDirectory>${project.build.directory}/site/whitesource/</project.reporting.outputDirectory>
		<versions-maven-plugin.version>2.3</versions-maven-plugin.version>
		<xsuaaVersion>0.29.4</xsuaaVersion>
	</properties>

	<dependencies>
		<!-- Spring Framework dependencies -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<version>2.0.1.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>5.0.10.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>5.0.10.RELEASE</version>
		</dependency>
		<dependency>	
			<groupId>org.springframework.security</groupId>	
			<artifactId>spring-security-config</artifactId>	
			<version>5.0.8.RELEASE</version>	
		</dependency>
		<dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
		<!-- https://mvnrepository.com/artifact/org.springframework.security.oauth/spring-security-oauth2 -->
		<dependency>
			<groupId>org.springframework.security.oauth</groupId>
			<artifactId>spring-security-oauth2</artifactId>
			<version>2.3.5.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>com.sap.cloud.db.jdbc</groupId>
			<artifactId>ngdbc</artifactId>
			<version>2.19.16</version>
		</dependency>
		<dependency>
		    <groupId>com.sap.hana.di</groupId>
            <artifactId>hdi</artifactId>
            <version>2.2.0</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>org.bouncycastle</groupId>
			<artifactId>bcprov-jdk15on</artifactId>
			<version>1.60</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.12</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		
		<!-- XS Java dependencies -->
		<dependency>
			<groupId>com.sap.cloud.security.xsuaa</groupId>
			<artifactId>spring-xsuaa</artifactId>
			<version>1.5.0</version>
		</dependency>
		<dependency>
			<groupId>com.sap.cloud.sjb</groupId>
			<artifactId>xs-env</artifactId>
			<version>2.2.0</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.powermock/powermock-module-junit4 -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<version>5.1.0</version>
			<scope>test</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.powermock/powermock-api-mockito2 -->
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-api-mockito2</artifactId>
			<version>1.7.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>2.8.47</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-reflect</artifactId>
			<version>1.7.1</version>
		</dependency>
		<dependency>
			<groupId>commons-cli</groupId>
			<artifactId>commons-cli</artifactId>
			<version>1.3.1</version>
		</dependency>

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.7</version>
		</dependency>
		<dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-io</artifactId>
            <version>1.3.2</version>
        </dependency>
	</dependencies>

	<build>
		<pluginManagement>
			<plugins>
				<!-- set options for PMD globally -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-pmd-plugin</artifactId>
					<version>${pmd.version}</version>
					<configuration>
						<skipEmptyReport>false</skipEmptyReport>
						<!-- where can we put excludes??? into pluginManagement ??? -->
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.whitesource</groupId>
					<artifactId>whitesource-maven-plugin</artifactId>
					<version>18.6.2</version>
					<configuration>
						<orgToken>6971b2eec2d3420bad0caf173ec629f6a3c7d3ba63f3445ab99ffdbf1acfb1d0</orgToken>
						<product>${whitesource.name}</product>
						<userKey>6895aca2dce14c9d88a41bd90ebb41c91098c9d6efde410a9c612d73f53e5d3e</userKey>
						<reportAsJson>true</reportAsJson>
						<checkPolicies>true</checkPolicies>
						<failOnError>true</failOnError>
						<ignorePomModules>false</ignorePomModules>
						<autoDetectProxySettings>true</autoDetectProxySettings>
						<forceCheckAllDependencies>true</forceCheckAllDependencies>
						<forceUpdate>true</forceUpdate>
						<productVersion>latest</productVersion>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>${jacoco.version}</version>
					<configuration>
						<excludes>
							<!-- here you can exclude packages from Code Coverage Analysis -->
							<!-- If you want to exclude your Source code, you have to specify a folder structure with ** (for subfolders), e.g. ca/uhn/fhir/to/** -->
							<!-- If you want to exclude external jar fildes or libraries, you have to specify a package structure with * -->
							<!-- <exclude>com.customapi.*</exclude> -->
							<!-- <exclude>io/swagger/**</exclude> -->
							<!--  take this out and write tests!! -->
						</excludes>
					</configuration>
				</plugin>

				<!-- <plugin>
					<groupId>com.github.spotbugs</groupId>
					<artifactId>spotbugs-maven-plugin</artifactId>
					<version>${spotbugs-maven-plugin.version}</version>
					<configuration>
						<plugins>
							<plugin>
								<groupId>com.h3xstream.findsecbugs</groupId>
								<artifactId>findsecbugs-plugin</artifactId>
								<version>LATEST</version>
							</plugin>
						</plugins>
					</configuration>
					<executions>
						<execution>
							<id>analyze-compile</id>
							<phase>compile</phase>
							<goals>
								<goal>spotbugs</goal>
							</goals>
						</execution>
					</executions>
				</plugin> -->

			</plugins>
		</pluginManagement>

		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.19.1</version>
				<dependencies>
					<dependency>
						<groupId>org.junit.platform</groupId>
						<artifactId>junit-platform-surefire-provider</artifactId>
						<version>1.1.0</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<configuration>
					<exclude>org.bouncycastle:bcprov-jdk15on</exclude>
					<archive>
						<manifest>
							<mainClass>legacy.health.genomics.vcf.parser.Application</mainClass>
						</manifest>
					</archive>
					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>

			<plugin>
				<groupId>com.github.spotbugs</groupId>
				<artifactId>spotbugs-maven-plugin</artifactId>
				<!-- <version>${findbugs-maven-plugin.version}</version> -->
			</plugin>

		</plugins>
	</build>

	<profiles>

		<!-- Code Coverage Check, Find Bugs and perform a static Source Code Analysis -->
		<profile>
			<id>quality</id>
			<modules>
			</modules>
			<build>
				<plugins>

					<!-- Jacoco Code Coverage Check -->
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<version>${jacoco.version}</version>
						<executions>
							<execution>
								<id>default-prepare-agent</id>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
							</execution>
							<execution>
								<id>default-prepare-agent-integration</id>
								<goals>
									<goal>prepare-agent-integration</goal>
								</goals>
							</execution>
							<execution>
								<id>default-check</id>
								<goals>
									<goal>check</goal>
								</goals>
								<configuration>
									<rules>
										<!--  implementation is needed only for Maven 2  -->
										<rule implementation="org.jacoco.maven.RuleConfiguration">
											<element>BUNDLE</element>
											<limits>
												<!--  implementation is needed only for Maven 2  -->
												<limit implementation="org.jacoco.report.check.Limit">
													<counter>LINE</counter>
													<value>COVEREDRATIO</value>
													<minimum>${jacoco.coverage}</minimum>
												</limit>
											</limits>
										</rule>
									</rules>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-pmd-plugin</artifactId>
						<version>${pmd.version}</version>
						<executions>
							<execution>
								<phase>verify</phase>
								<goals>
									<goal>pmd</goal>
								</goals>
							</execution>
						</executions>
					</plugin>

					<!-- JUnit Test Runner Plugin for Maven -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
					</plugin>

					<!-- Failsafe -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<executions>
							<execution>
								<id>default-integration-test</id>
								<goals>
									<goal>integration-test</goal>
								</goals>
							</execution>
						</executions>
					</plugin>

				</plugins>
			</build>
		</profile>

		<!-- Create a jar File without running Tests -->
		<profile>
			<id>distribution</id>
			<build>
				<plugins>
					<!-- Skip Tests -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<skipTests>true</skipTests>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

	</profiles>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<configuration>
					<show>private</show>
					<nohelp>true</nohelp>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>${pmd.version}</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>${surefire-report.version}</version>
			</plugin>

			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco.version}</version>
				<reportSets>
					<reportSet>
						<reports>
							<report>report</report>
							<report>report-integration</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>

		</plugins>
	</reporting>
</project>

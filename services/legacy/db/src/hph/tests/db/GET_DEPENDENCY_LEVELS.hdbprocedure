procedure "hc.hph.tests.db::GET_DEPENDENCY_LEVELS" (  in PREFIX NVARCHAR(512) ,  out RESULT "hc.hph.tests.db::GET_DEPENDENCY_LEVELS/tabletype/RESULT"  ) language SQLSCRIPT sql security definer reads sql data as 
 /********* Begin Procedure Script ************/ 
BEGIN 
	DECLARE MAX_LEVEL INTEGER = 1;
	DECLARE PREV_MAX_LEVEL INTEGER = 0;
	DECLARE LEVEL_ITER INTEGER = 1;

	DEPENDENCY_MAP = 
		SELECT DISTINCT
			DEPENDENT_OBJECT_NAME,
			BASE_OBJECT_NAME
		FROM "hc::OBJECT_DEPENDENCIES" 
		WHERE BASE_OBJECT_NAME != DEPENDENT_OBJECT_NAME;
		
		
	DEPENDENCY_LEVELS = 
		SELECT DISTINCT
			DEPENDENT_OBJECT_NAME as OBJECT_NAME,
			:LEVEL_ITER as "LEVEL"
		FROM "hc::OBJECT_DEPENDENCIES" 
		WHERE BASE_OBJECT_NAME != DEPENDENT_OBJECT_NAME
		AND DEPENDENT_OBJECT_NAME like :PREFIX;


	WHILE MAX_LEVEL > PREV_MAX_LEVEL --AND MAX_LEVEL < 5
	DO
		PREV_MAX_LEVEL := MAX_LEVEL;
		LEVEL_ITER := :LEVEL_ITER + 1;	
		
		DEPENDENCY_LEVELS = 
			SELECT * FROM :DEPENDENCY_LEVELS
			UNION
			SELECT 
				BASE_OBJECT_NAME as OBJECT_NAME,
				levels."LEVEL" +1 AS "LEVEL"
			FROM :DEPENDENCY_LEVELS levels
			JOIN :DEPENDENCY_MAP dependency
				ON levels.OBJECT_NAME = dependency.DEPENDENT_OBJECT_NAME
				AND dependency.BASE_OBJECT_NAME is not null;
				
		SELECT max("LEVEL") into MAX_LEVEL FROM :DEPENDENCY_LEVELS;

	END WHILE;


	RESULT = 
		SELECT OBJECT_NAME AS OBJECT_NAME, MAX("LEVEL") as "LEVEL"
		FROM :DEPENDENCY_LEVELS 
		GROUP BY OBJECT_NAME
		ORDER BY 2 DESC;

END;
 /********* End Procedure Script ************/
PROCEDURE "hc.hph.core.db.procedures::BinaryInteger" ( IN int_number INTEGER, OUT binary_number VARBINARY(4) )
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   READS SQL DATA AS
BEGIN
    DECLARE buffer INTEGER := :int_number;
    DECLARE hex VARCHAR(2);

    hex := CHAR( CASE WHEN BITAND( :buffer, 15 ) < 10 THEN BITAND( :buffer, 15 ) + 48 ELSE BITAND( :buffer, 15 ) + 55 END );
    buffer := :buffer / 16;
    hex := CHAR( CASE WHEN BITAND( :buffer, 15 ) < 10 THEN BITAND( :buffer, 15 ) + 48 ELSE BITAND( :buffer, 15 ) + 55 END ) || :hex;
    binary_number := HEXTOBIN( :hex );
    buffer := :buffer / 16;

    WHILE LENGTH( :binary_number ) < 4 DO
        hex := CHAR( CASE WHEN BITAND( :buffer, 15 ) < 10 THEN BITAND( :buffer, 15 ) + 48 ELSE BITAND( :buffer, 15 ) + 55 END );
        buffer := :buffer / 16;
        hex := CHAR( CASE WHEN BITAND( :buffer, 15 ) < 10 THEN BITAND( :buffer, 15 ) + 48 ELSE BITAND( :buffer, 15 ) + 55 END ) || :hex;
        binary_number := :binary_number || HEXTOBIN( :hex );
        buffer := :buffer / 16;
    END WHILE;
END
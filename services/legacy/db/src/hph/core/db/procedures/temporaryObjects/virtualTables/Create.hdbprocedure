PROCEDURE "hc.hph.core.db.procedures.temporaryObjects.virtualTables::Create" ( IN table_name NVARCHAR(255), IN remote_source NVARCHAR(255), IN remote_db NVARCHAR(255), IN remote_schema NVARCHAR(255), IN remote_table NVARCHAR(255) )
LANGUAGE SQLSCRIPT SQL SECURITY DEFINER AS
BEGIN
    DECLARE POLICY_ERROR CONDITION FOR SQL_ERROR_CODE 10001;
    DECLARE is_valid INTEGER := 0;

    -- Check if temporary object is to be created in the correct namespace
    IF SUBSTRING( :table_name, 1, 50 ) <> 'hc.hph.core.db.models.generated.virtualTables.' THEN
        SIGNAL POLICY_ERROR SET MESSAGE_TEXT = 'Invalid table name prefix for temporary object';
    END IF;
    
    -- Check if remote source is supported by us
    SELECT COUNT(*) INTO is_valid FROM "hc::REMOTE_SOURCES" as REMOTE_SOURCES WHERE "REMOTE_SOURCE_NAME" = :remote_source AND "ADAPTER_NAME" IN ( 'ALP HPH Blob Adapter' );
    IF :is_valid = 0 THEN
        SIGNAL POLICY_ERROR SET MESSAGE_TEXT = 'Invalid remote source type';
    END IF;

    -- Create virtual table and grant SELECT permissions to technical user
    EXEC 'CREATE VIRTUAL TABLE "' || ESCAPE_DOUBLE_QUOTES ( :table_name ) || '" AT "' || ESCAPE_DOUBLE_QUOTES( :remote_source ) || '"."' || ESCAPE_DOUBLE_QUOTES( :remote_db ) || '"."' || ESCAPE_DOUBLE_QUOTES( :remote_schema ) || '"."' || ESCAPE_DOUBLE_QUOTES( :remote_table ) || '"';
    EXEC 'GRANT SELECT ON "' || ESCAPE_DOUBLE_QUOTES ( :table_name ) || '" TO ' || SESSION_USER || ' WITH GRANT OPTION';
END
PROCEDURE "hc.hph.core.procedures::update_plugin" ( 
	IN i_pluginid NVARCHAR(50),
	IN i_pluginversion NVARCHAR(10), 
	IN i_pluginprovider NVARCHAR(15), 
	IN i_status NVARCHAR(50),
	IN i_appuser NVARCHAR(512),
	IN i_apptime LONGDATE,
	IN i_jsontime LONGDATE
) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER AS
BEGIN
	DECLARE INVALID_INPUT CONDITION FOR SQL_ERROR_CODE 10001;
	DECLARE lv_count integer;
	DECLARE EXIT HANDLER FOR INVALID_INPUT
		SELECT ::SQL_ERROR_CODE || ::SQL_ERROR_MESSAGE FROM "hc::DUMMY"; 
	IF (:i_pluginid IS NULL or :i_pluginversion IS NULL or :i_pluginid IS NULL ) THEN
	 	SIGNAL INVALID_INPUT SET MESSAGE_TEXT = 'Invalid Plugin Id or Plugin version'; 
	ELSE
		IF :i_status = 'ACTIVE' THEN
			--upsert the plugin information
			UPSERT "hc.hph.core.model::PluginFramework.Plugin_RunTime"  
				SELECT :i_pluginid as "PLUGIN_ID",
					   :i_pluginversion as "VERSION",
					   :i_pluginprovider as "PROVIDER",
					   :i_status as "STATUS",
					   :i_appuser as "ACTIVATED_BY",
					   :i_apptime as "ACTIVATED_AT",
					   :i_jsontime as "JSON_ACTIVATED_AT"
				FROM "hc::DUMMY";	
		ELSE
			SELECT COUNT(*) INTO lv_count FROM "hc.hph.core.model::PluginFramework.Plugin_RunTime"  WHERE "PLUGIN_ID" = :i_pluginid;
            IF lv_count = 0 THEN
                --Upsert the default activated plugins
                UPSERT "hc.hph.core.model::PluginFramework.Plugin_RunTime"
                SELECT :i_pluginid as "PLUGIN_ID",
                	   :i_pluginversion as "VERSION",
 	            	   :i_pluginprovider as "PROVIDER",
                	   :i_status as "STATUS",
                	   'ALP' as "ACTIVATED_BY",
    	        	   (SELECT CURRENT_TIMESTAMP FROM "hc::DUMMY") as "ACTIVATED_AT",
    	        	   :i_jsontime as "JSON_ACTIVATED_AT"
                FROM "hc::DUMMY";              
            ELSE
               --update the plugin information
               UPDATE "hc.hph.core.model::PluginFramework.Plugin_RunTime" pluginruntime SET "STATUS" = :i_status
               FROM "hc.hph.core.model::PluginFramework.Plugin_RunTime" pluginruntime
               WHERE "PLUGIN_ID" = :i_pluginid AND "VERSION" =:i_pluginversion;
            END IF;
		END IF;
	END IF;
END;

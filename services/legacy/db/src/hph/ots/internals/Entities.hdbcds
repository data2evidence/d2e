namespace hc.hph.ots.internals;

using hc.hph.ots::Types as Types;
using hc.hph.ots.internals::Types as InternalTypes;


context Entities {

	entity Classification {
		key VocabularyID            : Types.VocabularyID;
		key Code                    : Types.ConceptCode;
		key Context                 : Types.TermContext;
		key ClassVocabularyID       : Types.VocabularyID;
		key ClassCode               : Types.ConceptCode;
			ClassHierarchyLevel     : Integer;
			ParentClassVocabularyID : Types.VocabularyID;
			ParentClassCode         : Types.ConceptCode;
			Provider                : InternalTypes.Provider  not null;
			DWAuditID               : InternalTypes.DWAuditID not null;
	} technical configuration {
		column store;
 	};

	/*
	@DWAnnotation.Entity."Group": 'OTS'
	@DWAnnotation.Entity.Name: 'OTS.Term'
	@DWAnnotation.Entity.ActiveRecordCount: { CountObject : '"hc.hph.ots.internals::Entities.ConceptTerms"'}
	*/
	entity ConceptTerms {
		key ConceptVocabularyID     : Types.VocabularyID;
		key ConceptCode             : Types.ConceptCode;
		key TermContext             : Types.TermContext;
		key TermLanguage            : Types.TermLanguage;
		key TermText                : Types.TermText;
			TermType                : Types.TermType;
			TermIsPreferred         : Types.TermIsPreferred   not null;
			Provider                : InternalTypes.Provider  not null;
			DWAuditID               : InternalTypes.DWAuditID not null;
	} technical configuration {
		column store;
		fulltext index ftiOnText on (TermText)
			search only on
			phrase index ratio 0.0
			synchronous
			fast preprocess on;
	};

	entity ConceptTypes {
		key ConceptVocabularyID     : Types.VocabularyID;
		key ConceptCode             : Types.ConceptCode;
		key	ConceptTypeVocabularyID : Types.VocabularyID;
		key	ConceptTypeCode         : Types.ConceptCode;
			Provider                : InternalTypes.Provider  not null;
			DWAuditID               : InternalTypes.DWAuditID not null;		
	} technical configuration {
		column store;

	};	

	entity ConceptTranslation {
		key TypeVocabularyID : Types.VocabularyID;
		key TypeCode         : Types.ConceptCode;
		key FromVocabularyID : Types.VocabularyID;
		key FromCode         : Types.ConceptCode;
		key ToVocabularyID   : Types.VocabularyID;
		key ToCode           : Types.ConceptCode;
			Provider         : InternalTypes.Provider  not null;
			DWAuditID        : InternalTypes.DWAuditID not null;
	} technical configuration {
		column store;
 	};

	entity Vocabularies {
			ID         : Types.VocabularyID;
		key ExternalID : Types.VocabularyID;
			Provider   : InternalTypes.Provider  not null;
			DWAuditID  : InternalTypes.DWAuditID not null;
	} technical configuration {
		column store;
 	};
};

PROCEDURE "hc.hph.user.procs::createUsers" 
		(
			IN i_user_details "hc.hph.user.db::UserModels.UserDetails",
			OUT o_message TABLE ("Status" NVARCHAR(1), "Code" NVARCHAR(100), "Message" NVARCHAR(100))
		) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER
	AS
BEGIN
	
	DECLARE v_user_id NVARCHAR(100);
	DECLARE v_user_id_found INTEGER;
	DECLARE v_current_timestamp TIMESTAMP;
	DECLARE lv_count INTEGER;
	DECLARE status NVARCHAR(1);
	DECLARE message NVARCHAR(100);
	DECLARE CURSOR users for SELECT * FROM :i_user_details;

	DECLARE exit handler for sqlexception
	BEGIN
		o_message = SELECT 	'E' AS "Status",
							::SQL_ERROR_CODE AS "Code",
		       				::SQL_ERROR_MESSAGE AS "Message"
		   			FROM "hc::DUMMY";    
	END;
	
	-- For each user 
	FOR user AS users DO

	    SELECT Count("Status") INTO lv_count FROM "hc.hph.user.db::UserModels.UserInfo" WHERE "UserID" = user."UserID" and "Status" = 'Deleted';
		IF :lv_count > 0 THEN
			CONTINUE;
		END IF;
		
		SELECT current_utctimestamp into v_current_timestamp FROM "hc::DUMMY";
		UPSERT "hc.hph.user.db::UserModels.UserInfo" VALUES(
			user."UserID",
			user."FirstName",
			user."LastName",
			user."EmailID",
			v_current_timestamp,
			'Active',
			SESSION_CONTEXT('XS_APPLICATIONUSER'),
			v_current_timestamp
		) with primary key;
		
	END FOR; 

	o_message = SELECT 'S' AS "Status",
					   null AS "Code",
	       			   'Successful Operation' AS "Message"
	   			FROM "hc::DUMMY";    
				
END;

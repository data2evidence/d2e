namespace hc.hph.search.db.models;

using hc.hph.cdw.db.models::DWTypes as DT;
using hc.hph.cdw.db.models::Config as Config; 
using hc.hph.cdw.db.models::DWViews as DWViews;
using hc.hph.cdw.db.models::DWEntities as DWEntities;
using hc.hph.search.db.models::Search as SearchTables;
using "hc.hph.collections.db.models::CollectionModel" as "CollectionModel";
using "hc.hph.cdw.db.models::Document_SearchIndex" as "DocumentSearchIndex";
using hc.hph.cdw.db.models::InterfaceViews as InterfaceViews;
using common::Hierarchy;
using common::Search;
using common::EnterpriseSearch;
using common::EnterpriseSearchHana;
using hc.hph.cdw.db.models::DWEntitiesEAV as DWEntEAV;
using hc.hph.cdw.db.models::DWViewsEAV as DWViewEAV;
using hc.hph.cdw.db.models::Ref as Ref; 
using "hc.hph.ots::Views" as "OtsViews";

context SearchViews {

    view TermMappings2 as select from SearchTables.TermMappings mixin {
        MAPPING_ID,
        LIST_ID,
        LANGUAGE_CODE,
        TERM_1,
        TERM_2,
        WEIGHT
    };

    view UserTermMappingsOnly as select from SearchTables.TermMappings mixin {
        _TermMappingItems: association[1..1] to SearchTables.TermMappingItems on _TermMappingItems.MAPPING_ID = MAPPING_ID;
        _tmc4a: association[1..1] to TermMappingsCustom4All on _tmc4a.MAPPING_ID = MAPPING_ID;
    }  into {
        MAPPING_ID,
        LIST_ID,
        ifnull(_TermMappingItems.LANGUAGE_CODE,LANGUAGE_CODE) as LANGUAGE_CODE,
        TERM_1,
        TERM_2,
        ifnull(_TermMappingItems.WEIGHT, WEIGHT) as WEIGHT,
        _TermMappingItems.USER_ID
    } where (_TermMappingItems.USER_ID = SESSION_CONTEXT( 'APPLICATIONUSER' ) and _TermMappingItems.INACTIVE is null )
            or ( CREATED_BY = SESSION_CONTEXT( 'APPLICATIONUSER' ) AND _tmc4a.ITEM_COUNT = 0 AND LIST_ID = 'hc.hph.custom' );

    view UserTermMappings as select from SearchTables.TermMappings mixin {
        _TermMappingItems: association[1..1] to SearchTables.TermMappingItems on _TermMappingItems.MAPPING_ID = MAPPING_ID;
    }  into {
        MAPPING_ID,
        LIST_ID,
        ifnull(_TermMappingItems.LANGUAGE_CODE,LANGUAGE_CODE) as LANGUAGE_CODE,
        TERM_1,
        TERM_2,
        ifnull(_TermMappingItems.WEIGHT, WEIGHT) as WEIGHT/*,
        _TermMappingItems.USER_ID,
        _TermMappingItems.INACTIVE*/
    } where 
        ( _TermMappingItems.INACTIVE is null 
        AND (_TermMappingItems.USER_ID is null or _TermMappingItems.USER_ID = SESSION_CONTEXT( 'APPLICATIONUSER' ) ) )
        OR (_TermMappingItems.USER_ID <> SESSION_CONTEXT( 'APPLICATIONUSER' ) AND _TermMappingItems.INACTIVE = 'X' )
    ; 

    view GuardedUsersWithoutTracking as select from SearchTables.UsersWithoutTracking {
        USER_ID as USER_ID
    } where USER_ID = SESSION_CONTEXT( 'APPLICATIONUSER' );             

    view PatientDocumentsCnt as select from DWViews.PatientDocumentsWithoutUserParameters {
        PatientID, 
        count(PatientID) as cnt
    } group by PatientID;     

    view TermMappingItemsInactive as select  from SearchTables.TermMappingItems {
            MAPPING_ID
    } where INACTIVE = 'X' group by MAPPING_ID ;

    view TermMappingItemsActive as select  from SearchTables.TermMappingItems {
            MAPPING_ID
    } where INACTIVE is null group by MAPPING_ID ;


    view TermMappings as select  from SearchTables.TermMappings mixin {
	    _tmii: association[1..1] to TermMappingItemsInactive   on _tmii.MAPPING_ID = MAPPING_ID;
	    _tmia: association[1..1] to TermMappingItemsActive     on _tmia.MAPPING_ID = MAPPING_ID;
	    _tms: association[1..1] to SearchTables.TermMappingSource on _tms.MAPPING_ID = MAPPING_ID;
	} into {
            MAPPING_ID, 
            LIST_ID,
            LANGUAGE_CODE, 
            TERM_1, 
            TERM_2, 
            WEIGHT, 
            count(_tmii.MAPPING_ID) as INACTIVE_BY,
            count(_tmia.MAPPING_ID) as CREATED_BY,
            count(_tms.MAPPING_ID) as SOURCE_CNT
    }   
        group by MAPPING_ID, LIST_ID, LANGUAGE_CODE, TERM_1, TERM_2, WEIGHT 
        order by TERM_1;

    view TermMappingsCustom4All as select  from SearchTables.TermMappings mixin {
	    _tmi: association[1..1] to SearchTables.TermMappingItems on _tmi.MAPPING_ID = MAPPING_ID;
	} into {
        MAPPING_ID, 
        count(_tmi.MAPPING_ID) as ITEM_COUNT
    } where LIST_ID = 'hc.hph.custom' group by MAPPING_ID ;

    view TermMappingsInactiveByUser as select  from SearchTables.TermMappingItems {
        MAPPING_ID, 
        INACTIVE
    } where USER_ID = SESSION_CONTEXT( 'APPLICATIONUSER' ) AND INACTIVE = 'X';

    view TermMappingsWithUserInfo as select  from SearchTables.TermMappings mixin {
	    _tmi: association[1..1] to TermMappingsInactiveByUser on _tmi.MAPPING_ID = MAPPING_ID;
	    _tmc4a: association[1..1] to TermMappingsCustom4All on _tmc4a.MAPPING_ID = MAPPING_ID;
	} into {
            MAPPING_ID, 
            LIST_ID,
            LANGUAGE_CODE, 
            TERM_1, 
            TERM_2, 
            WEIGHT,
            ifnull(_tmi.INACTIVE, '') as INACTIVE
    } where LIST_ID = 'hc.hph' or ( LIST_ID = 'hc.hph.custom' and _tmc4a.ITEM_COUNT = 0 ) ;    

    view AllowedPatientsWithDetails as select from DWViews.Patient as _p 
        inner join DWViews.AllowedPatientIdsWithDuplicates as _ap on _p.PatientID = _ap.PatientID  {
            _p.PatientID,
            _ap.InteractionID,
            SourcePatientID,
            Source,
            FamilyName,
            GivenName,   
            TitleValue,
            GenderValue,
            BirthDate,
            DeceasedDate,
            MaritalStatusValue,
            NationalityValue,
            StreetName,
            City,
            PostalCode,
            State,
            CountryValue,
            Phone,
            Mobile,
            Fax,
            Email
    };     

    //////

    @Search: {    searchable: true }
    @EnterpriseSearch.enabled: true
    view Documents as select from DWViews.PatientDocumentsWithoutUserParameters as _pd 
        join AllowedPatientsWithDetails as _gp on _gp.PatientID = _pd.PatientID
        left outer join DocumentSearchIndex as _dsi on _pd.DocumentID = _dsi.DWID
    {
        @EnterpriseSearch.presentationMode: [#TITLE]
        @EnterpriseSearch.key : true        
        _pd.DocumentID as vbDocumentID, 

        @EnterpriseSearch.presentationMode: [#TITLE]
        '' || _pd.DocumentID as DocumentID,         

        @Search: {     defaultSearchElement: true,    fuzzinessThreshold: 0.85, ranking: #MEDIUM }
        @EnterpriseSearch.presentationMode: [#TITLE]
        _pd.Author,

        @Search: {     defaultSearchElement: true,    fuzzinessThreshold: 0.85, ranking: #MEDIUM }
        @EnterpriseSearch.presentationMode: [#TITLE]
    	@EnterpriseSearch.usageMode: [ #SUGGESTION ]
        _pd.FileName, 

        @EnterpriseSearch.presentationMode: [#TITLE]
        @EnterpriseSearch.usageMode: [ #AUTO_FACET ]
        _pd.LanguageCode,

        @EnterpriseSearch.presentationMode: [#TITLE]
        @EnterpriseSearch.usageMode: [ #AUTO_FACET ]
        _pd.MIMEType,

        @Search: {  defaultSearchElement: true,    
                    fuzzinessThreshold: 0.85, 
                    ranking: #MEDIUM,
                    termMappingDictionary : 'hc.hph.search.db.models::SearchViews.UserTermMappings', 
                    termMappingListID : ['hc.hph', 'hc.hph.custom'] }
        @EnterpriseSearch.snippets.enabled: true
    	//@EnterpriseSearch.usageMode: [ #SUGGESTION ]
        _dsi.Content as Preview,

        @EnterpriseSearch.presentationMode: [#TITLE]
        @Search: {     defaultSearchElement: true,    fuzzinessThreshold: 0.85, ranking: #MEDIUM }
        _pd.Title,        

        @EnterpriseSearch.presentationMode: [#TITLE]
        _pd.Type as DocumentType,

        @EnterpriseSearch.presentationMode: [#TITLE]
        _pd.CreatedAt,        

        @EnterpriseSearch.presentationMode: [#TITLE]
        _pd.CreatedBy,        

        @EnterpriseSearch.presentationMode: [#TITLE]
        _pd.ChangedAt,        

        @EnterpriseSearch.presentationMode: [#TITLE]
        _pd.ChangedBy,                

        @EnterpriseSearch.presentationMode: [#TITLE]
        _pd.TypeText as DocumentTypeName,

        @EnterpriseSearch.presentationMode: [#TITLE]
        '/hc/hph/cdw/services/document/originalDocument.xsjs?DocumentID=' || _pd.DocumentID as URLToOriginal ,

        @EnterpriseSearch.presentationMode: [#TITLE]
        '' || _gp.PatientID as PatientID,

        @EnterpriseSearch.presentationMode: [#TITLE]
    	_gp.SourcePatientID,        

    	@EnterpriseSearch.presentationMode: [#TITLE]
        _gp.FamilyName,

    	@EnterpriseSearch.presentationMode: [#TITLE]
        _gp.GivenName,      

        @EnterpriseSearch.presentationMode: [#TITLE]
        TitleValue,

        @EnterpriseSearch.presentationMode: [#TITLE]
        GenderValue,

        @EnterpriseSearch.presentationMode: [#TITLE]
        BirthDate,

        @EnterpriseSearch.presentationMode: [#TITLE]
        DeceasedDate,

        @EnterpriseSearch.presentationMode: [#TITLE]
        StreetName,

        @EnterpriseSearch.presentationMode: [#TITLE]
        City,

        @EnterpriseSearch.presentationMode: [#TITLE]
        PostalCode,

        @EnterpriseSearch.presentationMode: [#TITLE]
        Phone,

        @EnterpriseSearch.presentationMode: [#TITLE]
        Mobile,

        @EnterpriseSearch.presentationMode: [#TITLE]
        Fax,

        @EnterpriseSearch.presentationMode: [#TITLE]
        Email,

        //JointResultList
        @EnterpriseSearch.presentationMode: [#TITLE]
        IFNULL(_pd.Title, _pd.DocumentID) as JointResultListTitle,        

        @EnterpriseSearch.presentationMode: [#TITLE]
        ' ' as JointResultListDescription

    };

    view InteractionDetailsWithVocMapping as select from DWViewEAV.Interaction_Details mixin {
        _Interactions: association[1..1] to DWViews.Interactions on _Interactions.InteractionID = InteractionID;
    }  into {
        InteractionID as InteractionID,
        _Interactions.InteractionTypeValue,
        AttributeValue as ATTRIBUTE,
        AttributeCode as ATTRIBUTE_CODE,
        AttributeCodeSystem as ATTRIBUTE_CODE_SYSTEM,
        AttributeCodeSystemVersion as ATTRIBUTE_CODE_SYSTEM_VERSION,
        Value as VALUE,
        ValueCode as VALUE_CODE,
        MaterializedValueVocabularyID as VALUE_CODE_SYSTEM,
        ValueCodeSystemVersion as VALUE_CODE_SYSTEM_VERSION
    };     

    view OtsTermAttributes as select from OtsViews.ConceptTerms mixin {
        ConceptVocabularyID as VocabularyID,
        ConceptCode as Code,
        TermLanguage as Language,
        TermText as Text
    } where TermContext = 'default';


    view InteractionDetailsWithOtsTerm as select from InteractionDetailsWithVocMapping mixin {
        _OtsTermAttributes: association[1..1] to OtsTermAttributes on _OtsTermAttributes.Code = VALUE_CODE AND _OtsTermAttributes.VocabularyID = VALUE_CODE_SYSTEM;
    }  into {
        InteractionID,
        InteractionTypeValue,
        ATTRIBUTE as ATTRIBUTEORIGINALVALUE,
        ATTRIBUTE_CODE,
        ATTRIBUTE_CODE_SYSTEM,
        ATTRIBUTE_CODE_SYSTEM_VERSION,
        VALUE,
        VALUE_CODE,
        VALUE_CODE_SYSTEM,
        VALUE_CODE_SYSTEM_VERSION,
        _OtsTermAttributes.Language as ValueLanguage,
        _OtsTermAttributes.Text as ValueText
    };


    @Search.searchable: true
    @EnterpriseSearch.enabled: true
    @EnterpriseSearch.fieldGroupForSearchQuery: 
    [{name: 'Patients', elements: [ 'VbPatientID', 'PatientID', 'GivenName' ]},{name: 'Documents', elements: [ 'Author', 'FileName']}]
 	@EnterpriseSearchHana.layoutStructuredObject: [
 	    {layerId: 'Documents', arbitraryCardinality: true, defaultExpand: #WHY_FOUND, elementList: [{element:'Author'},{element:'FileName'},{element:'Type'},{element:'DocumentID', key: true },{element:'Content'}]},
 	    {layerId: 'DocumentsAll', arbitraryCardinality: true, defaultExpand: #ALL, elementList: [{element:'DocumentID', key: true }]},
 	    {layerId: 'Cohorts', arbitraryCardinality: true, defaultExpand: #WHY_FOUND, elementList: [{element:'CohortID'},{element:'StatusID'},{element:'CreatedBy'},{element:'CreatedAt'},{element:'ChangedBy'},{element:'ChangedAt'},{element:'NoteCount'}]},
 	    {layerId: 'CohortsAll', arbitraryCardinality: true, defaultExpand: #ALL, elementList: [{element:'CohortID', key: true}]},
 	    {layerId: 'InteractionDetails', arbitraryCardinality: true, defaultExpand: #WHY_FOUND, elementList: [{element:'InteractionID'},{element:'InteractionTypeValue'},
 	                                        {element:'ValueOriginalValue'},{element:'ValueCode'},{element:'ValueCodeSystem'},{element:'ValueCodeSystemVersion'},{element:'ValueText'},
 	                                        {element:'AttributeOriginalValue'},{element:'AttributeCode'},{element:'AttributeCodeSystem'},{element:'AttributeCodeSystemVersion'}
 	                                        ]}]
    view Patients as select from AllowedPatientsWithDetails mixin {
    	_PatientDocumentContent: association[1..1] to DWViews.PatientDocumentContent on _PatientDocumentContent.PatientID = PatientID;
    	_Collection: association[1..1] to CollectionModel.Item on _Collection.Id = PatientID;
    	_InteractionDetails: association[1..1] to InteractionDetailsWithOtsTerm on _InteractionDetails.InteractionID = InteractionID;
    } into {
        @EnterpriseSearch.presentationMode: [#TITLE]
        @EnterpriseSearch.key : true
    	PatientID as VbPatientID,

        @EnterpriseSearch.presentationMode: [#TITLE]
    	'' || PatientID as PatientID,

    	@EnterpriseSearch.presentationMode: [#TITLE]
    	@Search: { 	defaultSearchElement: true }
    	SourcePatientID,

    	@EnterpriseSearch.presentationMode: [#DETAIL]
    	_Collection.Collection.Id as CohortID,
    	@EnterpriseSearch.presentationMode: [#DETAIL]
    	_Collection.Status.Id as StatusID,
    	@EnterpriseSearch.presentationMode: [#DETAIL]
        _Collection.CreatedBy, 
        @EnterpriseSearch.presentationMode: [#DETAIL]
        _Collection.CreatedAt, 
        @EnterpriseSearch.presentationMode: [#DETAIL]
        _Collection.ChangedBy,
        @EnterpriseSearch.presentationMode: [#DETAIL]
        _Collection.ChangedAt,
        @EnterpriseSearch.presentationMode: [#DETAIL]
        0 as NoteCount,

    	@EnterpriseSearch.presentationMode: [#TITLE]
    	@EnterpriseSearch.usageMode: [ #SUGGESTION ]
    	@Search: { 	defaultSearchElement: true,	fuzzinessThreshold: 0.9, ranking: #HIGH	}
        FamilyName,

    	@EnterpriseSearch.presentationMode: [#TITLE]
        @EnterpriseSearch.usageMode: [ #SUGGESTION ]
    	@Search: { 	defaultSearchElement: true,	fuzzinessThreshold: 0.9, ranking: #HIGH	}
        GivenName,

        @EnterpriseSearch.presentationMode: [#TITLE]
        TitleValue,

        @EnterpriseSearch.presentationMode: [#TITLE]
        @EnterpriseSearch.usageMode: [ #AUTO_FACET ]
        GenderValue,

        @EnterpriseSearch.presentationMode: [#TITLE]
        BirthDate,

        @EnterpriseSearch.presentationMode: [#TITLE]
        DeceasedDate,

        @EnterpriseSearch.presentationMode: [#TITLE]
        NationalityValue,

        @EnterpriseSearch.presentationMode: [#TITLE]
        StreetName,

        @EnterpriseSearch.usageMode: [ #SUGGESTION ]
        @EnterpriseSearch.presentationMode: [#TITLE]
        @Search: { 	defaultSearchElement: true,	fuzzinessThreshold: 0.85, ranking: #MEDIUM }
        City,

        @EnterpriseSearch.presentationMode: [#TITLE]
        PostalCode,

        @EnterpriseSearch.presentationMode: [#TITLE]
        State,

        @EnterpriseSearch.presentationMode: [#TITLE]
        CountryValue,

        @EnterpriseSearch.presentationMode: [#TITLE]
        Phone,

        @EnterpriseSearch.presentationMode: [#TITLE]
        Mobile,

        @EnterpriseSearch.presentationMode: [#TITLE]
        Fax,

        @EnterpriseSearch.presentationMode: [#TITLE]
        Email,

        @EnterpriseSearch.presentationMode: [ #DETAIL ]
    	_PatientDocumentContent.DocumentID,

    	//@Search: { 	defaultSearchElement: true,	fuzzinessThreshold: 0.9, ranking: #LOW	}
    	_PatientDocumentContent.Title,

    	//@Search: { 	defaultSearchElement: true,	fuzzinessThreshold: 0.8, ranking: #LOW	}
    	@EnterpriseSearch.presentationMode: [ #DETAIL ]
    	_PatientDocumentContent.Author,

    	@Search: { 	defaultSearchElement: true,	fuzzinessThreshold: 0.8	}
    	@EnterpriseSearch.presentationMode: [ #DETAIL ]
    	_PatientDocumentContent.FileName, 

    	@EnterpriseSearch.usageMode: [ #AUTO_FACET ]
    	@EnterpriseSearch.presentationMode: [ #DETAIL ]
    	_PatientDocumentContent.Type,

    	@EnterpriseSearch.usageMode: [ #AUTO_FACET ]
    	_PatientDocumentContent.TypeText,

    	@EnterpriseSearch.usageMode: [ #AUTO_FACET ]
    	_PatientDocumentContent.MIMEType,

    	@EnterpriseSearch.usageMode: [ #AUTO_FACET ]
    	_PatientDocumentContent.LanguageCode, 

    	//@EnterpriseSearch.snippets.enabled: true
    	@Search: { 	defaultSearchElement: true,	
    	            fuzzinessThreshold: 0.85, 
    	            ranking: #LOW,
                    termMappingDictionary : 'hc.hph.search.db.models::SearchViews.UserTermMappings', 
                    termMappingListID : ['hc.hph', 'hc.hph.custom'] }
        //@EnterpriseSearch.usageMode: [ #SUGGESTION ]
    	_PatientDocumentContent.Content as Content,

    	@EnterpriseSearch.presentationMode: [ #DETAIL ]
    	_InteractionDetails.InteractionID,

    	@EnterpriseSearch.presentationMode: [ #DETAIL ]
    	_InteractionDetails.InteractionTypeValue,

    	@EnterpriseSearch.presentationMode: [ #DETAIL ]
    	' ' as InteractionTypeText,

    	@Search: { 	defaultSearchElement: true,	fuzzinessThreshold: 0.85, ranking: #MEDIUM }
    	@EnterpriseSearch.presentationMode: [ #DETAIL ]
    	@EnterpriseSearch.usageMode: [ #SUGGESTION ]
    	_InteractionDetails.VALUE as ValueOriginalValue,

    	@Search: {  defaultSearchElement: true,	
    	            fuzzinessThreshold: 0.85, 
    	            ranking: #MEDIUM,
    	            termMappingDictionary : 'hc.hph.search.db.models::SearchViews.UserTermMappings', 
                    termMappingListID : ['hc.hph', 'hc.hph.custom'] }
    	@EnterpriseSearch.presentationMode: [ #DETAIL ]
    	@EnterpriseSearch.usageMode: [ #SUGGESTION ]
    	_InteractionDetails.VALUE_CODE as ValueCode,

    	@EnterpriseSearch.presentationMode: [ #DETAIL ]
    	_InteractionDetails.VALUE_CODE_SYSTEM as ValueCodeSystem,

    	@EnterpriseSearch.presentationMode: [ #DETAIL ]
    	_InteractionDetails.VALUE_CODE_SYSTEM_VERSION as ValueCodeSystemVersion,

        _InteractionDetails.ValueLanguage as ValueLanguage,

    	@Search: {  defaultSearchElement: true,	
    	            fuzzinessThreshold: 0.9, 
    	            ranking: #MEDIUM,
    	            termMappingDictionary : 'hc.hph.search.db.models::SearchViews.UserTermMappings', 
                    termMappingListID : ['hc.hph', 'hc.hph.custom'] }        
        @EnterpriseSearch.usageMode: [ #SUGGESTION ]
        @EnterpriseSearch.presentationMode: [ #DETAIL ]
        _InteractionDetails.ValueText as ValueText, 

    	@EnterpriseSearch.presentationMode: [ #DETAIL ]
    	_InteractionDetails.ATTRIBUTEORIGINALVALUE as AttributeOriginalValue,

    	@EnterpriseSearch.presentationMode: [ #DETAIL ]
    	_InteractionDetails.ATTRIBUTE_CODE as AttributeCode,

    	@EnterpriseSearch.presentationMode: [ #DETAIL ]
    	_InteractionDetails.ATTRIBUTE_CODE_SYSTEM as AttributeCodeSystem,

    	@EnterpriseSearch.presentationMode: [ #DETAIL ]
    	_InteractionDetails.ATTRIBUTE_CODE_SYSTEM_VERSION as AttributeCodeSystemVersion, 

        //JointResultList
        @EnterpriseSearch.presentationMode: [#TITLE]
        GivenName || ' ' || FamilyName as JointResultListTitle,        

        @EnterpriseSearch.presentationMode: [#TITLE] 
        IFNULL(StreetName || ', ', '')  || IFNULL(City || ' ', '') || IFNULL(Phone, '') as JointResultListDescription    	
    };   

    //BestRecord
    view AllowedPatientBestRecordWithDetails as select from Ref.PatientBestRecord as _p 
        inner join DWViews.AllowedPatientBestRecordIdsWithDuplicates as _ap on _p.PatientBestRecordID = _ap.PatientBestRecordID  {
            _p.PatientBestRecordID, //ID unique for a patient, but used as a grouping in CDW, not table unique 
            _ap.PatientID, //Table unique, a patient can have more than one ID
            '' || _ap.PatientID as PatientIdStr, //Table unique, a patient can have more than one ID
            _ap.InteractionID,
            SourcePatientID,
            Source,
            FamilyName,
            GivenName,   
            _p.Title.OriginalValue as TitleValue,
            Gender.OriginalValue as GenderValue,
            BirthDate,
            DeceasedDate,
            MaritalStatus.OriginalValue as MaritalStatusValue,
            Nationality.OriginalValue as NationalityValue,
            Address.StreetName as StreetName,
            Address.City as City,
            Address.PostalCode as PostalCode,
            Address.State as State,
            Address.Country.OriginalValue as CountryValue,
            Telecom.Phone,
            Telecom.Mobile,
            Telecom.Fax,
            Telecom.Email
    };      


    @Search: {    searchable: true }
    @EnterpriseSearch.enabled: true
    view DocumentsBestRecord as select from DWViews.PatientDocumentsWithoutUserParameters as _pd 
        join AllowedPatientBestRecordWithDetails as _gp on _gp.PatientID = _pd.PatientID
        left outer join DocumentSearchIndex as _dsi on _pd.DocumentID = _dsi.DWID
    {
        @EnterpriseSearch.presentationMode: [#TITLE]
        @EnterpriseSearch.key : true       
        _pd.DocumentID as vbDocumentID, 

        @EnterpriseSearch.presentationMode: [#TITLE]
        '' || _pd.DocumentID as DocumentID,         

        @Search: {     defaultSearchElement: true,    fuzzinessThreshold: 0.85, ranking: #MEDIUM }
        @EnterpriseSearch.presentationMode: [#TITLE]
        _pd.Author,

        @Search: {     defaultSearchElement: true,    fuzzinessThreshold: 0.85, ranking: #MEDIUM }
        @EnterpriseSearch.presentationMode: [#TITLE]
    	@EnterpriseSearch.usageMode: [ #SUGGESTION ]
        _pd.FileName, 

        @EnterpriseSearch.presentationMode: [#TITLE]
        @EnterpriseSearch.usageMode: [ #AUTO_FACET ]
        _pd.LanguageCode,

        @EnterpriseSearch.presentationMode: [#TITLE]
        @EnterpriseSearch.usageMode: [ #AUTO_FACET ]
        _pd.MIMEType,

        @Search: {  defaultSearchElement: true,    
                    fuzzinessThreshold: 0.85, 
                    ranking: #MEDIUM,
                    termMappingDictionary : 'hc.hph.search.db.models::SearchViews.UserTermMappings', 
                    termMappingListID : ['hc.hph', 'hc.hph.custom'] }
        @EnterpriseSearch.snippets.enabled: true
    	//@EnterpriseSearch.usageMode: [ #SUGGESTION ]
        _dsi.Content as Preview,

        @EnterpriseSearch.presentationMode: [#TITLE]
        @Search: {     defaultSearchElement: true,    fuzzinessThreshold: 0.85, ranking: #MEDIUM }
        _pd.Title,        

        @EnterpriseSearch.presentationMode: [#TITLE]
        _pd.Type as DocumentType,

        @EnterpriseSearch.presentationMode: [#TITLE]
        _pd.CreatedAt,        

        @EnterpriseSearch.presentationMode: [#TITLE]
        _pd.CreatedBy,        

        @EnterpriseSearch.presentationMode: [#TITLE]
        _pd.ChangedAt,        

        @EnterpriseSearch.presentationMode: [#TITLE]
        _pd.ChangedBy,                

        @EnterpriseSearch.presentationMode: [#TITLE]
        _pd.TypeText as DocumentTypeName,

        @EnterpriseSearch.presentationMode: [#TITLE]
        '/hc/hph/cdw/services/document/originalDocument.xsjs?DocumentID=' || _pd.DocumentID as URLToOriginal ,

        @EnterpriseSearch.presentationMode: [#TITLE]
        '' || _gp.PatientID as PatientID,

        @EnterpriseSearch.presentationMode: [#TITLE]
    	_gp.SourcePatientID,        

    	@EnterpriseSearch.presentationMode: [#TITLE]
        _gp.FamilyName,

    	@EnterpriseSearch.presentationMode: [#TITLE]
        _gp.GivenName        
    };

    @Search.searchable: true
    @EnterpriseSearch.enabled: true
    @EnterpriseSearch.fieldGroupForSearchQuery: 
    [{name: 'Patients', elements: [ 'VbPatientID', 'PatientID', 'GivenName' ]},{name: 'Documents', elements: [ 'Author', 'FileName']}]
 	@EnterpriseSearchHana.layoutStructuredObject: [
 	    {layerId: 'Documents', arbitraryCardinality: true, defaultExpand: #WHY_FOUND, elementList: [{element:'Author'},{element:'FileName'},{element:'Type'},{element:'DocumentID', key: true },{element:'Content'}]},
 	    {layerId: 'DocumentsAll', arbitraryCardinality: true, defaultExpand: #ALL, elementList: [{element:'DocumentID', key: true }]},
 	    {layerId: 'Cohorts', arbitraryCardinality: true, defaultExpand: #WHY_FOUND, elementList: [{element:'CohortID'},{element:'StatusID'},{element:'CreatedBy'},{element:'CreatedAt'},{element:'ChangedBy'},{element:'ChangedAt'},{element:'NoteCount'}]},
 	    {layerId: 'CohortsAll', arbitraryCardinality: true, defaultExpand: #ALL, elementList: [{element:'CohortID', key: true}]},
 	    {layerId: 'InteractionDetails', arbitraryCardinality: true, defaultExpand: #WHY_FOUND, elementList: [{element:'InteractionID'},{element:'InteractionTypeValue'},
 	                                        {element:'ValueOriginalValue'},{element:'ValueCode'},{element:'ValueCodeSystem'},{element:'ValueCodeSystemVersion'},
 	                                        {element:'AttributeOriginalValue'},{element:'AttributeCode'},{element:'AttributeCodeSystem'},{element:'AttributeCodeSystemVersion'}
 	                                        ]}]
    view PatientBestRecord as select from AllowedPatientBestRecordWithDetails mixin {
    	_PatientDocumentContent: association[1..1] to DWViews.PatientDocumentContent on _PatientDocumentContent.PatientID = PatientID;
    	_Collection: association[1..1] to CollectionModel.Item on _Collection.Id = PatientIdStr;
    	_InteractionDetails: association[1..1] to InteractionDetailsWithOtsTerm on _InteractionDetails.InteractionID = InteractionID;
    } into {
        @EnterpriseSearch.presentationMode: [#TITLE]
    	PatientID as VbPatientID,

        @EnterpriseSearch.presentationMode: [#TITLE]
    	'' || PatientID as PatientID,

    	@EnterpriseSearch.key : true
    	@EnterpriseSearch.presentationMode: [#TITLE]
    	PatientBestRecordID as PatientBestRecordID,

    	@EnterpriseSearch.presentationMode: [#TITLE]
    	@Search: { 	defaultSearchElement: true }
    	SourcePatientID,

    	@EnterpriseSearch.presentationMode: [#DETAIL]
    	_Collection.Collection.Id as CohortID,
    	@EnterpriseSearch.presentationMode: [#DETAIL]
    	_Collection.Status.Id as StatusID,
    	@EnterpriseSearch.presentationMode: [#DETAIL]
        _Collection.CreatedBy, 
        @EnterpriseSearch.presentationMode: [#DETAIL]
        _Collection.CreatedAt, 
        @EnterpriseSearch.presentationMode: [#DETAIL]
        _Collection.ChangedBy,
        @EnterpriseSearch.presentationMode: [#DETAIL]
        _Collection.ChangedAt,
        @EnterpriseSearch.presentationMode: [#DETAIL]
        0 as NoteCount,

    	@EnterpriseSearch.presentationMode: [#TITLE]
    	@EnterpriseSearch.usageMode: [ #SUGGESTION ]
    	@Search: { 	defaultSearchElement: true,	fuzzinessThreshold: 0.9, ranking: #HIGH	}
        FamilyName,

    	@EnterpriseSearch.presentationMode: [#TITLE]
    	@EnterpriseSearch.usageMode: [ #SUGGESTION ]
    	@Search: { 	defaultSearchElement: true,	fuzzinessThreshold: 0.9, ranking: #HIGH	}
        GivenName,

        @EnterpriseSearch.presentationMode: [#TITLE]
        TitleValue,

        @EnterpriseSearch.presentationMode: [#TITLE]
        @EnterpriseSearch.usageMode: [ #AUTO_FACET ]
        GenderValue,

        @EnterpriseSearch.presentationMode: [#TITLE]
        BirthDate,

        @EnterpriseSearch.presentationMode: [#TITLE]
        DeceasedDate,

        @EnterpriseSearch.presentationMode: [#TITLE]
        NationalityValue,

        @EnterpriseSearch.presentationMode: [#TITLE]
        StreetName,

        @EnterpriseSearch.usageMode: [ #SUGGESTION ]
        @EnterpriseSearch.presentationMode: [#TITLE]
        @Search: { 	defaultSearchElement: true,	fuzzinessThreshold: 0.85, ranking: #MEDIUM }
        City,

        @EnterpriseSearch.presentationMode: [#TITLE]
        PostalCode,

        @EnterpriseSearch.presentationMode: [#TITLE]
        State,

        @EnterpriseSearch.presentationMode: [#TITLE]
        CountryValue,

        @EnterpriseSearch.presentationMode: [#TITLE]
        Phone,

        @EnterpriseSearch.presentationMode: [#TITLE]
        Mobile,

        @EnterpriseSearch.presentationMode: [#TITLE]
        Fax,

        @EnterpriseSearch.presentationMode: [#TITLE]
        Email,

        @EnterpriseSearch.presentationMode: [ #DETAIL ]
    	_PatientDocumentContent.DocumentID,

    	//@Search: { 	defaultSearchElement: true,	fuzzinessThreshold: 0.9, ranking: #LOW	}
    	_PatientDocumentContent.Title,

    	//@Search: { 	defaultSearchElement: true,	fuzzinessThreshold: 0.8, ranking: #LOW	}
    	@EnterpriseSearch.presentationMode: [ #DETAIL ]
    	_PatientDocumentContent.Author,

    	@Search: { 	defaultSearchElement: true,	fuzzinessThreshold: 0.8	}
    	@EnterpriseSearch.presentationMode: [ #DETAIL ]
    	_PatientDocumentContent.FileName, 

    	@EnterpriseSearch.usageMode: [ #AUTO_FACET ]
    	@EnterpriseSearch.presentationMode: [ #DETAIL ]
    	_PatientDocumentContent.Type,

    	@EnterpriseSearch.usageMode: [ #AUTO_FACET ]
    	_PatientDocumentContent.TypeText,

    	@EnterpriseSearch.usageMode: [ #AUTO_FACET ]
    	_PatientDocumentContent.MIMEType,

    	@EnterpriseSearch.usageMode: [ #AUTO_FACET ]
    	_PatientDocumentContent.LanguageCode, 

    	//@EnterpriseSearch.snippets.enabled: true
    	@Search: { 	defaultSearchElement: true,	
    	            fuzzinessThreshold: 0.85, 
    	            ranking: #LOW,
                    termMappingDictionary : 'hc.hph.search.db.models::SearchViews.UserTermMappings', 
                    termMappingListID : ['hc.hph', 'hc.hph.custom'] }
        //@EnterpriseSearch.usageMode: [ #SUGGESTION ]
    	_PatientDocumentContent.Content as Content,

    	@EnterpriseSearch.presentationMode: [ #DETAIL ]
    	_InteractionDetails.InteractionID,

    	@EnterpriseSearch.presentationMode: [ #DETAIL ]
    	_InteractionDetails.InteractionTypeValue,

    	@EnterpriseSearch.presentationMode: [ #DETAIL ]
    	' ' as InteractionTypeText,

    	@Search: { 	defaultSearchElement: true,	fuzzinessThreshold: 0.85, ranking: #MEDIUM }
    	@EnterpriseSearch.presentationMode: [ #DETAIL ]
    	@EnterpriseSearch.usageMode: [ #SUGGESTION ]
    	_InteractionDetails.VALUE as ValueOriginalValue,

    	@Search: {  defaultSearchElement: true,	
    	            fuzzinessThreshold: 0.85, 
    	            ranking: #MEDIUM,
    	            termMappingDictionary : 'hc.hph.search.db.models::SearchViews.UserTermMappings', 
                    termMappingListID : ['hc.hph', 'hc.hph.custom'] }
    	@EnterpriseSearch.presentationMode: [ #DETAIL ]
    	@EnterpriseSearch.usageMode: [ #SUGGESTION ]
    	_InteractionDetails.VALUE_CODE as ValueCode,

    	@EnterpriseSearch.presentationMode: [ #DETAIL ]
    	_InteractionDetails.VALUE_CODE_SYSTEM as ValueCodeSystem,

    	@EnterpriseSearch.presentationMode: [ #DETAIL ]
    	_InteractionDetails.VALUE_CODE_SYSTEM_VERSION as ValueCodeSystemVersion,

        _InteractionDetails.ValueLanguage as ValueLanguage,

    	@Search: {  defaultSearchElement: true,	
    	            fuzzinessThreshold: 0.9, 
    	            ranking: #MEDIUM,
    	            termMappingDictionary : 'hc.hph.search.db.models::SearchViews.UserTermMappings', 
                    termMappingListID : ['hc.hph', 'hc.hph.custom'] }        
        @EnterpriseSearch.usageMode: [ #SUGGESTION ]
        _InteractionDetails.ValueText as ValueText, 

    	@EnterpriseSearch.presentationMode: [ #DETAIL ]
    	_InteractionDetails.ATTRIBUTEORIGINALVALUE as AttributeOriginalValue,

    	@EnterpriseSearch.presentationMode: [ #DETAIL ]
    	_InteractionDetails.ATTRIBUTE_CODE as AttributeCode,

    	@EnterpriseSearch.presentationMode: [ #DETAIL ]
    	_InteractionDetails.ATTRIBUTE_CODE_SYSTEM as AttributeCodeSystem,

    	@EnterpriseSearch.presentationMode: [ #DETAIL ]
    	_InteractionDetails.ATTRIBUTE_CODE_SYSTEM_VERSION as AttributeCodeSystemVersion 

    };  
    
	// Generate Term Mapping Views
	view OtsTerminologySourcesDistinct as
		select from OtsViews.ConceptTerms { ConceptVocabularyID as VocabularyID }
		union
		select from OtsViews.Vocabularies as _v
		inner join SearchTables.TermMappingSource as _tm
		on _tm.VOCABULARY_ID = _v.ID {    
			_v.ID as VocabularyID
		}
	;
	
	view OtsTerminologySourcesWithUsage as
		select from OtsTerminologySourcesDistinct mixin {
			_TermMappingSource:
				association[1..1] to SearchTables.TermMappingSource
				on _TermMappingSource.VOCABULARY_ID = VocabularyID;
		} into {
			VocabularyID as VOCABULARY_ID,
			count(_TermMappingSource.VOCABULARY_ID) as Cnt
		}
		where VocabularyID in ('ots.CSP', 'ots.CST', 'ots.MeSH')  // 'ots.SNOMED.SNOMEDCT_US'
		group by VocabularyID
	;
};
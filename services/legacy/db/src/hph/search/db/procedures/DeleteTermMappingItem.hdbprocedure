PROCEDURE "hc.hph.search.db.procedures::DeleteTermMappingItem"( 
	
	IN  it_delete "hc.hph.search.db.models::Search.TermMappingItems",
	OUT ot_error "hc.hph.core.db.models::TT_ODATA_ERROR"
	) 
	
LANGUAGE SQLSCRIPT SQL SECURITY DEFINER AS
	lv_count BIGINT;
	lv_check BIGINT;
BEGIN
    
    select count(*) into lv_count from :it_delete where length(trim(' ' from "MAPPING_ID")) = 0;
	if :lv_count > 0 then 
		ot_error = 
			select 400 as http_status_code, 'Bad Request' error_message, 'Error updating termmapping: MAPPING_ID field cannot be empty.' detail from "hc::DUMMY";
		return;	
	end if;
	
    select count(*) into lv_count from :it_delete where length(trim(' ' from "USER_ID")) = 0;
	if :lv_count > 0 then 
		ot_error = 
			select 400 as http_status_code, 'Bad Request' error_message, 'Error updating termmapping: USER_ID field cannot be empty.' detail from "hc::DUMMY";
		return;	
	end if;	
	
	delete from "hc.hph.search.db.models::Search.TermMappingItems" as tmi
		where exists ( select 1 from :it_delete as tmi2 where tmi."MAPPING_ID" = tmi2."MAPPING_ID" AND tmi."USER_ID" = tmi2."USER_ID");
		
END;
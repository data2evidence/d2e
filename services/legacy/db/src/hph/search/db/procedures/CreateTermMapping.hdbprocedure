PROCEDURE "hc.hph.search.db.procedures::CreateTermMapping" (
    
	IN  it_new "hc.hph.search.db.models::TT_SV_TERMMAPPINGS",
	OUT ot_error "hc.hph.core.db.models::TT_ODATA_ERROR"    
    
)
	LANGUAGE SQLSCRIPT SQL SECURITY DEFINER AS
	lv_count INTEGER;
	lv_newid NVARCHAR(32);
BEGIN

	select count(*) into lv_count from :it_new where length(trim(' ' from "TERM_1")) = 0;
	
	if :lv_count > 0 then 
		ot_error = 
			select 400 as http_status_code, 'Bad Request' error_message, 'Error updating termmappings: term_1 must not be empty.' detail from "hc::DUMMY";
		return;	
	end if;
	
	select count(*) into lv_count from :it_new where length(trim(' ' from "TERM_2")) = 0;
	if :lv_count > 0 then 
		ot_error = 
			select 400 as http_status_code, 'Bad Request' error_message, 'Error updating termmappings: term_2 must not be empty.' detail from "hc::DUMMY";
		return;	
	end if;	
	
	select top 1 "MAPPING_ID" into lv_newid from :it_new; 
	if lv_newid = '' then
	   select cast(SYSUUID as NVARCHAR(32)) into lv_newid from "hc::DUMMY";
	end if;

	insert into "hc.hph.search.db.models::Search.TermMappings" (
			"MAPPING_ID",
			"LIST_ID",
			"LANGUAGE_CODE",
			"TERM_1", 
			"TERM_2", 
			"WEIGHT",
			"CREATED_BY", 
			"CREATED_AT"
			)
		( select 
			lv_newid,
			'hc.hph.custom',
			LANGUAGE_CODE,
			TERM_1,
			TERM_2,
			WEIGHT, 
			SESSION_CONTEXT( 'APPLICATIONUSER' ), 
			CURRENT_TIMESTAMP
		 from :it_new )
	;
END

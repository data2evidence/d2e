namespace hc.hph.cdw.db.models;

using hc.hph.cdw.db.models::DWTypes as DT;
using hc.hph.cdw.db.models::DWAnnotations as DWAnnotation;
using hc.hph.cdw.db.models::DWEntities as DWEnt;
using hc.hph.di.model::DataIntegration as DI;
//using hc.hph.custom.cdw.db.models::DWExtendFP00 as ExtFP00;
//using hc.hph.custom.cdw.db.models::DWExtendFP01 as ExtFP01;


/**
    Theese entities facilitate the persistence of metadata of the Unstructured Documents.
    The actual document content shall be persisted outside CDW (in an external 
*/

context DWDocuments {
  
    @DWAnnotation.Entity.Name : 'Document'
    @DWAnnotation.Entity."Group" : 'ClinicalDataWarehouse'
    @DWAnnotation.Entity.WriteEnabled : True
    @DWAnnotation.Entity.ActiveRecordCount : { CountObject : '"hc.hph.cdw.db.models::DWViews.Document"'}
    @DWAnnotation.Table.Type : #Key
    entity Document_Key {
        key DWID : DT.DWID; // Surrogate key -> Hash(DWSource;ConditionID)
        DWSource : DT.DWSource not null;    
        DWAuditID : DT.DWAuditID not null;
        @DWAnnotation.Column : { Type: #BusinessKey }
        DocumentID : String(1024) not null; // External Document Id, if supplied
		Audit_Assoc : association to DI.AuditLog on Audit_Assoc.AuditLogID = DWAuditID;    
        Document_Attr_Assoc : association to Document_Attr on Document_Attr_Assoc.DWID = DWID;     
    } technical configuration {
        column store; 
        partition by keeping existing layout;
    };   
  
    @DWAnnotation.Entity.Name : 'Document'
    @DWAnnotation.Table.Type : #Attribute
    @DWAnnotation.Table.Label : 'Document Attributes' 
    entity Document_Attr {
        key DWDateFrom: DT.DWTimestamp;
        key DWID : DT.DWID;
        DWDateTo : DT.DWTimestamp;
        DWAuditID : DT.DWAuditID not null;
        
        Title: String(1024);
        Author: String(1024);
        FileName: String(256);
        Type: String(128);
        MIMEType: String(256);
        LanguageCode: String(2);
        
        CreatedAt: UTCTimestamp;
        CreatedBy: String(256);
        ChangedAt: UTCTimestamp;
        ChangedBy: String(256);     
        
     //   Extend : ExtFP00."Document";
        
        Audit_Assoc : association to DI.AuditLog on Audit_Assoc.AuditLogID = DWAuditID; 
        Document_Key_Assoc : association to Document_Key on Document_Key_Assoc.DWID = DWID;      
        Document_Type_Assoc : association to Document_Type on Document_Type_Assoc.DWDocumentType =  Type;   
    } technical configuration {
        fulltext index fti_title on (Title) fast preprocess off language detection ('en') fuzzy search index on;
        fulltext index fti_author on (Author) fast preprocess off language detection ('en') fuzzy search index on;
        fulltext index fti_filename on (FileName) fast preprocess off language detection ('en') fuzzy search index on;
        column store;
        partition by keeping existing layout; 
    };

    @DWAnnotation.Link.Name : 'InteractionDocument'
    @DWAnnotation.Link."Group" : 'ClinicalDataWarehouse'
    @DWAnnotation.Link.WriteEnabled : True
    @DWAnnotation.Table.Type : #Link
    entity Interaction_Documents_Link{
        key DWLinkID: DT.DWID; // Hash(DWSource;InteractionID;DocumentID)
        @DWAnnotation.Column : { Type: #ForeignKey, Entity : { Name : 'Interaction' } }        
        DWID_Interaction : DT.DWID not null;
        @DWAnnotation.Column : { Type: #ForeignKey, Entity : { Name : 'Document' } }
        DWID_Document : DT.DWID not null;

        DWDateTo : DT.DWTimestamp;
        DWAuditID : DT.DWAuditID not null;       
        
        Interactions_Key_Assoc : association to DWEnt.Interactions_Key on Interactions_Key_Assoc.DWID = DWID_Interaction; 
        Documents_Key_Assoc : association to Document_Key on Documents_Key_Assoc.DWID = DWID_Document;
        Link_Attr_Assoc : association to Interaction_Documents_Link_Attr on Link_Attr_Assoc.DWLinkID = DWLinkID;
        Audit_Assoc : association to DI.AuditLog on Audit_Assoc.AuditLogID = DWAuditID; 
    } technical configuration {
        column store; 
        partition by keeping existing layout;
    };
  
    @DWAnnotation.Link.Name : 'InteractionDocument'
    @DWAnnotation.Table.Type : #LinkAttribute
    @DWAnnotation.Table.Label : 'InteractionDocument Attributes'  
    entity Interaction_Documents_Link_Attr{
        key DWDateFrom: DT.DWTimestamp;
        key DWLinkID : DT.DWID;
        
        DWDateTo: DT.DWTimestamp;
        DWAuditID : DT.DWAuditID not null;
        LinkType : String(256);
  //      Extend : ExtFP00."Interaction_Document_Link";
        
        Int_Doc_Lnk_Ass : association to Interaction_Documents_Link on Int_Doc_Lnk_Ass.DWLinkID = DWLinkID;
        Audit_Assoc : association to DI.AuditLog on Audit_Assoc.AuditLogID = DWAuditID;       
    } technical configuration {
        column store; 
        partition by keeping existing layout;
    };
  
  /*
  TODO: In FP3, content of this table should be merged with Interaction_Document_Link. 
  In FP2, cannot be achieved due to issues in patient/document search. 
  */
  entity TA_Document_Interactions_Link{
        key DWLinkID: DT.DWID; // Hash(DWSource;InteractionID;DocumentID)
        DWID_Interaction : DT.DWID not null;
        DWID_Document : DT.DWID not null;

        DWDateTo : DT.DWTimestamp;
        DWAuditID : DT.DWAuditID not null;   
        PluginID : String(256); //Text Processing plugin that created the interactions
        
        Interactions_Key_Assoc : association to DWEnt.Interactions_Key on Interactions_Key_Assoc.DWID = DWID_Interaction; 
        Documents_Key_Assoc : association to Document_Key on Documents_Key_Assoc.DWID = DWID_Document;
        Audit_Assoc : association to DI.AuditLog on Audit_Assoc.AuditLogID = DWAuditID; 
    } technical configuration {
        column store; 
    };
     
  entity Document_Type {
    key DWDocumentType : String(128); 
    TAConfiguration : String(256);    //Deprecated. 
    Document_Type_Description_Assoc : association to Document_Type_Description on Document_Type_Description_Assoc.DWDocumentType = DWDocumentType;
    } technical configuration {
        column store; 
    };
  
  entity Document_Type_Description {
    key DWDocumentType : String(128);
    key LanguageCode : String(2);
    ShortText : String(128);
    
    Document_Type_Assoc : association to Document_Type on Document_Type_Assoc.DWDocumentType = DWDocumentType;    
    } technical configuration {
        column store; 
    }; 
  
  /* Deprecated */
  entity PropertySet {
    key SetID : String(128);
    key PropertyName : String(128);
    PropertyValue : String(256);   
    } technical configuration {
        column store; 
    };
};

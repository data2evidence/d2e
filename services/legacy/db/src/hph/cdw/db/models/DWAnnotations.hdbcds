namespace hc.hph.cdw.db.models;

context DWAnnotations {
         
    // Identifiers for table types
    type TableTypeIdentifiers : String(18) enum { 
        Attribute      = 'Attribute';       // Defines table storing only descriptive attributes
        EAV            = 'EAV';             // Defines table to store data in entity-attribute-value fashion
        Key            = 'Key';             // Defines table storing unique business keys
        Link           = 'Link';            // Defines table storing links between key table
        LinkAttribute  = 'LinkAttribute';   // Defines table storing descriptive attributes for links        
        // Table that do not follow a CDW specific modelling scheme should not have a table type set
    };
    
    // Identifiers for column types
    type ColumnTypeIdentifiers : String(17) enum {
        BusinessKey         = 'BusinessKey';        // Business key is the driver for a key table and can span multiple fields        
        ForeignKey          = 'ForeignKey';         // Foreign key to a key table of an entity
        EntityAttribute     = 'EntityAttribute';    // Defines the column as attribute id to which the value is attached
        SemanticValidFrom   = 'SemanticValidFrom';  // Defines column to store "valid-from" for slowly changing dimension
        SemanticValidTo     = 'SemanticValidTo';    // Defines column to store "valid-to" for slowly changing dimension
    };
        
    // Entity name
    type EntityName : String(100);  // Identifier for a semantic entity

    // Link name    
    type LinkName   : String(100);  // Identifier for a link
    
    // Group name    
    type GroupName  : String(100);  // Identifier for a group
        
    // Entity - All CDS entities (tables) annoted with the same value compose a semantic entity
    annotation Entity {
        Name                : EntityName;
        "Group"             : GroupName; // Should be assigned to the key or one table resp. only
        WriteEnabled        : Boolean;  // Permits writing with CDW API
        ActiveRecordCount   {
	        CountObject     : String(100);
	        CountCondition  : String(100);
	        CountAttribute  : String(100);
        };
    };

    // Link - All CDS entities (tables) annoted with the same value compose a semantic link
    annotation Link {
        Name            : LinkName;
        "Group"         : GroupName; // Should be assigned to the link table only        
        WriteEnabled    : Boolean;  // Permits writing with CDW API
    };
    
    // Table annotations
    annotation Table {
        Type            : TableTypeIdentifiers;
        Alias           : String(100); // Alias can be used instead of table name in code references
        Label           : String(100); // Label shown instead of the table name 
        WriteEnabled    : Boolean;  // Permits writing with CDW API. Property overwrites the setting of the Entity/Link
    };
        
    // Column annotations
    annotation Column {
        Type    : ColumnTypeIdentifiers;  // Column type
        Element : String(100);  // Required for structured types
        Entity  {               
            Name : EntityName;  // Required for foreign keys
        };
    };
    
};
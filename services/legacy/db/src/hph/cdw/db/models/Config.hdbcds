namespace hc.hph.cdw.db.models;

using hc.hph.cdw.db.models:: DWTypes as DT;
using hc.hph.cdw.db.models:: DWEntities as DWEnt;
using hc.hph.cdw.db.models:: DWEntitiesEAV as DWEntEAV;

context Config {

    table type ChangeLog {
        CreatedBy: String(256);    // Application User who created this ORG record.
        CreatedAt: UTCTimestamp;   // Time of creation. 
        ChangedBy: String(256);    // Application user who changed this ORG record.
        ChangedAt: UTCTimestamp;   // Time of change. KNOWN ISSUE: There is an overlap with VALID FROM/TO fields. 
    };

    /***************
     *     ORG     *
     ***************/

    entity Org {

        key OrgID: String(100);            // Legal entity or the organizational unit, for which the users are assigned.    
        key ValidFrom: UTCTimestamp;           // FROM Validity of this user entered record 
        ExternalOrgID: String(255);            // External org id, 
        ExternalSource: String(5);
        ValidTo: UTCTimestamp;           // TO Validity of this user entered record

        ParentOrgID: String(100);            // Parent Org ID.
        OrgName: String(5000);
        Description: String(256);

        Type: String(100);            // Type of the ORG.
        Status: String(100);            // Activation, Deactivation. Replace with Annotations.

        Address: DT.Address;             // Address of the ORG.
        Telecom: DT.Contact;             // Contact details of the ORG.
        URL: String(256);            // URL of the ORG.

        ChangeDetails: Config.ChangeLog;   	  // Change Log.       

    } technical configuration {
        column store;
    };

    /* 
        Used for flattening the organizational unit hierarchy. This will be the basis for Analytic Privileges.
        Introduced to get around the limitation that Enterprise Search has with Hierarchy View.
        Hierarchy View will continue to be used in other use cases such as Organizational Unit Management.
    */
    entity OrgAncestors {
        key OrgID: String(100);
        key AncestorOrgID: String(100);
        Distance: Integer;
    } technical configuration {
        column store;
    };

    entity OrgTexts {

        key OrgID: String(100);              // Legal entity or the organizational unit, for which the users are assigned.      
        key lang: String(2);                // Language key 
        key ValidFrom: UTCTimestamp;             // FROM Validity of this user entered record 
        ValidTo: UTCTimestamp;             // TO Validity of this user entered record
        Name: String(100);              // Legal Entity Name. Primarily used as short text.
        Description: String(256);              // Long Text.   
        ChangeDetails: Config.ChangeLog;         // Change Log.

        Org_Assoc: association to Config.Org on Org_Assoc.OrgID = OrgID;  // Associations.    

    } technical configuration {
        column store;
    };

    /*
       Used for storing organizational attributes, both CHP delivered and custom attributes
    */

    entity OrgAttribs {

        //key OrgID: String(100);  //The unique ID which distinguish any organization being created.
        key AttribID: String(100);  //The unique ID which distinguishes an attribute.
        Label: String(100); //	This will be the text bundle key for an attribute’s label field.
        Description: String(200); //	This will be a description about the attribute.
        Datatype: String(64);  //The SQL datatype of the attribute value.
        InputType: String(64);  //The input type expected from the UI.
        Visible: Boolean;  //This is to specify if the attribute needs to be available or visible on the UI while creating, updating or viewing an Org.
        Required: Boolean;  //This is to specify if the attribute is a mandatory field while creating or updating an Org.
        Enabled: Boolean;  //This is to specify if the attribute is an editable field while creating or updating an Org.
        IsConfigurable: Boolean;  //This is to specify if the attribute is an editable field while creating or updating an Org.
        Length: Integer;  //This is to specify the expected length of the input value for the attribute.
        DefaultVal: String(1032);  //In case if the user want to set a default value for the attribute he / she is adding.
        Placeholder: String(256);  //The placeholder for the attribute field when it appears in the UI field while creating or updating an Org.
        Tooltip: String(256);  //The tooltip that should apppear for the attribute field while creating or updating an Org.
        AttrOrder: Integer;  //The order number for the particular attribute when the attributes are displayed.
        IsCustom: Boolean;  //This is to specify if the attribute’s configurations are changeable from the configuration UI or not.
        CustomUrl: String (256);
        //Scale: Integer;
        //Values: String (1032);
        CreatedBy: String(256);  //Saves the username of the user who is adding this attribute.
        CreatedAt: UTCTimestamp DEFAULT CURRENT_TIMESTAMP; //Saves the timestamp of last update on this attribute.
        UpdatedBy: String(256);  //Saves the username of the user who is editing this attribute.
        UpdatedAt: UTCTimestamp DEFAULT CURRENT_TIMESTAMP; //Saves the timestamp of last update on this attribute.
    } technical configuration {
        column store;
    };


    /*
       Used for Extensions, in the form of name-value pairs
    */

    entity OrgAttrEAV {

        key OrgID: String(100);      // Legal entity or the organizational unit, for which the users are assigned.      
        key ValidFrom: UTCTimestamp;     // FROM Validity of this user entered record 
        ValidTo: UTCTimestamp;     // TO Validity of this user entered record

        key Attribute: String(100);      // Attribute, added as part of extensions. 
        Value: String(100);      //  Value

        ChangeDetails: Config.ChangeLog; // Change Log.

        Org_Assoc: association to Config.Org on Org_Assoc.OrgID = OrgID; //Associations         
    } technical configuration {
        column store;
    };

    /***************************
     *     USER ORG MAPPING    *
     ***************************/


    entity UserOrgMapping {

        UserName: String(256);             // Application user and his mapping to the ORG.
        OrgID: String(100);             // Legal entity or the organizational unit, for which the users are assigned.      

        ChangeDetails: Config.ChangeLog;    // Change Log.
        Persona: String(100);

        Org_Assoc: association to Config.Org on Org_Assoc.OrgID = OrgID;
        //TODO : Association to USER yet to be added.
    } technical configuration {
        column store;
    };



    /***************************
     *     View on ORG         *
     ***************************/

    // Basic view, just to get the corresponding org hierarchies.
    view "V_ORG" as select from Config.Org {
        OrgID,
            ParentOrgID,
            ValidFrom,
            ValidTo
    } where current_utctimestamp >= ValidFrom and(current_utctimestamp <= ValidTo or ValidTo IS NULL);

}
PROCEDURE "hc.hph.di.statistics.db.procedures::loadRecordsCount" ( 
	IN DataIngestionID INTEGER,
	IN AuditLogID BIGINT,
	IN StartTime TIMESTAMP,
	IN EndTime TIMESTAMP,	
	IN ProfileID BIGINT,
	IN ProfileName NVARCHAR(512),
	IN ExtensionID NVARCHAR(256),
	IN ExtensionName NVARCHAR(512),
	IN ExtensionAlias NVARCHAR(64),
	IN SourceID NVARCHAR(5),
	IN SourceName NVARCHAR(512),	
	IN EntityRecord "hc.hph.di.statistics.db.model::Statistics.EntityRecord"
	
	) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER
	 AS
BEGIN
DECLARE loadscount INTEGER:=0;
DECLARE lv_count INTEGER;
DECLARE id_exists INTEGER:=0;

  	DECLARE CURSOR c_entity FOR
	SELECT "Entity","RecordCount","Loads" from :EntityRecord;
	DECLARE CURSOR c_record FOR
	SELECT "Entity","RecordCount","Loads" from :EntityRecord;
	
	FOR cur_row as c_entity DO
	
		select count(*) into loadscount from "hc.hph.di.statistics.db.model::Statistics.DataIngestionEntityLoads" where "Entity"=cur_row."Entity" and "LoadDate"=TO_DATE(:EndTime);
		
		CALL "hc.hph.di.statistics.db.procedures::validateAuditLogID"(:AuditLogID,:id_exists);
		
		if id_exists=0 THEN			
			UPSERT "hc.hph.di.statistics.db.model::Statistics.DataIngestionEntityLoads"("DataIngestionID","LoadDate","Entity","Loads")
			values(:DataIngestionID,
			TO_DATE(:endTime),
			cur_row."Entity",
			CASE WHEN :loadscount=0 THEN cur_row."Loads"
				ELSE (Select "Loads"+cur_row."Loads" from "hc.hph.di.statistics.db.model::Statistics.DataIngestionEntityLoads" where "Entity"=cur_row."Entity" AND "LoadDate"=TO_DATE(:endTime))
			 	END) 
			WHERE "Entity"=cur_row."Entity" AND "LoadDate"=TO_DATE(:EndTime);
		END IF;
	END FOR;	
	
  	FOR cur_row as c_record DO
	
	UPSERT "hc.hph.di.statistics.db.model::Statistics.DataIngestionLoadRecords"
			("DataIngestionID","LoadDate","AuditLogID","Entity","SourceID","SourceName","ExtensionID",
			"ExtensionName","ExtensionAlias","ProfileID","ProfileName","Duration","RecordCount")
			values(
			:DataIngestionID,
			(SELECT TO_DATE(:EndTime)FROM "hc::DUMMY"),
			:AuditLogID,
			cur_row."Entity",
			:SourceID,
			:SourceName,
			:ExtensionID,
			:ExtensionName,
			:ExtensionAlias,
			:ProfileID,
			:ProfileName,
			(SELECT SECONDS_BETWEEN (:StartTime,:EndTime) FROM "hc::DUMMY"),
			cur_row."RecordCount")
		WHERE "Entity"=cur_row."Entity" AND "LoadDate"=TO_DATE(:EndTime)AND "AuditLogID"=:AuditLogID;			
	END FOR;	
	

END;
namespace hc.hph.di.documents.WorkBench.db.models;

using hc.hph.cdw.db.models::DWDocuments as DDoc;
using hc.hph.cdw.db.models::DWTypes as DT;
using hc.hph.cdw.db.models::DWViews as DV;
using hc.hph.cdw.db.models::DWViewsEAV as DV_EAV;
using hc.hph.cdw.db.models::DWEntities as DWE;
using hc.hph.di.model::DataIntegration as DI;
using hc.hph.di.documents.staging.db.models::DocumentProcessing as DP;
using hc.hph.di.documents.staging.db.models::DocumentStage as DS;
using hc.hph.di.documents.staging.db.models::DocumentProcessing.Status as Status;


context DWBViews {
 //Document Processing and Pipelining
    //Action Design

	
entity ProcessingStage_WB{
        key DWID         : DT.DWID;
        key DWDateFrom   : UTCTimestamp default '0000-00-00';
        DWDateTo		 : UTCTimestamp default '0000-00-00';
        DWSource         : DT.DWSource not null;// Shortname of the source which is used as delimiter for the DWID
        DocumentID       : String(1024) not null;// Document ID 
        DWAuditID        : DT.DWAuditID; // AuditLogId for a given document
        BatchID          : Integer64 not null; // Used to process a set of documents together. It can be filled with DWAuditId of the profile
        ProcessingMode   : String(1); // 'D' - For deletion, NULL for Create/Update
        DWParentEntitySource : DT.DWSource; // If null, DWSource is used        
        ParentEntityID   : String(1024); // Interaction Id or null
        ParentEntityType : String(256); //Supported value: hc.hph.cdw.Interaction
        FileName         : String(256);
        MIMEType         : String(256);
        Content          : LargeBinary;
        Title            : String(1024);
        Author           : String(1024);
        Type             : String(128); //Check - if Type can be made available in the intermediate stage
        LanguageCode     : String(2);
        CreatedAt        : UTCTimestamp;
        CreatedBy        : String(256);
        ChangedAt        : UTCTimestamp;
        ChangedBy        : String(256);
        Status			 : UTCTimestamp default null;
        ClearStage		 : String(1) default null;
        
    };

 entity TA_PlainText{
 key DWID :	DT.DWID;
 PlainText : LargeString;
 LastModifiedOn:UTCTimestamp default null;
 };   
     
view RecentProcessedDocuments as select from ProcessingStage_WB
{
DWAuditID,
Status,
DWID,
max(DWDateFrom) as "DWDateFrom"
}where "DWAuditID" !=0 group by DWAuditID,Status,DWID;

view ProcessedDocumentWB as select  from ProcessingStage_WB as stage
inner join  RecentProcessedDocuments as RPD on stage.DWID = RPD.DWID AND stage.DWDateFrom = RPD.DWDateFrom
left outer join PatientName as Pname on stage.ParentEntityID=Pname.SourceInteractionID and stage.DWParentEntitySource= Pname.Source
left outer join DV.DocumentTypePreferredText as Prefertext on stage.Type = Prefertext.DWDocumentType 
  
{
stage.Status,
BatchID,
RPD.DWID,
Content,
FileName,
Title,
Prefertext.ShortText,
Pname.PatientName,
To_NVARCHAR(Pname.PatientID) as "PatientID",
RPD.DWDateFrom,
stage.CreatedBy,
stage.DWAuditID

}where stage.DWAuditID is not null  and stage.ClearStage is null and stage.CreatedBy = SESSION_CONTEXT('XS_APPLICATIONUSER');

view ProcessedDocumentWBdistinct as select from ProcessedDocumentWB 
{
DWID,
FileName,
max(Status) as "Status"
}group by FileName,DWID;


view ProcessedDocumentsUpdated as select from ProcessedDocumentWB as pd
inner join ProcessedDocumentWBdistinct as pdd  on pd.DWID=pdd.DWID
{
pd.DWID,
pd.Content,
pd.FileName,
pd.PatientID,
pd.Title,
pd.PatientName,
pd.ShortText,
pdd.Status,
pd.DWAuditID
} ;
view MaxBatchID as select from  ProcessedDocumentWB
{

max(Status) as "Status"
};

view LastProfileRun as select from  ProcessedDocumentWB as processed
inner join MaxBatchID as bid on processed.Status=bid.Status
{

DWID,
FileName,
PatientName,
ShortText,
PatientID

}where processed.CreatedBy = SESSION_CONTEXT('XS_APPLICATIONUSER');


view UnprocessedDocuments as select from ProcessingStage_WB as stage
left outer join PatientName as Pname on stage.ParentEntityID=Pname.SourceInteractionID and stage.DWParentEntitySource= Pname.Source
left outer join DV.DocumentTypePreferredText as Prefertext on stage.Type=Prefertext.DWDocumentType
{
 		stage.DocumentID,    	
    	stage.BatchID,
    	stage.FileName ,
    	stage.MIMEType,
    	//stage.Content,
    	stage.Title,
    	stage.Author,    	
    	stage.Type,    	
    	stage.LanguageCode,
    	stage.CreatedAt,      
        stage.CreatedBy,  
        stage.ChangedAt,      
        stage.ChangedBy,       
   		stage.DWID,
   		stage.DWDateFrom,
   		stage.DWAuditID,
 //  	DocumentStatus.ScheduleID,
   		Pname.Source,
		Pname.PeriodStart,
		Pname.PeriodEnd,   
   		Pname.FamilyName,
   		Pname.GivenName,
   		Pname.SourceInteractionID,
   		Pname."PatientName",
   		Prefertext.ShortText
   
}where stage.Status is null and stage.CreatedBy = SESSION_CONTEXT('XS_APPLICATIONUSER');
   
   
   
 	view PatientName as select  from DV.Interactions "interactions" mixin {
	_PatientName : association [1..*] to DV.Patient on PatientID = _PatientName.PatientID; 
	} into {
	SourceInteractionID,
	Source,
	PeriodStart,
	PeriodEnd,
	_PatientName.FamilyName,
	_PatientName.GivenName,
	_PatientName.GivenName || ' ' || _PatientName.FamilyName as "PatientName",
	_PatientName.PatientID
	
	};
	
	
	view PipelineIDS as select from DP.DocumentTypePipelineMapping as DTPM
	left outer join DV.DocumentTypePreferredText as Prefertext on DTPM.DWDocumentType=Prefertext.DWDocumentType
	{
	PipelineID,
	Prefertext.ShortText
	} where "PipelineID"!='hc.hph.plugins.documents.DocumentProcessingPipeline';
	
	
	
    view DerivedInteractions as select from DV.Document as _d
 	inner join DDoc.Interaction_Documents_Link as _Link on _Link.DWID_Document = _d.DocumentID
 	inner join DDoc.Interaction_Documents_Link_Attr as _Attr on _Attr.DWLinkID = _Link.DWLinkID 
 	inner join DV.Interactions as _i on _i.InteractionID = _Link.DWID_Interaction 
 	inner join DV_EAV.Interaction_Details as _id on _i.InteractionID = _id.InteractionID distinct{
 		_d.DocumentID,
 		_d.OriginalDocumentID,
 		_d.Source,
 		_i.InteractionID ,
         _i.SourceInteractionID,
         _i.Source as InteractionSource,
 		_i.InteractionTypeValue,
 		_i.ParentInteractionID,
 		_id.AttributeValue,
 		_id.Value,
 		_id.ValueCode,
 		_id.ValueCodeSystem,
 		_Attr.LinkType as "PluginID"
 	} where _Attr.LinkType is not null;
 	

view ProcessedDocumentWBdistinct1 as select from ProcessingStage_WB as wb
{
DWID,
FileName,

max("DWDateFrom") as "DWDateFrom"
}where wb.Status is not null group by FileName,DWID;

view OrginalDocWb as select from ProcessedDocumentWBdistinct1 as pd
inner join ProcessingStage_WB as pdd  on pd.DWID=pdd.DWID and pd.DWDateFrom=pdd.DWDateFrom
{
pd.DWID,
pdd.Content,
pd.FileName
};    
        
        view DKres as select from DDoc.Document_Key {
        DWSource,
        DWID,
        DocumentID as "FileName"
        };
        
      	
};



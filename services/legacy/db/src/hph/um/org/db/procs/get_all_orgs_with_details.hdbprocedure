PROCEDURE "hc.hph.um.org.db.procs::get_all_orgs_with_details" 
	( IN i_own_org_id NVARCHAR(100),
		OUT o_org_details "hc.hph.um.org.db.models::ConfigTypes.Org_Details",
		OUT o_org_details_eav table("OrgID" NVARCHAR(100), "Attribute" NVARCHAR(100), "Value" NVARCHAR(100)) ) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY DEFINER
	READS SQL DATA AS
BEGIN
	
	declare v_org_hier table (RESULT_NODE NVARCHAR(100), LEVEL INTEGER, IS_LEAF INTEGER);
	
	if(:i_own_org_id is null) then
			v_org_hier = select RESULT_NODE, LEVEL, IS_LEAF 
							from "hc.hph.cdw.db.models::CVOrg/hier/ORG_PC_HIER"; -- where LEVEL = 0 and query_node = '10';
	else
		v_org_hier = select RESULT_NODE, LEVEL, IS_LEAF 
							from "hc.hph.cdw.db.models::CVOrg/hier/ORG_PC_HIER"  
							where QUERY_NODE = :i_own_org_id;
	end if;	
	
	o_org_details = select distinct "org_hier"."RESULT_NODE" as "OrgID", 
						   "org_hier"."LEVEL" as "Level",
						   "org_hier"."IS_LEAF" as "Leaf",
						   "org"."ExternalOrgID" as "ExternalOrgID",
						   "org"."ExternalSource" as "ExternalSource",
 						   "org"."ValidFrom" as "ValidFrom",
						   "org"."ValidTo" as "ValidTo",
						   "org"."ParentOrgID" as "ParentOrgID",
						   "org"."Type" as "Type",
						   IFNULL("org"."Status", 'Active') as "Status",
						   "org"."Address.StreetName" as "Address.StreetName",
						   "org"."Address.StreetNumber" as "Address.StreetNumber",
						   "org"."Address.PostOfficeBox" as "Address.PostOfficeBox",
						   "org"."Address.City" as "Address.City",
						   "org"."Address.PostalCode" as "Address.PostalCode",
						   "org"."Address.State" as "Address.State",
                           "org"."Address.Region" as "Address.Region",
						   "org"."Address.Country.OriginalValue" as "Address.Country.OriginalValue",
                           "org"."Address.Country.Code" as "Address.Country.Code",
                           "org"."Address.Country.CodeSystem" as "Address.Country.CodeSystem",
                           "org"."Address.Country.CodeSystemVersion" as "Address.Country.CodeSystemVersion",
                           "org"."Telecom.Phone" as "Telecom.Phone",
                           "org"."Telecom.Mobile" as "Telecom.Mobile",
                           "org"."Telecom.Fax" as "Telecom.Fax",
                           "org"."Telecom.Email" as "Telecom.Email",
						   "org"."URL" as "URL",
						   "org"."ChangeDetails.CreatedBy" as "ChangeDetails.CreatedBy",
						   "org"."ChangeDetails.CreatedAt" as "ChangeDetails.CreatedAt",
						   "org"."ChangeDetails.ChangedBy" as "ChangeDetails.ChangedBy",
						   "org"."ChangeDetails.ChangedAt" as "ChangeDetails.ChangedAt",
						   "org"."OrgName" as "Name",
						   "org"."Description" as "Description",
						   'A' as "Attribute",	-- to be removed later
						   'V' as "Value"		-- to be removed later
						from :v_org_hier as "org_hier"
						inner join "hc.hph.cdw.db.models::Config.Org" as "org" 
							on "org"."OrgID" = "org_hier"."RESULT_NODE"
						where 
							( CURRENT_UTCTIMESTAMP > "org"."ValidFrom" and (CURRENT_UTCTIMESTAMP < "org"."ValidTo" or "org"."ValidTo" IS NULL )) 	-- push this before join.  or "org"."ValidTo" IS NULL
						order by "org"."OrgID"; 		
						
		o_org_details_eav = select "OrgID", "Attribute", "Value" from "hc.hph.cdw.db.models::Config.OrgAttrEAV" 
								where "OrgID" in (select RESULT_NODE as "OrgID" from :v_org_hier)
								and (current_utctimestamp >= "ValidFrom" and current_utctimestamp < "ValidTo")
								order by "OrgID";																
		
END;
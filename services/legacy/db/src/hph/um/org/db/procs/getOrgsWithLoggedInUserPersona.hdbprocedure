PROCEDURE "hc.hph.um.org.db.procs::getOrgsWithLoggedInUserPersona" ( 
	IN iv_username NVARCHAR(256),
	OUT ot_orgInfo "hc.hph.um.org.db.models::ConfigTypes.OrgInfo") 
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER 
	--DEFAULT SCHEMA <default_schema_name>
	READS SQL DATA AS
BEGIN
declare it_userAssignedOrgs table ("OrgID" NVARCHAR(100), "Persona" NVARCHAR(100));
declare it_childAndSelfOrgs table("OrgID" NVARCHAR(100),"ParentOrgID" NVARCHAR(100));

it_userAssignedOrgs = select distinct a."OrgID", a."Persona" FROM "hc.hph.cdw.db.models::Config.UserOrgMapping" a inner join (select distinct("OrgID") as "OrgID" from "hc.hph.cdw.db.models::Config.Org" where "ValidTo" is null or "ValidTo" > current_utctimestamp group by "OrgID", "ValidTo" ) b on a."OrgID" = b."OrgID" where a."UserName" = :iv_username;
	
								
	it_childAndSelfOrgs = select RESULT_NODE as "OrgID", QUERY_NODE as "ParentOrgID" 
										from "hc.hph.cdw.db.models::CVOrg/hier/ORG_PC_HIER" 
								 	 	('expression' = 'DescendantsOrSelf(nodes())') 
						 	 	 	 	where QUERY_NODE in(Select "OrgID" from :it_userAssignedOrgs);
						 	 	 	 	
	
	ot_orgInfo = select "OrgID",
					    "Persona" from
					    (select "OrgID",
						"Persona",
						row_number() over (partition by d."OrgID" order by d."Persona") as "rowNumber"
						from
						(select distinct 
									b."OrgID", 
										case when (a. "Persona" <> 'admin' and c."UserName" = :iv_username) 
											then c."Persona" 
											when (a. "Persona" <> 'admin') then a."Persona" 
										else 'admin' end as "Persona"
							from :it_userAssignedOrgs a, :it_childAndSelfOrgs b left outer join "hc.hph.cdw.db.models::Config.UserOrgMapping" c on b."OrgID" = c."OrgID" 
							where a."OrgID" = b."ParentOrgID") d) where "rowNumber" = 1;
							
END;

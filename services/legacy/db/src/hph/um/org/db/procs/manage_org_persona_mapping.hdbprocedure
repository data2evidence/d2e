PROCEDURE "hc.hph.um.org.db.procs::manage_org_persona_mapping" 
		(IN i_orgID NVARCHAR(100), 
		 IN i_userDetails "hc.hph.um.org.db.models::ConfigTypes.UserInfo" , --table ("OrgID" NVARCHAR(100)),
		 IN i_action NVARCHAR(50),
		 OUT o_message TABLE ("Status" NVARCHAR(1), "Code" NVARCHAR(100), "Message" NVARCHAR(100)))
	LANGUAGE SQLSCRIPT
	SQL SECURITY DEFINER
	AS
BEGIN
	
	declare v_creator NVARCHAR(256); 
	declare v_current_timestamp TIMESTAMP;
	declare	v_org_id NVARCHAR(100);
	declare v_user NVARCHAR(256);
	declare v_persona NVARCHAR(100);
	declare v_user_count integer;
	declare v_statusFlag NVARCHAR(10);
	declare cursor userOrgs for select * from :i_userDetails;
	declare count1 int;
	--declare invalid_orgID condition for SQL_ERROR_CODE 10010;
	
	declare exit handler for SQL_ERROR_CODE 10010
	begin
		o_message = select 	'E' as "Status",
							::SQL_ERROR_CODE as "Code",
		       				::SQL_ERROR_MESSAGE as "Message"
		   		from "hc::DUMMY";    
	end;
	
	declare exit handler for sqlexception
	begin
		o_message = select 	'E' as "Status",
							::SQL_ERROR_CODE as "Code",
		       				::SQL_ERROR_MESSAGE as "Message"
		   			from "hc::DUMMY";    
	end;
	
	select session_context('XS_APPLICATIONUSER') into v_creator from "hc::DUMMY";
	select current_utctimestamp into v_current_timestamp from "hc::DUMMY";
	--select "Username" into v_user from :i_userDetails;
	--select "Persona" into v_persona from :i_userDetails;
	select count(*) into v_user_count from :i_userDetails;
		
	if (:i_action = 'I' or :i_action='U') then
	
		for userOrg AS userOrgs do 
			upsert "hc.hph.cdw.db.models::Config.UserOrgMapping" values
			 	(userOrg."Username",
				:i_OrgID,
				v_creator,
				v_current_timestamp,
				v_creator,
				v_current_timestamp,
				userOrg."Persona") where "OrgID" = :i_orgID and "UserName" = userOrg."Username";
		end for;
		
		select 'true' into v_statusFlag from "hc::DUMMY";
		
	elseif (:i_action = 'D' or v_user_count = 0) then
		
		for userOrg AS userOrgs do 
		
			delete from "hc.hph.cdw.db.models::Config.UserOrgMapping" where "OrgID" = i_orgID and UPPER("UserName") = userOrg."Username";
			
	    end for;
    	select 'true' into v_statusFlag from "hc::DUMMY";
	else
		select 'false' into v_statusFlag from "hc::DUMMY";
	end if;
	
	select count(*) into count1 from "hc.hph.cdw.db.models::Config.UserOrgMapping" where "OrgID" = i_orgID and "Persona" = 'admin';
	
	if(count1 < 1) then
		
		o_message = select 	'E' as "Status",
						'ADMIN_USER_FOR_ORG_NOT_PRESENT' as "Code",
						'At least one admin should be present inside org' as "Message" 
	   				from "hc::DUMMY";   

	elseif(:v_statusFlag = 'true') then
	
		o_message = select 	'S' as "Status",
						null as "Code",
						'User Org Assignments successful' as "Message" 
	   				from "hc::DUMMY";    
	else 
		o_message = select 	'E' as "Status",
						null as "Code",
						'Action not supported' as "Message" 
	   				from "hc::DUMMY";    
	end if;
END;

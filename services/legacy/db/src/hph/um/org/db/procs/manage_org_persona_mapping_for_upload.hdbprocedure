PROCEDURE "hc.hph.um.org.db.procs::manage_org_persona_mapping_for_upload" 
		(IN i_orgIDStruct "hc.hph.um.org.db.models::ConfigTypes.OrgIdStructForProc", 
		 IN i_userName NVARCHAR(256) ,
		 OUT o_message TABLE ("Status" NVARCHAR(1), "Code" NVARCHAR(100), "Message" NVARCHAR(100)))
	LANGUAGE SQLSCRIPT
	SQL SECURITY DEFINER
	AS
BEGIN
	
	declare v_creator NVARCHAR(256); 
	declare v_current_timestamp TIMESTAMP;
	declare	v_org_id NVARCHAR(100);
	declare v_user NVARCHAR(256);
	declare v_persona NVARCHAR(100);
	declare v_user_count integer;
	declare v_statusFlag NVARCHAR(10);
	declare cursor userOrgs for select * from :i_orgIDStruct;
		
	--declare invalid_orgID condition for SQL_ERROR_CODE 10010;
	
	declare exit handler for SQL_ERROR_CODE 10010
	begin
		o_message = select 	'E' as "Status",
							::SQL_ERROR_CODE as "Code",
		       				::SQL_ERROR_MESSAGE as "Message"
		   		from "hc::DUMMY";    
	end;
	
	declare exit handler for sqlexception
	begin
		o_message = select 	'E' as "Status",
							::SQL_ERROR_CODE as "Code",
		       				::SQL_ERROR_MESSAGE as "Message"
		   			from "hc::DUMMY";    
	end;
	
	select session_context('XS_APPLICATIONUSER') into v_creator from "hc::DUMMY";
	select current_utctimestamp into v_current_timestamp from "hc::DUMMY";
	--select "Username" into v_user from :i_userDetails;
	--select "Persona" into v_persona from :i_userDetails;
	
		

	
	for userOrg AS userOrgs do 
		upsert "hc.hph.cdw.db.models::Config.UserOrgMapping" values
		 	(:i_userName,
			userOrg."OrgID",
			v_creator,
			v_current_timestamp,
			v_creator,
			v_current_timestamp,
			'admin') where "OrgID" = userOrg."OrgID" and "UserName" = :i_userName;
	end for;
	
		o_message = select 'S' as "Status",
					   null as "Code",
	       			   'Organizational units assigned successfully' as "Message"
	   			from "hc::DUMMY"; 
		
		

	
END;

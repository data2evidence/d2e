namespace hc.hph.um.user.db;

context userTable {

type longString:String(100); 
    table TYPE DateLogFields{
    createdOn : UTCTimestamp;
    createdBy:longString;
    changedOn : UTCTimestamp;
    changedBy:longString;

    };

    table TYPE RoleStructForProc{
        applicationRoleName    : String(256); 
        isSelected             : String(10);
    };

	table type RoleNameStruct{
		applicationRoleName : String(256);
	};

	table type UserName{
		UserName : String(256);
	};

	table type attributeName {
		attribute : String(256);
	};	

table type user_creation_data {
	USERNAME        		: String(256);  
	PASSWORD_AUTHENTICATION	: String(10);
	PASSWORD        		: String(50);
	MAIL            		: String(256);
	VALIDFROM   			: UTCTimestamp;
	VALIDTO     			: UTCTimestamp;
	ACTION					: String(1);
	LOCALE					: String(5);
	TIMEZONE				: String(10);
	STATUS					: String(10);
	SAML_AUTHENTICATION		: String(10);
	IDP_NAME				: String(256);
};


table type user_org_mapping {

USERNAME : String(256);
OrgID : String(100);

};


table type user_role_mapping {

USERNAME : String(256);
applicationRoleName : String(256);
isSelected : String(10);

};


table type user_name_details {

	USERNAME			: String(256);
	FIRSTNAME			: String(256);
	LASTNAME			: String(256);
	EXTERNAL_SOURCE		: String(200);

};


table type message{
STATUS          : String(1);
ERROR_CODE      : Integer;
ERROR_MESSAGE   : String(100);
};  

table type inputF{
type:longString;
vals:longString;
default:longString;
placeholder:longString;
cust_file_loc:longString;
};
type longerString:String(256); 


entity ATTRIBUTE_CONFIG {
key id      : String(32);
config_id:String(256);  
label: longString;
tooltip:longerString;
datatype: longString;
len:Integer;
scale:Integer;
is_required:Integer;
is_confirm:Integer;
orderno:Integer;
is_password:Integer;
enable:Integer;
visible:Integer;
input:inputF;
date_log:DateLogFields;
} technical configuration {
column store;
};



entity USER_ATTRIBUTES {
key attribute_id:String(256);
//key label:String(100);
key username:String(256);
entry:longString;
date_log:DateLogFields;
} technical configuration {
column store;
};
};
PROCEDURE "hc.hph.ta.deid.db.procedures::TA_ANALYZE"
(
	IN iv_docBin BLOB DEFAULT NULL,
	IN iv_docText NCLOB DEFAULT NULL,
	INOUT LANGUAGE_CODE VARCHAR(2),
	INOUT MIME_TYPE VARCHAR(256),
	IN iv_tokenSep VARCHAR(256) DEFAULT '',
	IN iv_languageDetect NVARCHAR(256) DEFAULT '',
	IN iv_schemaName NVARCHAR(256) DEFAULT '',
	IN iv_configName NVARCHAR(256) DEFAULT '',
	IN iv_retPlain TINYINT DEFAULT 1,
	OUT TA_ANNOTATIONS TABLE ("RULE" NVARCHAR(200), "COUNTER" BIGINT, "TOKEN" NVARCHAR(5000), "TYPE" NVARCHAR(100), "NORMALIZED" NVARCHAR(5000), "STEM" NVARCHAR(5000), "PARAGRAPH" INTEGER, "SENTENCE" INTEGER, "OFFSET" BIGINT, "PARENT" BIGINT, "EXPANDED_TYPE" NVARCHAR(200) ),
	OUT PLAINTEXT NCLOB
)
LANGUAGE SQLSCRIPT
SQL SECURITY DEFINER
AS
BEGIN
	DECLARE temp_taRes TABLE ("RULE" NVARCHAR(200), "COUNTER" BIGINT, "TOKEN" NVARCHAR(5000), "TYPE" NVARCHAR(100), "NORMALIZED" NVARCHAR(5000), "STEM" NVARCHAR(5000), "PARAGRAPH" INTEGER, "SENTENCE" INTEGER, "OFFSET" BIGINT, "PARENT" BIGINT, "EXPANDED_TYPE" NVARCHAR(200) );	
	CALL "hc::TA_ANALYZE"(
		DOCUMENT_BINARY => :iv_docBin,
		DOCUMENT_TEXT => :iv_docText,
		LANGUAGE_CODE => :LANGUAGE_CODE,
		MIME_TYPE => :MIME_TYPE,
		TOKEN_SEPARATORS => :iv_tokenSep,
		LANGUAGE_DETECTION => :iv_languageDetect,
		CONFIGURATION_SCHEMA_NAME => CURRENT_USER,
		CONFIGURATION => :iv_configName,
		RETURN_PLAINTEXT => :iv_retPlain,
		TA_ANNOTATIONS => :temp_taRes,
		PLAINTEXT => :PLAINTEXT
	);
	TA_ANNOTATIONS = SELECT "RULE", "COUNTER", "TOKEN", "TYPE", "NORMALIZED", "STEM", "PARAGRAPH", "SENTENCE", "OFFSET", "PARENT", "EXPANDED_TYPE" FROM :temp_taRes WHERE "RULE" = 'Entity Extraction' ORDER BY "COUNTER";
END;

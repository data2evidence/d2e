namespace hc.hph.plugins.textProcessing.medical.postProcessing;

context Entities {
  entity "TA_FILTERED" {
     key CONFIG_ID               : String(1024);
     key DWID                    : Binary(32);
     key TA_RULE                 : String(200);
     key TA_COUNTER              : Integer64;
     TA_TOKEN                    : String(5000);
     TA_LANGUAGE                 : String(2);
     TA_TYPE                     : String(100);
     TA_NORMALIZED               : String(5000);
     TA_STEM                     : String(5000);
     TA_PARAGRAPH                : Integer;
     TA_SENTENCE                 : Integer;
     TA_CREATED_AT               : UTCDateTime;
     TA_OFFSET                   : Integer64;
     TA_PARENT                   : Integer64;
     TA_SECTION                  : String(100);
     TA_STATUS                   : String(100);
     TA_POLARITY                 : String(100);
     TA_SUBJECT                  : String(100);
     TA_TIME_START               : UTCDateTime;
     TA_TIME_END                 : UTCDateTime;
     TA_TIME_LINK                : String(100); 
     TA_AMBIGUITY                : String(100);
     TA_MEDS_MEDICATION          : String(250);
     TA_MEDS_DOSAGE_DOSE         : String(100);
     TA_MEDS_FORM                : String(250);
     TA_MEDS_INGREDIENT_AMOUNT   : String(250);
     TA_MEDS_DOSAGE_ROUTE        : String(100);
     TA_MEDS_DOSAGE_RATE         : String(100); 
     TA_MEDS_DOSAGE_DURATION     : String(250);
     TA_MEDS_REASON              : String(100);
     TA_AE_SUSPECT_ENTITY        : String(250);
     TA_AE_REACTION              : String(250);
     TA_COND_CLINICAL_STATUS     : String(100);
     TA_COND_SEVERITY            : String(100);
     TA_SYMP_CLINICAL_STATUS     : String(100);
     TA_SYMP_SEVERITY            : String(100);
     TA_OBSERVATION		         : String(250);
     TA_OBS_VALUE			     : String(250);
     TA_OBS_UNIT			     : String(250);
  } technical configuration {
     column store;
  };
  
  temporary entity "TA" {
     DWID           : String(100);
     TA_RULE        : String(200);
     TA_COUNTER     : Integer64;
     TA_TOKEN       : String(5000);
     TA_LANGUAGE    : String(2);
     TA_TYPE        : String(100);
     TA_NORMALIZED  : String(5000);
     TA_STEM        : String(5000);
     TA_PARAGRAPH   : Integer;
     TA_SENTENCE    : Integer;
     TA_CREATED_AT  : UTCDateTime;
     TA_OFFSET      : Integer64;
     TA_PARENT      : Integer64;
  } technical configuration {
     row store;
  };

  
  temporary entity "TA_TEMP" {
     CONFIG_ID      : String(1024);
     BATCH_ID       : String(1024) not null;
     DWID           : String(100);
     TA_RULE        : String(200);
     TA_COUNTER     : Integer64;
     TA_TOKEN       : String(5000);
     TA_LANGUAGE    : String(2);
     TA_TYPE        : String(100);
     TA_NORMALIZED  : String(5000);
     TA_STEM        : String(5000);
     TA_PARAGRAPH   : Integer;
     TA_SENTENCE    : Integer;
     TA_CREATED_AT  : UTCDateTime;
     TA_OFFSET      : Integer64;
     TA_PARENT      : Integer64;
     TA_SECTION     : String(100);
     TA_STATUS      : String(100);
     TA_POLARITY    : String(100);
     TA_SUBJECT     : String(100);
     TA_TIME_START  : UTCDateTime;
     TA_TIME_END    : UTCDateTime;
     TA_TIME_LINK   : String(100);
     TA_AMBIGUITY   : String(100);
  } technical configuration {
     row store;
  };

  entity "TA_CONFIG" {
    key CONFIG_ID       : String(1024);
    key EXTRACTION_TYPE : String(200);         // TA_TYPE, TA_SECTION, TA_MODALITY, TA_POLARITY, TA_REFERENCE
    key EXTRACTION_ID   : String(200);         // med_ANAT@NCIm, med_DIS@NCIm, ..., ModFactual, ...
    SELECTED            : String(1) not null;  // ' ' or 'X'
  } technical configuration {
    column store;
  };

  entity "TA_COLLAPSING_MED_CONFIG" {
    TARGET				: String(100);
    SOURCE				: String(100);
  } technical configuration {
    column store;
  };
  
  entity "TA_FINAL_RENAMING_MED_CONFIG"{
    TARGET				: String(100);
    SOURCE				: String(100);
  } technical configuration {
    column store;
  }


};

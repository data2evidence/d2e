PROCEDURE "hc.hph.plugins.textProcessing.pathology.db.procedures::PerformCDWMapping" (
in lv_pluginId NVARCHAR(256),
in iv_auditId bigint,
in iv_scheduleID bigint,
in iv_clearStage VARCHAR(1)) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY DEFINER
	AS
	
BEGIN	
	
	
/***************************** 
	Write your procedure logic 
 *****************************/
   DECLARE valid_docs_for_processing CLOB;
   DECLARE ta_filtered CLOB;


    
 -- Get all the valid DWIDs that are relevant for post processing   
   valid_docs = select stage.* from "hc.hph.di.documents.staging.db.models::DocumentStage.ProcessingStage" stage
   inner join "hc.hph.plugins.documents.db.models::TA.Document" docs
   on docs."DWID" = stage."DWID" and docs."DWDateFrom" = stage."DWDateFrom"
   where docs."ScheduleID" = :iv_scheduleID and docs."DWAuditID" = :iv_auditId;
   
   valid_docs_for_processing := 'select *, '''|| :lv_pluginId ||''' "PluginID" from (select stage.* '||
   'from "hc.hph.di.documents.staging.db.models::DocumentStage.ProcessingStage" stage '||
   'inner join "hc.hph.plugins.documents.db.models::TA.Document" docs '||
   'on docs."DWID" = stage."DWID" and docs."DWDateFrom" = stage."DWDateFrom" '||
   'where docs."ScheduleID" = '||:iv_scheduleID ||' and docs."DWAuditID" = '||:iv_auditId||' ) where "ProcessingMode" is null';
   		 
 -- get all the relevant ta_filtred entries for CDW mapping	
	
	ta_filtered := 'select filtered.* from '||  
	'"hc.hph.plugins.textProcessing.pathology.postProcessing::Entities.TA_FILTERED" filtered '||
	'inner join ('||valid_docs_for_processing||') docs '||
	'on filtered."DWID" = docs."DWID" ';
	
 -- Get the CDW facts for the current plugin
    call "hc.hph.plugins.textProcessing.common.db.procedures::MapTAFilteredToFacts"
    (:lv_pluginId,:ta_filtered, otFacts, otFactAttributes);
 	
 	call "hc.hph.plugins.textProcessing.common.db.procedures::MapFactsToInteractions"
 		(:lv_pluginId, :iv_auditId, :iv_scheduleID, :valid_docs,  :otFacts, :otFactAttributes);
END;

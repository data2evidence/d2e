PROCEDURE "hc.hph.plugins.documents.db.procedures::DeleteDocumentCDW" 
(
in iv_auditLogID bigint,
out ot_source table("DWID" nvarchar(512), "DWSource" nvarchar(5))
) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER
	AS
BEGIN
/***************************** 
	Write your procedure logic 
 *****************************/
 
 --get the individual DWID for the documents for the run
 
 declare lt_interactionLink table("DWLinkID" varbinary(32));
 declare lt_dwid table("DWID" VARBINARY(32));
 
 lt_dwid = select distinct "DWID" from "hc.hph.di.documents.staging.db.models::DocumentProcessing.Status"
 where "DWAuditID" = :iv_auditLogID;
  
 --get the Source entries from the Key table to be later used for rolling back archiving
 
 ot_source = select to_nvarchar("DWID") as DWID, "DWSource" from "hc.hph.cdw.db.models::DWDocuments.Document_Key" 
 where "DWID" in
 (select "DWID" from :lt_dwid);
 
 --delete entries from the key & Attr tables
 
 delete from "hc.hph.cdw.db.models::DWDocuments.Document_Key" 
 where "DWID" in
 (select "DWID" from :lt_dwid);
 
 
 delete from "hc.hph.cdw.db.models::DWDocuments.Document_Attr"
 where "DWID" in
 (select "DWID" from :lt_dwid);

 
 --delete entries from the SearchIndex table
 
 delete from "hc.hph.cdw.db.models::Document_SearchIndex"
 where "DWID" in
 (select "DWID" from :lt_dwid);
 
 --delete from the link table
 
 --get the linkID
 
 lt_interactionLink = select "DWLinkID" from "hc.hph.cdw.db.models::DWDocuments.Interaction_Documents_Link"
 where "DWID_Document" in
 (select "DWID" from :lt_dwid);
 
 delete from "hc.hph.cdw.db.models::DWDocuments.Interaction_Documents_Link"
 where "DWID_Document" in
 (select "DWID" from :lt_dwid);
 
 delete from "hc.hph.cdw.db.models::DWDocuments.Interaction_Documents_Link_Attr"
 where "DWLinkID" in
 (select "DWLinkID" from :lt_interactionLink);
 
END;

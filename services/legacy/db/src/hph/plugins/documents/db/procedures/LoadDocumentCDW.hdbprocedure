PROCEDURE "hc.hph.plugins.documents.db.procedures::LoadDocumentCDW" 
(				
in profileId bigint,
in auditId bigint,
in BatchID bigint,
in scheduleID bigint,
in updateCDW nvarchar(5),
in enableSearch nvarchar(5)
) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY DEFINER
	AS
BEGIN

	declare Curtime timestamp;
	declare lt_DWID_Source table(DWID_Interaction varbinary(32), DWID_Document varbinary(32));
	declare lt_DWID_ParentSource table(DWID_Interaction varbinary(32), DWID_Document varbinary(32));
	declare lt_DWID table(DWID_Interaction varbinary(32), DWID_Document varbinary(32));
	declare EXIT HANDLER FOR SQLEXCEPTION   
	begin
		--call "hc.hph.plugins.documents.db.procedures::Rollback"(auditId);
	end;
	CurTime := now();
	
	--call all the neccessary flowgraphs to update the following tables:
	--1. Document_Key,
	--2. Document_Attr
	
		if :enableSearch = '01' then
			if :BatchID = 0 then
			--update the Search Index table if the record for the document is already present. 
	    		update "hc.hph.cdw.db.models::Document_SearchIndex" searchIndex set
	    		 "DWID" = processStage."DWID",
	    		 "DWDateFrom" = Curtime,
	    		 "DWDateTo" = null,
	    		 "DWAuditID" = processStage."DWAuditID",
	    		 "Content" = processStage."Content" 
	    		 from "hc.hph.cdw.db.models::Document_SearchIndex" searchIndex, "hc.hph.plugins.documents.db.models::Interface.ProcessingStageView" processStage
	    		 where searchIndex."DWID" = processStage."DWID"
	    		 and processStage."ParentAuditLogID" = :auditId
	    		 and processStage."ScheduleID" = :scheduleID
	    		 and processStage."ProcessingMode" is null;
	    	--insert into Search Index table if the record for the document is not present 
	    		insert into "hc.hph.cdw.db.models::Document_SearchIndex"
	    		 ("DWID", "DWDateFrom", "DWDateTo", "DWAuditID", "Content")
	    		 select "DWID", Curtime, null, "DWAuditID", "Content" 
	    		 from "hc.hph.plugins.documents.db.models::Interface.ProcessingStageView" processStage
	    		 where "ParentAuditLogID" = :auditId
	    		 and "ScheduleID" = :scheduleID
	    		 and "ProcessingMode" is null
	    		 and "DWID" not in(select "DWID" from "hc.hph.cdw.db.models::Document_SearchIndex");
	    	--update the Search Index table for isVoided Record 
	    		 update "hc.hph.cdw.db.models::Document_SearchIndex" searchIndex set
	    		 "DWDateTo" = CurTime,
	    		 "Content" = null,
	    		 "DWAuditID" = processStage."DWAuditID"
	    		 from "hc.hph.cdw.db.models::Document_SearchIndex" searchIndex, "hc.hph.plugins.documents.db.models::Interface.ProcessingStageView" processStage
	    		 where searchIndex."DWID" = processStage."DWID"
	    		 and processStage."ParentAuditLogID" = :auditId
	    		 and processStage."ScheduleID" = :scheduleID
	    		 and processStage."ProcessingMode" = 'D';
		else
			--update the Search Index table if the record for the document is already present. 
	    		update "hc.hph.cdw.db.models::Document_SearchIndex" searchIndex set
	    		 "DWID" = processStage."DWID",
	    		 "DWDateFrom" = Curtime,
	    		 "DWDateTo" = null,
	    		 "DWAuditID" = processStage."DWAuditID",
	    		 "Content" = processStage."Content" 
	    		 from "hc.hph.cdw.db.models::Document_SearchIndex" searchIndex, "hc.hph.plugins.documents.db.models::Interface.ProcessingStageView" processStage
	    		 where searchIndex."DWID" = processStage."DWID"
	    		 and processStage."BatchID" = :BatchID
	    		 and processStage."ParentAuditLogID" = :auditId
	    		 and processStage."ScheduleID" = :scheduleID
	    		 and processStage."ProcessingMode" is null;
	    	--insert into Search Index table if the record for the document is not present 
	    		insert into "hc.hph.cdw.db.models::Document_SearchIndex"
	    		 ("DWID", "DWDateFrom", "DWDateTo", "DWAuditID", "Content")
	    		 select "DWID", Curtime, null, "DWAuditID", "Content" 
	    		 from "hc.hph.plugins.documents.db.models::Interface.ProcessingStageView" processStage
	    		 where "BatchID" = :BatchID
	    		 and "ParentAuditLogID" = :auditId
	    		 and "ScheduleID" = :scheduleID
	    		 and "ProcessingMode" is null
	    		 and "DWID" not in(select "DWID" from "hc.hph.cdw.db.models::Document_SearchIndex");
	        --update the Search Index table for isVoided Record 
	    		 update "hc.hph.cdw.db.models::Document_SearchIndex" searchIndex set
	    		 "DWDateTo" = CurTime,
	    		 "Content" = null,
	    		 "DWAuditID" = processStage."DWAuditID"
	    		 from "hc.hph.cdw.db.models::Document_SearchIndex" searchIndex, "hc.hph.plugins.documents.db.models::Interface.ProcessingStageView" processStage
	    		 where searchIndex."DWID" = processStage."DWID"
	    		 and processStage."BatchID" = :BatchID
	    		 and processStage."ParentAuditLogID" = :auditId
	    		 and processStage."ScheduleID" = :scheduleID
	    		 and processStage."ProcessingMode" = 'D';
			end if;
		end if;
		
		if :updateCDW = '01' then
			exec 'START TASK "hc.hph.plugins.documents.db.flowgraphs::LoadDocument_Key"("BatchID" => '''''''||:BatchID||''''''', "DWAuditID" => '''''''||:auditId||''''''', "ScheduleID" => '''''''||:scheduleID||''''''')';
			exec 'START TASK "hc.hph.plugins.documents.db.flowgraphs::LoadDocument_Attr"("DWAuditID" => '''''''||:auditId||''''''', "CurTime" => '''''''||CurTime||''''''', "BatchID" => '''''''||:BatchID||''''''', "ScheduleID" => '''''''||:scheduleID||''''''')';
			exec 'START TASK "hc.hph.plugins.documents.db.flowgraphs::DeleteDocument_Attr"("DWAuditID" => '''''''||:auditId||''''''', "CurTime" => '''''''||CurTime||''''''', "BatchID" => '''''''||:BatchID||''''''', "ScheduleID" => '''''''||:scheduleID||''''''')';

		    --Check if there's any such documents which is now assigned to a new DeleteInteractionDocumentLink_DWParentEntitySource
			lt_DWID_Source = select "hc.hph.cdw.db.etl::HashDWID"("DWSource", "ParentEntityID") DWID_Interaction,
					  		 		"DWID"  DWID_Document from "hc.hph.plugins.documents.db.models::Interface.ProcessingStageView"
							 		where "DWParentEntitySource" is null
							 		and "BatchID" = :BatchID
							 		and "ParentAuditLogID" = :auditId
							 		and "ScheduleID" = :scheduleID;

			lt_DWID_ParentSource = select "hc.hph.cdw.db.etl::HashDWID"("DWParentEntitySource", "ParentEntityID") DWID_Interaction,
										  "DWID"  DWID_Document from "hc.hph.plugins.documents.db.models::Interface.ProcessingStageView"
										  where "DWParentEntitySource" is not null
										  and "BatchID" = :BatchID
										  and "ParentAuditLogID" = :auditId
										  and "ScheduleID" = :scheduleID;

			lt_DWID = select * from (select * from :lt_DWID_Source union select * from :lt_DWID_ParentSource);
			 
			 --Invalidate the previous entries from the IDL table
			 update "hc.hph.cdw.db.models::DWDocuments.Interaction_Documents_Link" idl 
			 set "DWDateTo" = CurTime
			 from "hc.hph.cdw.db.models::DWDocuments.Interaction_Documents_Link" idl, :lt_DWID tab
			 where "DWID_Document" = idl."DWID_Document"
			 and  "DWID_Interaction" <> idl."DWID_Interaction";

			 --Invalidate these entries from the IDL_Attr tables
			 update "hc.hph.cdw.db.models::DWDocuments.Interaction_Documents_Link_Attr" 
			 set "DWDateTo" = CurTime
			 where "DWLinkID" in
			 	(select "DWLinkID" from "hc.hph.cdw.db.models::DWDocuments.Interaction_Documents_Link"
				 		where "DWDateTo" = CurTime);
	
			exec 'START TASK "hc.hph.plugins.documents.db.flowgraphs::LoadInteractionDocumentLink_DWParentEntitySource"("BatchID" => '''''''||:BatchID||''''''', "DWAuditID" => '''''''||:auditId||''''''', "ScheduleID" => '''''''||:scheduleID||''''''', "CurTime" => '''''''||CurTime||''''''')';
		    exec 'START TASK "hc.hph.plugins.documents.db.flowgraphs::LoadInteractionDocumentLink_DWSource"("BatchID" => '''''''||:BatchID||''''''', "DWAuditID" => '''''''||:auditId||''''''', "ScheduleID" => '''''''||:scheduleID||''''''', "CurTime" => '''''''||CurTime||''''''')';
		    exec 'START TASK "hc.hph.plugins.documents.db.flowgraphs::DeleteInteractionDocumentLink_DWParentEntitySource"("BatchID" => '''''''||:BatchID||''''''', "DWAuditID" => '''''''||:auditId||''''''', "ScheduleID" => '''''''||:scheduleID||''''''', "CurTime" => '''''''||CurTime||''''''')';
		    exec 'START TASK "hc.hph.plugins.documents.db.flowgraphs::DeleteInteractionDocumentLink_DWSource"("BatchID" => '''''''||:BatchID||''''''', "DWAuditID" => '''''''||:auditId||''''''', "ScheduleID" => '''''''||:scheduleID||''''''', "CurTime" => '''''''||CurTime||''''''')';
			exec 'START TASK "hc.hph.plugins.documents.db.flowgraphs::LoadInteractionDocumentLink_Attr"("DWAuditID" => '''''''||:auditId||''''''', "ScheduleID" => '''''''||:scheduleID||''''''')';
			exec 'START TASK "hc.hph.plugins.documents.db.flowgraphs::DeleteInteractionDocumentLink_Attr_DWSource"("DWAuditID" => '''''''||:auditId||''''''', "ScheduleID" => '''''''||:scheduleID||''''''')';
			exec 'START TASK "hc.hph.plugins.documents.db.flowgraphs::DeleteInteractionDocumentLink_Attr_DWParentEntitySource"("DWAuditID" => '''''''||:auditId||''''''', "ScheduleID" => '''''''||:scheduleID||''''''')';		    	
		end if;
		
END;

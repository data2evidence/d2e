PROCEDURE "hc.hph.plugins.documents.db.procedures::ProfileStatus" 
(
in in_parentAudit_id bigint,
in in_batchID bigint,
in in_sourceID nvarchar(5),
in in_pipelineID nvarchar(256),
in in_actionName nvarchar(128),
in in_status nvarchar(128)
) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY DEFINER
	AS
BEGIN
/***************************** 
	Write your procedure logic 
 *****************************/
 
 declare lt_status table("DWID" varbinary(32),
							 "DWDateFrom" timestamp,
			 				 "ActionName" nvarchar(128), 
			 				 "PipelineID" nvarchar(256),
						   	 "DWAuditID" bigint, 
							 "Status" nvarchar(128),
							 "ScheduleID" bigint,
							 "ActionStartedON" timestamp);
							 
 declare lt_entries table("DWID" varbinary(32),
							  "DWDateFrom" timestamp,
							  "DWAuditID" bigint);
 
 declare CurTime timestamp;
 declare lv_runCnt bigint;
 
 
 lv_runCnt := 0;
 CurTime := now();
 
 --Check if a profile for the document processing extension running.
 
 if :in_actionName = 'Initialize Profile Run' then
 
 	declare lt_entries_stage table("DWID" varbinary(32),
	 								"DWDateFrom" timestamp,
	 								"DWSource" nvarchar(5),
	 								"BatchID" bigint,
	 								"PipelineID" nvarchar(10));
 
 	select count("AuditLogID") into lv_runCnt from "hc.hph.di.model::DataIntegration.AuditLog"
 	where "ExtensionID" = 'hc.hph.plugins.documents.ProcessDocuments'
 	and "ParentAuditLogID" = 0
 	and "Status" = 'Running'; 
 	
 	lt_entries_stage = select stage."DWID",stage."DWDateFrom",stage."DWSource",stage."BatchID",:in_pipelineID "PipelineID" from "hc.hph.di.documents.staging.db.models::DocumentStage.ProcessingStage" stage
	                     left outer join "hc.hph.di.documents.staging.db.models::DocumentProcessing.Status" status
	                     on stage."DWID" = status."DWID"
	                     and stage."DWDateFrom" = status."DWDateFrom"
	                     where status."ScheduleID" is null;
	 								
	if :lv_runCnt != 0 then
	
		--Don't pick up already running documents
		
		lt_entries_inProcess = select init."DWID", init."DWDateFrom", 'InProcess' as "State"  from 
   									(select "DWID", "DWDateFrom", "ScheduleID" from "hc.hph.di.documents.staging.db.models::DocumentProcessing.Status" where "ActionName" = 'Initialize Profile Run')init
   								left outer join  
   									(select "DWID", "DWDateFrom", "ScheduleID" from "hc.hph.di.documents.staging.db.models::DocumentProcessing.Status" where "ActionName" = 'Finalize Profile Run')final  
    							on init."DWID" = final."DWID"
   								and init."DWDateFrom" = final."DWDateFrom"
    							where final."ScheduleID" is null;
    							
	  	lt_entries_stage =  select forProcess."DWID",forProcess."DWDateFrom",forProcess."DWSource",forProcess."BatchID",forProcess."PipelineID" from
	    					:lt_entries_stage forProcess
    					    left outer join
    					    :lt_entries_inProcess inProcess
   							on forProcess."DWID" = inProcess."DWID" where inProcess."State" is null; 
   										
	
	end if;					  		  
							  	
	 				
	 if in_batchID = 0 then  
	 
	 	if in_sourceID = '' then
		 	lt_entries = select "DWID","DWDateFrom",:in_parentAudit_id "DWAuditID" 
			from :lt_entries_stage;
	 	else
		 	lt_entries = select "DWID","DWDateFrom",:in_parentAudit_id "DWAuditID" 
			from :lt_entries_stage
			where "DWSource" = :in_sourceID;
	 	end if;
		
	 else
	 
	 	if in_sourceID = '' then
		 	lt_entries = select "DWID","DWDateFrom",:in_parentAudit_id "DWAuditID" 
			from :lt_entries_stage
			where "BatchID" = :in_batchID;
	 	else
		 	lt_entries = select "DWID","DWDateFrom",:in_parentAudit_id "DWAuditID" 
			from :lt_entries_stage
			where "DWSource" = :in_sourceID
			and "BatchID" = :in_batchID;
	 	end if;
		
	 end if;
	 
 else
 
 lt_entries = select "DWID", "DWDateFrom", "DWAuditID" from "hc.hph.di.documents.staging.db.models::DocumentProcessing.Status"
 			  where "DWAuditID" = :in_parentAudit_id and "ActionName" = 'Initialize Profile Run';
	 
 end if;
 
 lt_status = select "DWID", 
	 				"DWDateFrom", 
					:in_actionName "ActionName", 
					:in_pipelineID "PipelineID",
					"DWAuditID", 
					:in_status "Status", 
					0 "ScheduleID", 
					CurTime "ActionStartedON" 
			     from :lt_entries;
	
	 call "hc.hph.plugins.documents.db.procedures::InsertProcessingStatus"(:lt_status);
	
	 call "hc.hph.plugins.documents.db.procedures::UpdateProcessingStatus"(:lt_status);
 
 END;

PROCEDURE "hc.hph.plugins.documents.db.procedures::InitializeProcessingState" 
(
in in_parentAudit_id bigint,
in in_pipelineID nvarchar(256),
out o_count bigint
) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY DEFINER
	AS
BEGIN
/***************************** 
	Write your procedure logic 
 *****************************/
 
 declare lt_status table("DWID" varbinary(32),
						 "DWDateFrom" timestamp,
		 				 "ActionName" nvarchar(128), 
		 				 "PipelineID" nvarchar(256),
					   	 "DWAuditID" bigint, 
						 "Status" nvarchar(128),
						 "ScheduleID" bigint,
						 "ActionStartedON" timestamp);
						  
 declare lt_entries_valid table("DWID" varbinary(32),
						  		"DWDateFrom" timestamp);
						  		
 declare lt_entries_invalid table("DWID" varbinary(32),
						  		  "DWDateFrom" timestamp);
						  		  
 declare lt_entries_stage table("DWID" varbinary(32),
 								"DWDateFrom" timestamp,
 								"DWSource" nvarchar(5),
 								"BatchID" bigint,
 								"PipelineID" nvarchar(10));
						  		  
 declare lt_type table("Type" nvarchar(512));
						  		  
 declare CurTime timestamp;
 declare Schedule_ID bigint;
 CurTime := now();
 
 lt_type = select distinct stage."Type" from "hc.hph.di.documents.staging.db.models::DocumentProcessing.Status" status
 		   inner join "hc.hph.di.documents.staging.db.models::DocumentStage.ProcessingStage" stage
 		   on status."DWID" = stage."DWID"
 		   and status."DWDateFrom" = stage."DWDateFrom"
 		   inner join "hc.hph.di.documents.staging.db.models::DocumentProcessing.DocumentTypePipelineMapping" dpm
 		   on dpm."DWDocumentType" = stage."Type" 
 		   where status."DWAuditID" = :in_parentAudit_id
 		   and status."ActionName" = 'Initialize Profile Run'
 		   and dpm."PipelineID" = :in_pipelineID;
 					
 lt_entries_stage = select stage."DWID",stage."DWDateFrom",stage."DWSource",stage."BatchID",:in_pipelineID "PipelineID" from "hc.hph.di.documents.staging.db.models::DocumentStage.ProcessingStage" stage
 					inner join "hc.hph.di.documents.staging.db.models::DocumentProcessing.Status" status on
 					status."DWID" = stage."DWID" and
 					status."DWDateFrom" = stage."DWDateFrom"
 					where status."DWAuditID" = :in_parentAudit_id
 					and status."PipelineID" = 'PROFILE RUN'
 					and stage."Type" in(select "Type" from :lt_type);
 				
				    
				    
 lt_entries_valid = select lt_entries_all."DWID",lt_entries_all."DWDateFrom" from :lt_entries_stage lt_entries_all
 					inner join (select "DWID", max("DWDateFrom") "DWDateFrom" from :lt_entries_stage group by "DWID") lt_entries_max
 					on lt_entries_all."DWID" = lt_entries_max."DWID" and lt_entries_all."DWDateFrom" = lt_entries_max."DWDateFrom";
 					
 					
 lt_entries_invalid = (select "DWID","DWDateFrom" from :lt_entries_stage) minus (select "DWID","DWDateFrom" from :lt_entries_valid);		

			          
 select count("DWID") into o_count from :lt_entries_valid;

 lt_status = select "DWID", 
 				    "DWDateFrom", 
				    'Initialize' "ActionName", 
				    :in_pipelineID "PipelineID",
				    :in_parentAudit_id "DWAuditID", 
				    'Initialized' "Status", 
				    0 "ScheduleID", 
				    CurTime "ActionStartedON" 
		     from :lt_entries_valid;

 call "hc.hph.plugins.documents.db.procedures::InsertProcessingStatus"(:lt_status);

 call "hc.hph.plugins.documents.db.procedures::UpdateProcessingStatus"(:lt_status);

 lt_status = select "DWID", 
				    "DWDateFrom", 
				    'Finalize' "ActionName", 
				    :in_pipelineID "PipelineID",
				    :in_parentAudit_id "DWAuditID", 
				    'Finalized' "Status", 
				    0 "ScheduleID", 
				    CurTime "ActionStartedON" 
			 from :lt_entries_invalid;

 call "hc.hph.plugins.documents.db.procedures::InsertProcessingStatus"(:lt_status);

 call "hc.hph.plugins.documents.db.procedures::UpdateProcessingStatus"(:lt_status);
 
 END;

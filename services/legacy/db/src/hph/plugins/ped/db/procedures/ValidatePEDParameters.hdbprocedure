PROCEDURE "hc.hph.plugins.ped.db.procedures::ValidatePEDParameters" ( 
IN dw_source NVARCHAR(255), 
IN remote_source NVARCHAR(255), 
IN org_id NVARCHAR(255), 
OUT error_message NVARCHAR(5000) )
LANGUAGE SQLSCRIPT SQL SECURITY INVOKER READS SQL DATA AS
BEGIN
    DECLARE status TINYINT := 0;
    error_message := NULL;

    IF LENGTH( :dw_source ) = 0 THEN
        error_message := 'Missing DW source';
        RETURN;
    END IF;
    CALL "hc.hph.di.procedures.validation::ValidateDWSource" ( :dw_source, status );
    IF :status = 0 THEN
        error_message := 'Invalid DW source ''' || ESCAPE_SINGLE_QUOTES( :dw_source ) || '''';
        RETURN;
    END IF;
    
    IF LENGTH( :remote_source ) = 0 THEN
        error_message := 'Missing remote source';
        RETURN;
    END IF;
    CALL "hc.hph.di.procedures.validation::ValidateRemoteSource" ( :remote_source, 'ALP HPH PED Adapter', status );
    IF :status = 0 THEN
        error_message := 'Invalid remote source "' || ESCAPE_DOUBLE_QUOTES( :remote_source ) || '"';
        RETURN;
    END IF;
    
    IF LENGTH( :org_id ) = 0   THEN
        error_message := 'Organization ID is mandatory';
        RETURN;
    ELSEIF ( LENGTH( :org_id ) > 0 ) THEN
    	CALL "hc.hph.di.procedures.validation::ValidateOrgID" ( :org_id, status );
    	IF :status = 0 THEN
        	error_message := 'Invalid org ID ''' || ESCAPE_SINGLE_QUOTES( :org_id ) || '''';
       	 RETURN;
    	END IF;
    END IF;
END;

PROCEDURE "hc.hph.plugins.bed.db.procedures::adapter_bed" ( 
      IN auditID BIGINT, 
IN schemaname VARCHAR(100),
IN featureTable VARCHAR(100),
IN referenceID NVARCHAR(255),
IN featureClass VARCHAR(255),
IN sampleID NVARCHAR(255),
IN patient NVARCHAR(255),
IN orgID NVARCHAR(255),
IN dwSource NVARCHAR(255),
IN bedScope NVARCHAR(255)
)
      LANGUAGE SQLSCRIPT
      SQL SECURITY INVOKER AS
BEGIN

DECLARE userFeatureClass VARCHAR(255);
DECLARE sampleIndex BIGINT;
DECLARE reserveCount INT; 
DECLARE count INT;
DECLARE value INT;
DECLARE endValue INT;
DECLARE analysisDate TIMESTAMP;
DECLARE DWID VARBINARY(32);
DECLARE businessKey NVARCHAR(100); 
DECLARE cytoband VARCHAR(32);
DECLARE centromere VARCHAR(32);

--create local temp table for staging data before updating CDW
create local temporary table "#bedFeature"("ReferenceID" VARCHAR2(255), "DWAuditID" BIGINT, 
"ChromosomeIndex" INTEGER, "Region.Begin" INTEGER, "Region.End" INTEGER, "FeatureID" VARCHAR2(255), "Class" VARCHAR2(255), 
"FeatureName" VARCHAR2(1024), "Strand" VARCHAR2(1), "Score" REAL, "Description" NCLOB, 
"FileChromosomeName" VARCHAR2(255), "Color" VARCHAR2(255));

--insert into staging table
EXEC 'INSERT INTO "#bedFeature"  
SELECT ''' ||ESCAPE_SINGLE_QUOTES(:referenceID) || ''', '|| ESCAPE_SINGLE_QUOTES(:auditID) ||', "ChromosomeIndex", "Region.Begin", "Region.End", to_char("FeatureID"), to_char("Class"), 
to_char("FeatureName"), to_char("Strand"), "Score", to_char("Description"), to_char("FileChromosomeName"), to_char("Color") 
FROM "' || ESCAPE_DOUBLE_QUOTES(:schemaName) || '"."' || ESCAPE_DOUBLE_QUOTES(:featureTable) || '"';

--prefix user provided feature class to feature id
EXEC' UPDATE "#bedFeature"
SET "FeatureID" = CONCAT('''|| ESCAPE_SINGLE_QUOTES(:featureClass) ||''' , "FeatureID")';

--prefix user provided feature class to class

cytoband := 'cytoband';
centromere := 'centromere';

EXEC' UPDATE "#bedFeature"
SET "Class" = CONCAT('''|| ESCAPE_SINGLE_QUOTES(:featureClass) ||''' ,"Class")
WHERE "Class" <> ''' ||ESCAPE_SINGLE_QUOTES(:cytoband) || '''
AND "Class" <> ''' ||ESCAPE_SINGLE_QUOTES(:centromere) || ''' ';

-- update staging table with maping entries from mapping UI
EXEC' update "#bedFeature" set "ChromosomeIndex" = (select "ChromosomeIndex" from 
"hc.hph.plugins.bed.db.models::Mapping.Chromosomes" 
where "#bedFeature"."FileChromosomeName" = "hc.hph.plugins.bed.db.models::Mapping.Chromosomes"."ChromosomeName"
and "#bedFeature"."DWAuditID" = "hc.hph.plugins.bed.db.models::Mapping.Chromosomes"."DWAuditID")';

if (:bedScope = 'Reference')
THEN

--Delete other entries with duplicate audit ID before starting
DELETE FROM "hc.hph.genomics.db.models::Reference.Features" WHERE "DWAuditID" = :auditID;

--insert into actual CDW table
EXEC'INSERT INTO "hc.hph.genomics.db.models::Reference.Features"
("DWAuditID", "ReferenceID", "ChromosomeIndex", "Region.Begin", "Region.End", "FeatureID", "Class", "FeatureName", "Strand", "Frame",
 "Score", "ParentID", "Description", "FileChromosomeName", "Color")
SELECT "DWAuditID", "ReferenceID", "ChromosomeIndex", "Region.Begin", "Region.End", "FeatureID", "Class", "FeatureName", "Strand", 0,
"Score", NULL, "Description", "FileChromosomeName", "Color" from "#bedFeature"
where "ChromosomeIndex" is not NULL'; 

ELSE

--Get sample index
SELECT COUNT(*) into count FROM "hc.hph.genomics.db.models::General.Sequences" WHERE "SequenceID"='SampleIndex';

IF :count=0 THEN
	value := 0;
	INSERT INTO "hc.hph.genomics.db.models::General.Sequences" ("SequenceID","Value") VALUES ('SampleIndex',:value);
END IF;

	SELECT TOP 1 "Value" INTO endValue FROM "hc.hph.genomics.db.models::General.Sequences" WHERE "SequenceID"='SampleIndex'; 
	endValue := endValue + 1;
	UPDATE "hc.hph.genomics.db.models::General.Sequences" SET "Value" = :endValue WHERE "SequenceID"='SampleIndex';


--create local temp table for staging data before updating CDW
CREATE LOCAL TEMPORARY TABLE "#generalSampleTemp"( "SampleIndex" BIGINT, "DWAuditID" BIGINT,"DWSource" NVARCHAR(5),
"ReferenceID" NVARCHAR(255),"SampleID" NVARCHAR(255),"SampleClass" NVARCHAR(255),"PatientDWID" VARBINARY(32),
"InteractionDWID" VARBINARY(32),"OrgID" NVARCHAR(100),"Phenotype" VARCHAR2(5000));

--inserting samples virtual table data to temporary table
businessKey := endValue;
DWID := "hc.hph.cdw.db.etl::HashDWID"(:dwSource, :businessKey);

EXEC 'INSERT INTO "#generalSampleTemp"
VALUES(' || ESCAPE_SINGLE_QUOTES(:endValue) || ', ' || ESCAPE_SINGLE_QUOTES(:auditID) || ',''' || ESCAPE_SINGLE_QUOTES(:dwSource) || ''',
''' || ESCAPE_SINGLE_QUOTES(:referenceID) || ''',''' || ESCAPE_SINGLE_QUOTES(:sampleID) || ''',''' || ESCAPE_SINGLE_QUOTES(:featureClass) || ''', 
HEXTOBIN( ''' || ESCAPE_SINGLE_QUOTES(:patient) || ''' ), null,
''' || ESCAPE_SINGLE_QUOTES(:orgID) || ''',null)';

update "#generalSampleTemp"
set
"InteractionDWID" = :DWID
where
"DWAuditID" = :auditID;

--insert samples data to general samples
INSERT INTO "hc.hph.genomics.db.models::General.Samples"
("SampleIndex", "DWAuditID","DWSource","ReferenceID","SampleID","SampleClass","PatientDWID","InteractionDWID","AnalysisDate","OrgID","Phenotype")
select "SampleIndex","DWAuditID","DWSource","ReferenceID","SampleID","SampleClass","PatientDWID","InteractionDWID",CURRENT_TIMESTAMP,"OrgID","Phenotype"
FROM "#generalSampleTemp";

--insert interaction key
INSERT INTO "hc.hph.cdw.db.models::DWEntities.Interactions_Key"
("DWID","DWAuditID","DWSource","InteractionID")
(SELECT "InteractionDWID","DWAuditID","DWSource",CAST("SampleIndex" AS VARCHAR) 
FROM "hc.hph.genomics.db.models::General.Samples" WHERE "DWAuditID"=:auditID  AND "InteractionDWID" IS NOT NULL);

--insert interaction attributes
INSERT INTO "hc.hph.cdw.db.models::DWEntities.Interactions_Attr"
("DWID","DWAuditID","DWDateFrom","DWDateTo","DWID_Patient","DWID_ParentInteraction","DWID_Condition","InteractionType.OriginalValue",
"InteractionType.Code","InteractionType.CodeSystem","InteractionType.CodeSystemVersion","InteractionStatus","PeriodStart","PeriodEnd","OrgID")
(SELECT "InteractionDWID","DWAuditID",CURRENT_UTCTIMESTAMP,CAST( NULL AS TIMESTAMP ),"PatientDWID",CAST( NULL AS VARBINARY(32) ),
CAST( NULL AS VARBINARY(32) ),'Genomic',null,null,null,null,"AnalysisDate","AnalysisDate","OrgID" 
FROM "hc.hph.genomics.db.models::General.Samples" WHERE "DWAuditID"=:auditID AND "InteractionDWID" IS NOT NULL);

--insert interaction details
INSERT INTO "hc.hph.cdw.db.models::DWEntitiesEAV.Interaction_Details"
("DWID","DWAuditID","DWDateFrom","DWDateTo","Attribute.OriginalValue","Attribute.Code","Attribute.CodeSystem","Attribute.CodeSystemVersion",
"Value.OriginalValue","Value.Code","Value.CodeSystem","Value.CodeSystemVersion")
(SELECT "InteractionDWID","DWAuditID",CURRENT_UTCTIMESTAMP,CAST( NULL AS TIMESTAMP ),'SampleClass',null,null,null,"SampleClass",null,null,null 
FROM "hc.hph.genomics.db.models::General.Samples" WHERE "DWAuditID"=:auditID AND "InteractionDWID" IS NOT NULL UNION ALL 
SELECT "InteractionDWID","DWAuditID",CURRENT_UTCTIMESTAMP,CAST( NULL AS TIMESTAMP ),'SampleIndex',null,null,null,CAST("SampleIndex" AS VARCHAR ),
null,null,null FROM "hc.hph.genomics.db.models::General.Samples" WHERE "DWAuditID"=:auditID AND "InteractionDWID" IS NOT NULL UNION ALL
SELECT "InteractionDWID","DWAuditID",CURRENT_UTCTIMESTAMP,CAST( NULL AS TIMESTAMP ),'DataType',null,null,null,'Region',
null,null,null FROM "hc.hph.genomics.db.models::General.Samples" WHERE "DWAuditID"=:auditID AND "InteractionDWID" IS NOT NULL);

EXEC' INSERT INTO "hc.hph.genomics.db.models::SV.Regions" 
SELECT ''' ||ESCAPE_SINGLE_QUOTES(:businessKey) || ''', "DWAuditID", "ReferenceID", "ChromosomeIndex", "Region.Begin", "Region.End", "FeatureID", 
"Class", "FeatureName", "Strand", 0, "Score", NULL, "Description", "FileChromosomeName", "Color" from "#bedFeature" 
where "ChromosomeIndex" is not NULL';

END IF;

END;
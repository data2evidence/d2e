PROCEDURE "hc.hph.plugins.ldap.interface.procedures::validateVirtualTable" (IN remoteSourceName NVARCHAR (256) , IN entity NVARCHAR(256) ,
 OUT STATUS TINYINT,
OUT OT_ERROR TABLE ("ERROR_TABLE" NVARCHAR(256))) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY DEFINER
	AS
BEGIN

    DECLARE orgTableCount INTEGER := 0;
    DECLARE userTableCount INTEGER := 0;
    DECLARE userOrgTableCount INTEGER := 0;
    DECLARE logTableCount INTEGER := 0;
    DECLARE traceTableCount INTEGER := 0;
    DECLARE STRINGARRAY  NVARCHAR(50) ARRAY;
    declare i INTEGER;
    i := 1;
  
    
    
    SELECT COUNT(*) INTO orgTableCount FROM "hc::VIRTUAL_TABLES" WHERE  "REMOTE_SOURCE_NAME" = :remoteSourceName AND  "REMOTE_OBJECT_NAME" = 'CDMDEFAULT_VT_UM_ORG' ;
    SELECT COUNT(*) INTO logTableCount FROM "hc::VIRTUAL_TABLES" WHERE  "REMOTE_SOURCE_NAME" = :remoteSourceName AND  "REMOTE_OBJECT_NAME" = 'CDMDEFAULT_VT_LOG_DETAIL' ;
    SELECT COUNT(*) INTO traceTableCount FROM "hc::VIRTUAL_TABLES" WHERE  "REMOTE_SOURCE_NAME" = :remoteSourceName AND  "REMOTE_OBJECT_NAME" = 'CDMDEFAULT_VT_LOG_TRACE' ;
    status := 0;
    IF(:orgTableCount <> 1)THEN
     STRINGARRAY[:i] := 'CDMDEFAULT_VT_UM_ORG';
     i := :i+1;
    END IF;
    IF(:logTableCount <> 1)THEN
     STRINGARRAY[:i] := 'CDMDEFAULT_VT_LOG_DETAIL';
     i := :i+1;
    END IF;
    IF(:traceTableCount <> 1)THEN
    STRINGARRAY[:i] := 'CDMDEFAULT_VT_LOG_TRACE';
     i := :i+1;
    END IF;
    IF (:entity = 'U') THEN
    SELECT COUNT(*) INTO userTableCount FROM "hc::VIRTUAL_TABLES" WHERE  "REMOTE_SOURCE_NAME" = :remoteSourceName AND  "REMOTE_OBJECT_NAME" = 'CDMDEFAULT_VT_UM_USER' ;
    SELECT COUNT(*) INTO userOrgTableCount FROM "hc::VIRTUAL_TABLES" WHERE  "REMOTE_SOURCE_NAME" = :remoteSourceName AND  "REMOTE_OBJECT_NAME" = 'CDMDEFAULT_VT_UM_ORG_USER';
    
     IF(:userTableCount <> 1)THEN
     STRINGARRAY[:i] := 'CDMDEFAULT_VT_UM_USER';
     i := :i+1;
    END IF;
    IF(:userOrgTableCount <> 1)THEN
    STRINGARRAY[:i] := 'CDMDEFAULT_VT_UM_ORG_USER';
     i := :i+1;
    END IF;
    
    IF (:orgTableCount = 1 AND logTableCount = 1  AND traceTableCount = 1 AND userTableCount = 1 AND traceTableCount = 1)THEN
        status := 1;
       
    END IF;
   
    ELSE IF(:orgTableCount = 1 AND logTableCount = 1  AND traceTableCount = 1)THEN
        status := 1;
        END IF;
        END IF;
    
    OT_ERROR = UNNEST (:STRINGARRAY) AS ("ERROR_TABLE");
    

END;

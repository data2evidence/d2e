PROCEDURE "hc.hph.plugins.ccdi.db.procedures::checkSchemaTableInputString" (
    IN input_string VARCHAR(500),
    OUT schema_name_string VARCHAR(500),
    OUT table_name_string VARCHAR(500),
    OUT input_string_valid INT
)
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER

   --READS SQL DATA AS
   AS


BEGIN

DECLARE result_count INT := 0;

SELECT COUNT(*) INTO result_count  FROM "hc::TABLES"
WHERE
'' || SCHEMA_NAME || '.' || TABLE_NAME || '' = input_string OR --without schema quotes without table quotes 
'' || SCHEMA_NAME || '."' || TABLE_NAME || '"'= input_string OR --without schema quotes with table quotes 
'"' || SCHEMA_NAME || '"."' || TABLE_NAME || '"'= input_string OR --with schema quotes with table quotes 
'"' || SCHEMA_NAME || '".' || TABLE_NAME || ''= input_string OR --with schema quotes without table quotes

'' || TABLE_NAME || ''= input_string OR --without schema without table quotes 
'"' || TABLE_NAME || '"'= input_string --without schema with table quotes
;

IF (result_count = 1)
THEN
 BEGIN
 --
 SELECT SCHEMA_NAME, TABLE_NAME INTO schema_name_string, table_name_string FROM "hc::TABLES" 
WHERE
'' || SCHEMA_NAME || '.' || TABLE_NAME || '' = input_string OR --without schema quotes without table quotes 
'' || SCHEMA_NAME || '."' || TABLE_NAME || '"'= input_string OR --without schema quotes with table quotes 
'"' || SCHEMA_NAME || '"."' || TABLE_NAME || '"'= input_string OR --with schema quotes with table quotes 
'"' || SCHEMA_NAME || '".' || TABLE_NAME || ''= input_string OR --with schema quotes without table quotes

'' || TABLE_NAME || ''= input_string OR --without schema without table quotes 
'"' || TABLE_NAME || '"'= input_string --without schema with table quotes
;

input_string_valid := 1;
 END;

ELSEIF (result_count > 1)
THEN
 BEGIN
		SELECT SCHEMA_NAME, TABLE_NAME INTO schema_name_string, table_name_string FROM "hc::TABLES" 
		WHERE (
		'' || TABLE_NAME || '' = input_string OR --without schema quotes without table quotes 
		'' || '"' || TABLE_NAME || '"'= input_string  --without schema quotes with table quotes
		) AND SCHEMA_NAME=CURRENT_SCHEMA
		;
		input_string_valid := 1;
		--the case that the table exists in multiple schemas, but not in the schema of the HDI container is not addressed here!!!
 END;

ELSE
 -- result_count is 0
 input_string_valid := 0;
END IF;

SELECT schema_name_string, table_name_string, input_string_valid FROM "hc::DUMMY";

END;
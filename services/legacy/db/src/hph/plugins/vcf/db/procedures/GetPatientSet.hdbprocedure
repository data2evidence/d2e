PROCEDURE "hc.hph.plugins.vcf.db.procedures::GetPatientSet" ( 
    IN sampleInput "hc.hph.plugins.vcf.db.models::Staging.sampleDocType",
    IN guardedPatients "hc.hph.cdw.db.models::DWViews.V_GuardedPatient",
    OUT samplePatientOutput "hc.hph.plugins.vcf.db.models::Staging.samplePatientType",
    OUT o_message TABLE ("Error Code" NVARCHAR(100), "Error Message" NVARCHAR(100))
)
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER AS
BEGIN
DECLARE uniquePatientCount INT;
DECLARE cdwPatientCount INT;
DECLARE CUSTOMCONDITION CONDITION FOR SQL_ERROR_CODE 10001;
DECLARE EXIT HANDLER FOR CUSTOMCONDITION
    BEGIN
        o_message = SELECT ::SQL_ERROR_CODE AS "Error Code", ::SQL_ERROR_MESSAGE AS "Error Message" FROM "hc::DUMMY"; 
    END;
SELECT COUNT(DISTINCT "PatientID") INTO uniquePatientCount FROM :sampleInput;
IF uniquePatientCount = 1 THEN
    SELECT COUNT(DISTINCT PK."PatientID") INTO cdwPatientCount
    FROM "hc.hph.cdw.db.models::DWEntities.Patient_Key" PK
    INNER JOIN 
    :sampleInput TT
    ON
    PK."PatientID" LIKE_REGEXPR TT."PatientID" FLAG TT."PatientIDFlag";
    IF cdwPatientCount > 1 THEN
        SIGNAL CUSTOMCONDITION SET MESSAGE_TEXT = 'Multiple patients found for the given sample';
    END IF;
END IF;
   samplePatientOutput = SELECT 
   CASE WHEN gp."PatientID" IS NULL THEN '****' ELSE PA."FamilyName" END as "FamilyName",
   TO_VARCHAR(PA."DWID") as "PatientID",
   CASE WHEN gp."PatientID" IS NULL THEN '****' ELSE PA."Gender.OriginalValue" END as "Gender", 
   PK."PatientID" as "PatientDBID", 
   CASE WHEN gp."PatientID" IS NULL THEN '****' ELSE PA."GivenName" END as "GivenName",
   CASE WHEN gp."PatientID" IS NULL THEN '****' ELSE TO_NVARCHAR(PA."BirthDate") END as "BirthDate",
   TT."sampleId",
   TT."fileName", 
   TT."IntType",
   TT."IntDate",
   TT."sourceURI",
   CASE WHEN gp."PatientID" IS NULL THEN 0 ELSE 1 END as "Scope"
   FROM :sampleInput as TT
   INNER JOIN 
    "hc.hph.cdw.db.models::DWEntities.Patient_Key" as PK 
    ON 
    PK."DWSource" LIKE_REGEXPR TT."DWSource" FLAG TT."DWSourceFlag" AND PK."PatientID" LIKE_REGEXPR TT."PatientID" FLAG TT."PatientIDFlag" AND PK."PatientID" NOT IN(
        SELECT IPK."PatientID"
        FROM "hc.hph.cdw.db.models::DWEntities.Patient_Key" IPK
        JOIN 
        :sampleInput ITT
        ON
        IPK."PatientID" LIKE_REGEXPR ITT."PatientID" FLAG ITT."PatientIDFlag" AND IPK."DWSource" LIKE_REGEXPR ITT."DWSource" FLAG ITT."DWSourceFlag"
        GROUP BY IPK."PatientID"
        HAVING COUNT(DISTINCT IPK."DWSource") > 1
    )
   INNER JOIN
    "hc.hph.cdw.db.models::DWEntities.Patient_Attr" as PA 
    ON
    PK."DWID"=PA."DWID"
   LEFT OUTER JOIN 
    :guardedPatients AS gp 
     ON 
     PA."DWID" = gp."PatientID"; 
END;   
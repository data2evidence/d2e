PROCEDURE "hc.hph.plugins.vcf.db.procedures.annotation::VCFNegativeStrandAnnotation" (IN geneAnnotationNonCoding "hc.hph.plugins.vcf.db.models::Staging.geneNonCodingType",
	 IN dwAuditID int,
	 IN dwAuditIDFeatureTable int,
	 OUT geneAnnotationCoding "hc.hph.plugins.vcf.db.models::Staging.geneCodingType") Language SQLSCRIPT SQL SECURITY INVOKER AS 
begin geneAnnotationCoding=select
	 geneAnnotationNonCoding."DWAuditID",
	 geneAnnotationNonCoding."VariantIndex",
	 geneAnnotationNonCoding."ChromosomeIndex",
	 geneAnnotationNonCoding."Position",
	 geneAnnotationNonCoding."AlleleIndex",
	 geneAnnotationNonCoding."ALTALLELE",
	 geneAnnotationNonCoding."REFALLELE",
	 geneAnnotationNonCoding."VT",
	 geneAnnotationNonCoding."GENENAME",
	 geneAnnotationNonCoding."Region",
	 geneAnnotationNonCoding."Class",
	 case when geneAnnotationNonCoding."Class" not in ('CDS_region',
	 'start_codon',
	 'stop_codon',
	 'five_prime_UTR',
	 'three_prime_UTR') 
then null 
--case 1 --pos 1 and pos= cds begin + get 2 from previous CDS 
when mod(abs((Seq."Region.End"-1)-geneAnnotationNonCoding."Position")+Seq."CDSPosition",
	 3)=0 
and geneAnnotationNonCoding."Position" =  Seq."Region.Begin"
and Seq."Rank" >1 
then concat (SUBSTRING (Seq."PrePost",1,2),geneAnnotationNonCoding."REFALLELE")

--case 2 --pos 1 and pos= cds begin +1 last NB lies in prev line  
when mod(abs((Seq."Region.End"-1)-geneAnnotationNonCoding."Position")+Seq."CDSPosition",
3)=0 
and geneAnnotationNonCoding."Position" = Seq."Region.Begin"+1 
and Seq."Rank" >1 
then SUBSTRING (Seq."PrePost",2,1)|| SUBSTRING (TO_CHAR(Seq."Sequence"),
	 1,--SUBSTRING(TO_CHAR("Sequence"),geneAnnotationNonCoding."Position"-Seq."Region.Begin"+1)-1
	 2) 
-- pos 1  ideal case snip prev 2 NB 
when mod(abs((Seq."Region.End"-1)-geneAnnotationNonCoding."Position")+Seq."CDSPosition",
	 3)=0 
THEN SUBSTRING (TO_CHAR(Seq."Sequence"),
	 abs(geneAnnotationNonCoding."Position"-Seq."Region.Begin" +1)-2,
	 3) 
	 

-- position 2 and 1 nucleotide in next line --case 6
when mod(abs((Seq."Region.End"-1)-geneAnnotationNonCoding."Position")+Seq."CDSPosition",
	 3)=1 
and  geneAnnotationNonCoding."Position" = Seq."Region.End" - 1
THEN SUBSTRING (TO_CHAR(Seq."Sequence"),
	 abs(geneAnnotationNonCoding."Position"-Seq."Region.Begin" +1 )-1,
	 2) || SUBSTRING(Seq."PrePost",3,1) 
	 
	 -- position 2 and 1 nucleotide in previous line --case 7
when mod(abs((Seq."Region.End"-1)-geneAnnotationNonCoding."Position")+Seq."CDSPosition",
	 3)=1 
and Seq."Region.Begin" = geneAnnotationNonCoding."Position" 
and Seq."Rank" >1 
then SUBSTRING(Seq."PrePost",
	 2,
	 1) || SUBSTRING(TO_CHAR(Seq."Sequence"),
	 abs(geneAnnotationNonCoding."Position"-Seq."Region.Begin" +1 ),
	 2) 
 
 -- position 2  --case 2 - ideal case go one NB back and snip 3 
when mod(abs((Seq."Region.End"-1)-geneAnnotationNonCoding."Position")+Seq."CDSPosition",
	 3)=1 
THEN SUBSTRING (TO_CHAR(Seq."Sequence"),
	 abs(geneAnnotationNonCoding."Position"-Seq."Region.Begin" + 1 )-1,
	 3) 
-- pos 3 and 1 nucleotide in next line --case 3
when mod(abs((Seq."Region.End"-1)-geneAnnotationNonCoding."Position")+Seq."CDSPosition",
	 3)=2 
and  geneAnnotationNonCoding."Position" = (Seq."Region.End"-1)-1
then SUBSTRING (TO_CHAR(Seq."Sequence"),
	 abs(geneAnnotationNonCoding."Position"-Seq."Region.Begin" +1 ),
	 2) || SUBSTRING(Seq."PrePost",3,1)
	  
-- pos 3 and 2 nucleotides in next line --case 4
when mod(abs((Seq."Region.End"-1)-geneAnnotationNonCoding."Position")+Seq."CDSPosition",
	 3)=2 
and geneAnnotationNonCoding."Position" = Seq."Region.End" -1
then geneAnnotationNonCoding."REFALLELE" || SUBSTRING(Seq."PrePost",
	 3,2)
	 
 -- position 3 ideal case  --case 8
when mod(abs((Seq."Region.End"-1)-geneAnnotationNonCoding."Position")+Seq."CDSPosition",
	 3)=2 
THEN SUBSTRING (TO_CHAR(Seq."Sequence"),
	 abs(geneAnnotationNonCoding."Position"-Seq."Region.Begin" + 1 ),
	 3) 
END as REFCODON,
	 --geneAnnotationNonCoding."ALTALLELE",
case when geneAnnotationNonCoding."Class" not in ('CDS_region',
	 'start_codon',
	 'stop_codon',
	 'five_prime_UTR',
	 'three_prime_UTR') 
then null 
--case 1 --pos 1 and pos= cds begin + get 2 from previous CDS 
when mod(abs((Seq."Region.End"-1)-geneAnnotationNonCoding."Position")+Seq."CDSPosition",
	 3)=0 
and geneAnnotationNonCoding."Position" =  Seq."Region.Begin"
and Seq."Rank" >1 
then concat (SUBSTRING (Seq."PrePost",1,2),geneAnnotationNonCoding."ALTALLELE")

--case 2 --pos 1 and pos= cds begin +1 last NB lies in prev line  
when mod(abs((Seq."Region.End"-1) - geneAnnotationNonCoding."Position")+Seq."CDSPosition",
3)=0 
and geneAnnotationNonCoding."Position" = Seq."Region.Begin"+1 
and Seq."Rank" >1 
then SUBSTRING (Seq."PrePost",2,1)|| SUBSTRING (TO_CHAR(Seq."Sequence"),
	 1,--SUBSTRING(TO_CHAR("Sequence"),geneAnnotationNonCoding."Position"-Seq."Region.Begin"+1)-1
	 1)||geneAnnotationNonCoding."ALTALLELE" 
-- pos 1  ideal case snip prev 2 NB 
when mod(abs( (Seq."Region.End"-1) -geneAnnotationNonCoding."Position")+Seq."CDSPosition",
	 3)=0 
THEN SUBSTRING (TO_CHAR(Seq."Sequence"),
	 abs(geneAnnotationNonCoding."Position"-Seq."Region.Begin" +1)-2,
	 2) ||geneAnnotationNonCoding."ALTALLELE"
	 

-- position 2 and 1 nucleotide in next line --case 6
when mod(abs((Seq."Region.End"-1)-geneAnnotationNonCoding."Position")+Seq."CDSPosition",
	 3)=1 
and  geneAnnotationNonCoding."Position" = Seq."Region.End" - 1
THEN SUBSTRING (TO_CHAR(Seq."Sequence"),
	 abs(geneAnnotationNonCoding."Position"-Seq."Region.Begin" +1 )-1,
	 1)|| geneAnnotationNonCoding."ALTALLELE" || SUBSTRING(Seq."PrePost",3,1) 
	 
	 -- position 2 and 1 nucleotide in previous line --case 7
when mod(abs((Seq."Region.End"-1)-geneAnnotationNonCoding."Position")+Seq."CDSPosition",
	 3)=1 
and Seq."Region.Begin" = geneAnnotationNonCoding."Position" 
and Seq."Rank" >1 
then SUBSTRING(Seq."PrePost",
	 2,
	 1) ||geneAnnotationNonCoding."ALTALLELE"|| SUBSTRING(TO_CHAR(Seq."Sequence"),
	 abs(geneAnnotationNonCoding."Position"-Seq."Region.Begin" +1 )+1,
	 1) 
 
 -- position 2  --case 2 - ideal case go one NB back and snip 3 
when mod(abs((Seq."Region.End"-1)-geneAnnotationNonCoding."Position")+Seq."CDSPosition",
	 3)=1 
THEN SUBSTRING (TO_CHAR(Seq."Sequence"),
	 abs(geneAnnotationNonCoding."Position"-Seq."Region.Begin" + 1 )-1,
	 1)||geneAnnotationNonCoding."ALTALLELE"|| SUBSTRING (TO_CHAR(Seq."Sequence"),
	 abs(geneAnnotationNonCoding."Position"-Seq."Region.Begin" + 1 )+1,
	 1)
-- pos 3 and 1 nucleotide in next line --case 3
when mod(abs((Seq."Region.End"-1)-geneAnnotationNonCoding."Position")+Seq."CDSPosition",
	 3)=2 
and  geneAnnotationNonCoding."Position" = (Seq."Region.End"-1)-1
then geneAnnotationNonCoding."ALTALLELE"|| SUBSTRING (TO_CHAR(Seq."Sequence"),
	 abs(geneAnnotationNonCoding."Position"-Seq."Region.Begin" +1 )+1,
	 1) || SUBSTRING(Seq."PrePost",3,1)
	  
-- pos 3 and 2 nucleotides in next line --case 4
when mod(abs((Seq."Region.End"-1)-geneAnnotationNonCoding."Position")+Seq."CDSPosition",
	 3)=2 
and geneAnnotationNonCoding."Position" = Seq."Region.End" -1
then geneAnnotationNonCoding."ALTALLELE" || SUBSTRING(Seq."PrePost",
	 3,2)
	 
 -- position 3 ideal case  --case 8
when mod(abs((Seq."Region.End"-1)-geneAnnotationNonCoding."Position")+Seq."CDSPosition",
	 3)=2 
THEN geneAnnotationNonCoding."ALTALLELE"|| SUBSTRING (TO_CHAR(Seq."Sequence"),
	 abs(geneAnnotationNonCoding."Position"-Seq."Region.Begin" + 1 )+1,
	 2) 
END as "ALTCODON",
	 geneAnnotationNonCoding."Strand",
	 abs( ( Seq."Region.End" - 1 ) - geneAnnotationNonCoding."Position")+Seq."CDSPosition" as "CDSPosition",
	 geneAnnotationNonCoding."Transcript" as "Transcript",
	 geneAnnotationNonCoding."FeatureName" as "Protein",
	 geneAnnotationNonCoding."ExonRank" as "ExonRank",
	 geneAnnotationNonCoding."RunAuditID"
from :geneAnnotationNonCoding as geneAnnotationNonCoding 
left outer join "hc.hph.genomics.db.models::Reference.FeaturesAnnotation" as Seq on (Seq."ChromosomeIndex"=geneAnnotationNonCoding."ChromosomeIndex" 
	and geneAnnotationNonCoding."Position" between Seq."Region.Begin" 
	and Seq."Region.End"-1 
	and Seq."FeatureName"= geneAnnotationNonCoding."FeatureName"
	and Seq."Transcript"= geneAnnotationNonCoding."Transcript"
	and (geneAnnotationNonCoding."DWAuditID" = :dwAuditID 
		or :dwAuditID is null) 
	and Seq."RunAuditID" = :dwAuditIDFeatureTable) --and Seq."Strand"='+'--and LENGTH(Seq."PrePost") >=2
 
where geneAnnotationNonCoding."AlleleIndex" >0 
and (geneAnnotationNonCoding."DWAuditID" = :dwAuditID 
	or :dwAuditID is null) 
and geneAnnotationNonCoding."Class" in ('CDS_region',
	 'start_codon',
	 'stop_codon',
	 'five_prime_UTR',
	 'three_prime_UTR') 
order by geneAnnotationNonCoding."Position" 
;
 
END 
;

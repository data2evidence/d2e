PROCEDURE "hc.hph.plugins.vcf.db.procedures::ValidateTableParameters" ( IN dw_source NVARCHAR(255), IN schema_name NVARCHAR(255), IN table_name NVARCHAR(255), IN org_id NVARCHAR(255), OUT error_message NVARCHAR(5000) )
LANGUAGE SQLSCRIPT SQL SECURITY INVOKER READS SQL DATA AS
BEGIN
    DECLARE status TINYINT := 0;
    error_message := NULL;
    
    IF LENGTH( :dw_source ) = 0 THEN
        error_message := 'Missing DW source';
        RETURN;
    END IF;
    CALL "hc.hph.di.procedures.validation::ValidateDWSource" ( :dw_source, status );
    IF :status = 0 THEN
        error_message := 'Invalid DW source ''' || ESCAPE_SINGLE_QUOTES( :dw_source ) || '''';
        RETURN;
    END IF;

    IF LENGTH( :schema_name ) = 0 THEN
        error_message := 'Missing schema name for input table';
        RETURN;
    END IF;
    IF LENGTH( :table_name ) = 0 THEN
        error_message := 'Missing input table';
        RETURN;
    END IF;
    CALL "hc.hph.di.procedures.validation::ValidateTable" ( :schema_name, :table_name, status );
    IF :status = 0 THEN
        CALL "hc.hph.di.procedures.validation::ValidateView" ( :schema_name, :table_name, status );
    END IF;
    IF :status = 0 THEN
        CALL "hc.hph.di.procedures.validation::ValidateVirtualTable" ( :schema_name, :table_name, NULL, status );
    END IF;
    IF :status = 0 THEN
        error_message := 'Invalid input table "' || ESCAPE_DOUBLE_QUOTES( :schema_name ) || '"."' || ESCAPE_DOUBLE_QUOTES( :table_name ) || '"';
        RETURN;
    END IF;

    IF LENGTH( :org_id ) = 0 THEN
        error_message := 'Missing org ID';
        RETURN;
    END IF;
    CALL "hc.hph.di.procedures.validation::ValidateOrgID" ( :org_id, status );
    IF :status = 0 THEN
        error_message := 'Invalid org ID ''' || ESCAPE_SINGLE_QUOTES( :org_id ) || '''';
        RETURN;
    END IF;
END;

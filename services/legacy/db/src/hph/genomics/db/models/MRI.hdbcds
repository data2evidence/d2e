namespace hc.hph.genomics.db.models;

using hc.hph.genomics.db.models::SNV as SNV;


context MRI
{

	view Variants as select from SNV.VariantAnnotations
	{
		Genotype.Sample.PatientKey.DWID,
		Genotype.SampleIndex,
		Genotype.Sample.SampleClass,
		GenotypeAllele.AlleleCount,
		ChromosomeIndex,
		Position + 1 as Position,
		GeneName,
		Region,
		SequenceAlteration,
		MutationType
	}
	where
		AlleleIndex > 0;

	view VariantInteractions as select from SNV.GenotypeAlleles
	{
		VariantAnnotation.Genotype.Sample.PatientDWID as PATIENT_ID,
		VariantAnnotation.ChromosomeIndex || '_' || TO_VARCHAR(DWAuditID) || '_' || TO_VARCHAR(VariantIndex) || TO_VARCHAR(AlleleIndex) || IFNULL('_' || VariantAnnotation.GeneName, '') AS INTERACTION_ID,
		TO_BIGINT(VariantAnnotation.ChromosomeIndex) * 1000000000 + VariantAnnotation.Position as POSITION_START,
		TO_BIGINT(VariantAnnotation.ChromosomeIndex) * 1000000000 + VariantAnnotation.Position as POSITION_END,
		VariantAnnotation.SequenceAlteration as SEQUENCE_ALTERATION,
		VariantAnnotation.GeneName as GENE_NAME,
		VariantAnnotation.Region as REGION,
		VariantAnnotation.AminoAcid.Reference as AA_REF,
		VariantAnnotation.AminoAcid.Alternative as AA_ALT,
		VariantAnnotation.MutationType as VARIANT_TYPE
	}
	where
		AlleleIndex > 0 AND AlleleCount > 0;

	view VariantInteractionsDWViews as select from SNV.GenotypeAlleles
	{
		VariantAnnotation.Genotype.Sample.PatientDWID as "PatientID",
		VariantAnnotation.ChromosomeIndex || '_' || TO_VARCHAR(DWAuditID) || '_' || TO_VARCHAR(VariantIndex) || TO_VARCHAR(AlleleIndex) || IFNULL('_' || VariantAnnotation.GeneName, '') AS "InteractionID",
		TO_BIGINT(VariantAnnotation.ChromosomeIndex) * 1000000000 + VariantAnnotation.Position as POSITION_START,
		TO_BIGINT(VariantAnnotation.ChromosomeIndex) * 1000000000 + VariantAnnotation.Position as POSITION_END,
		VariantAnnotation.SequenceAlteration as SEQUENCE_ALTERATION,
		VariantAnnotation.GeneName as GENE_NAME,
		VariantAnnotation.Region as REGION,
		VariantAnnotation.AminoAcid.Reference as AA_REF,
		VariantAnnotation.AminoAcid.Alternative as AA_ALT,
		VariantAnnotation.MutationType as VARIANT_TYPE,
		DWAuditID AS "DWAuditID",
		VariantIndex AS "VariantIndex",
		AlleleIndex AS "AlleleIndex",
		SampleIndex AS "SampleIndex"
	}
	where
		AlleleIndex > 0 AND AlleleCount > 0;

};

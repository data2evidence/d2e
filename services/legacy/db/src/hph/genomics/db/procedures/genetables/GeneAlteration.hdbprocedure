PROCEDURE "hc.hph.genomics.db.procedures.genetables::GeneAlteration" (
    IN sample_list "hc.hph.genomics.db.models::General.SampleList",
    IN variant_grouping "hc.hph.genomics.db.models::VariantBrowser.VariantAnnotationGrouping",
    IN annotationGrouping BOOLEAN,
    IN sortColumn NVARCHAR(255),
    IN sortType NVARCHAR(10),
    IN reference NVARCHAR(255),
    IN guardedPatients "hc.hph.cdw.db.models::DWViews.V_GuardedPatient",
    OUT output"hc.hph.genomics.db.models::VariantBrowser.GeneAlteration",
    OUT cohortgroup "hc.hph.genomics.db.models::VariantBrowser.GeneAltCohortGroup")
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   READS SQL DATA AS
BEGIN
   DECLARE totalPatients INTEGER;

   SELECT COUNT(DISTINCT S."PatientDWID") INTO totalPatients 
   FROM 
    "hc.hph.genomics.db.models::General.SessionSampleGroups"  TT       -- /* temporary temple for getting patients from cohorts*/
        JOIN "hc.hph.genomics.db.models::General.Samples" AS S
	           ON TT."SampleIndex" = S."SampleIndex"
	    INNER JOIN :guardedPatients AS gp
	        ON S."PatientDWID" = gp."PatientID"; 

    cohortgroup = SELECT S."SampleIndex" AS "index",
                    BINTOHEX(S."InteractionDWID") AS "interactionDWID",
                    S."SampleClass" AS "class",
                    BINTOHEX(S."PatientDWID") AS "patientDWID",
                    S."SampleID" AS "sampleID",
                    PA."GivenName" AS "firstName",
                    PA."FamilyName" AS "lastName",
                    PA."BirthDate" AS "birthDate"
                    FROM
                    	:sample_list TT
                        	JOIN "hc.hph.genomics.db.models::General.Samples" AS S
	                        	ON TT."SampleIndex" = S."SampleIndex"
	                        JOIN "hc.hph.cdw.db.models::DWEntities.Patient_Attr" AS PA
	                        	ON PA."DWID"=S."PatientDWID"
	                        INNER JOIN :guardedPatients AS gp
	                            ON S."PatientDWID" = gp."PatientID";

   IF annotationGrouping = true
   THEN
            geneGroup = SELECT GA."GeneName" AS "Gene name",
                            ROUND((COUNT(DISTINCT CG."patientDWID") / :totalPatients * 100), 4) AS "Patient fraction"
                         FROM 
                            :cohortgroup AS CG
                                JOIN "hc.hph.genomics.db.models::SNV.Genotypes" AS G
        	                        ON CG."index" = G."SampleIndex" AND G."ReferenceAlleleCount" <> G."CopyNumber"
        	                    JOIN "hc.hph.genomics.db.models::SNV.Variants" AS UV
        	                        ON G."DWAuditID" = UV."DWAuditID" AND G."VariantIndex" = UV."VariantIndex"
        	                    JOIN (SELECT DISTINCT CASE WHEN "FeatureName" IS NULL OR "FeatureName" = '' THEN "FeatureID" ELSE "FeatureName" END AS "GeneName",
        	                        "ChromosomeIndex","Region.Begin","Region.End" FROM "hc.hph.genomics.db.models::Reference.Features" WHERE "ReferenceID"=:reference AND "Class"='gene') AS GA
        	                        ON UV."ChromosomeIndex" = GA."ChromosomeIndex" AND UV."Position">= GA."Region.Begin" AND UV."Position"< GA."Region.End"
        	                    JOIN :variant_grouping
                                    ON :variant_grouping."DWAuditID" = G."DWAuditID" AND :variant_grouping."VariantIndex" = G."VariantIndex" 
        	            GROUP BY GA."GeneName"        	           
            	        ORDER BY 
                            CASE WHEN :sortColumn = 'Gene name' AND :sortType = 'ASC' THEN "Gene name" ELSE NULL END ASC,
                            CASE WHEN :sortColumn = 'Gene name' AND :sortType = 'DESC' THEN "Gene name" ELSE NULL END DESC,
                            CASE WHEN :sortColumn = 'Patient fraction' AND :sortType = 'ASC' THEN "Patient fraction" ELSE NULL END ASC,
                            CASE WHEN :sortColumn = 'Patient fraction' AND :sortType = 'DESC' THEN "Patient fraction" ELSE NULL END DESC
	                    LIMIT 100;  
			
			output = SELECT DISTINCT GA."GeneName" AS "Gene name",
                    GS."Patient fraction" AS "Patient fraction",
                    CG."index" AS "index",
                    CG."interactionDWID" AS "interactionDWID",
                    CG."class" AS "class",
                    CG."patientDWID" AS "patientDWID",
                    CG."sampleID" AS "sampleID",
                    CG."firstName" AS "firstName",
                    CG."lastName" AS "lastName",
                    CG."birthDate" AS "birthDate",
                    :variant_grouping."Grouping" AS "Grouping"
                    FROM
                    	:cohortgroup AS CG
	                        JOIN "hc.hph.genomics.db.models::SNV.Genotypes" AS G
	                        	ON CG."index" = G."SampleIndex" AND G."ReferenceAlleleCount" <> G."CopyNumber"
	                        JOIN "hc.hph.genomics.db.models::SNV.Variants" AS UV
	                           	ON G."DWAuditID" = UV."DWAuditID" AND G."VariantIndex" = UV."VariantIndex"
	                        JOIN :variant_grouping
                                ON :variant_grouping."DWAuditID" = G."DWAuditID" AND :variant_grouping."VariantIndex" = G."VariantIndex"
	                        JOIN (SELECT DISTINCT CASE WHEN "FeatureName" IS NULL OR "FeatureName" = '' THEN "FeatureID" ELSE "FeatureName" END AS "GeneName",
	                            "ChromosomeIndex","Region.Begin","Region.End" FROM "hc.hph.genomics.db.models::Reference.Features" WHERE "ReferenceID"=:reference AND "Class"='gene') AS GA
	                        	ON UV."ChromosomeIndex" = GA."ChromosomeIndex" AND UV."Position">= GA."Region.Begin" AND UV."Position"< GA."Region.End"
	                       JOIN :geneGroup AS GS
                                ON GA."GeneName"= GS."Gene name"
					ORDER BY 
                            CASE WHEN :sortColumn = 'Gene name' AND :sortType = 'ASC' THEN "Gene name" ELSE NULL END ASC,
                            CASE WHEN :sortColumn = 'Gene name' AND :sortType = 'DESC' THEN "Gene name" ELSE NULL END DESC,
                            CASE WHEN :sortColumn = 'Patient fraction' AND :sortType = 'ASC' THEN "Patient fraction" ELSE NULL END ASC,
                            CASE WHEN :sortColumn = 'Patient fraction' AND :sortType = 'DESC' THEN "Patient fraction" ELSE NULL END DESC;
	                    
	    
	ELSE
			geneGroup = SELECT GA."GeneName" AS "Gene name",
						 ROUND((COUNT(DISTINCT CG."patientDWID") / :totalPatients * 100), 4) AS "Patient fraction"
						 FROM 
							:cohortgroup AS CG
								JOIN "hc.hph.genomics.db.models::SNV.Genotypes" AS G
									ON CG."index" = G."SampleIndex" AND G."ReferenceAlleleCount" <> G."CopyNumber"
							    JOIN "hc.hph.genomics.db.models::SNV.Variants" AS UV
									ON G."DWAuditID" = UV."DWAuditID" AND G."VariantIndex" = UV."VariantIndex"
								JOIN (SELECT DISTINCT CASE WHEN "FeatureName" IS NULL OR "FeatureName" = '' THEN "FeatureID" ELSE "FeatureName" END AS "GeneName",
	                            "ChromosomeIndex","Region.Begin","Region.End" FROM "hc.hph.genomics.db.models::Reference.Features" WHERE "ReferenceID"=:reference AND "Class"='gene') AS GA
	                        	ON UV."ChromosomeIndex" = GA."ChromosomeIndex" AND UV."Position">= GA."Region.Begin" AND UV."Position"< GA."Region.End"
						GROUP BY GA."GeneName"
						ORDER BY 
                                CASE WHEN :sortColumn = 'Gene name' AND :sortType = 'ASC' THEN "Gene name" ELSE NULL END ASC,
                                CASE WHEN :sortColumn = 'Gene name' AND :sortType = 'DESC' THEN "Gene name" ELSE NULL END DESC,
                                CASE WHEN :sortColumn = 'Patient fraction' AND :sortType = 'ASC' THEN "Patient fraction" ELSE NULL END ASC,
                                CASE WHEN :sortColumn = 'Patient fraction' AND :sortType = 'DESC' THEN "Patient fraction" ELSE NULL END DESC
						LIMIT 100;
						
			output = SELECT DISTINCT GA."GeneName" AS "Gene name",
                    GS."Patient fraction" AS "Patient fraction",
                    CG."index" AS "index",
                    CG."interactionDWID" AS "interactionDWID",
                    CG."class" AS "class",
                    CG."patientDWID" AS "patientDWID",
                    CG."sampleID" AS "sampleID",
                    CG."firstName" AS "firstName",
                    CG."lastName" AS "lastName",
                    CG."birthDate" AS "birthDate",
                    0 as "Grouping"
                    FROM
                    	:cohortgroup AS CG
	                        JOIN "hc.hph.genomics.db.models::SNV.Genotypes" AS G
	                        	ON CG."index" = G."SampleIndex" AND G."ReferenceAlleleCount" <> G."CopyNumber"
	                        JOIN "hc.hph.genomics.db.models::SNV.Variants" AS UV
	                           	ON G."DWAuditID" = UV."DWAuditID" AND G."VariantIndex" = UV."VariantIndex"
	                        JOIN (SELECT DISTINCT CASE WHEN "FeatureName" IS NULL OR "FeatureName" = '' THEN "FeatureID" ELSE "FeatureName" END AS "GeneName",
	                            "ChromosomeIndex","Region.Begin","Region.End" FROM "hc.hph.genomics.db.models::Reference.Features" WHERE "ReferenceID"=:reference AND "Class"='gene') AS GA
	                        	ON UV."ChromosomeIndex" = GA."ChromosomeIndex" AND UV."Position">= GA."Region.Begin" AND UV."Position"< GA."Region.End"
	                       JOIN :geneGroup AS GS
                                ON GA."GeneName"= GS."Gene name"
					ORDER BY 
                            CASE WHEN :sortColumn = 'Gene name' AND :sortType = 'ASC' THEN "Gene name" ELSE NULL END ASC,
                            CASE WHEN :sortColumn = 'Gene name' AND :sortType = 'DESC' THEN "Gene name" ELSE NULL END DESC,
                            CASE WHEN :sortColumn = 'Patient fraction' AND :sortType = 'ASC' THEN "Patient fraction" ELSE NULL END ASC,
                            CASE WHEN :sortColumn = 'Patient fraction' AND :sortType = 'DESC' THEN "Patient fraction" ELSE NULL END DESC;
	END IF;
END 
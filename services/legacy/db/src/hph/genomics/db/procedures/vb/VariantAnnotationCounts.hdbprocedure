PROCEDURE "hc.hph.genomics.db.procedures.vb::VariantAnnotationCounts" (
        IN sample_list "hc.hph.genomics.db.models::General.SampleList",
        IN variant_grouping "hc.hph.genomics.db.models::VariantBrowser.VariantAnnotationGrouping",
        IN reference_id NVARCHAR(255),
        IN chromosome_index INTEGER,
        IN begin_position INTEGER,
        IN end_position INTEGER,
        IN bin_size REAL,
        OUT chromosome_infos "hc.hph.genomics.db.models::VariantBrowser.ChromosomeInfos",
        OUT variant_counts "hc.hph.genomics.db.models::VariantBrowser.VariantDensityAnnotationCounts",
        OUT sample_count INTEGER,
        OUT max_density REAL
    ) 
    LANGUAGE SQLSCRIPT 
    SQL SECURITY INVOKER
    READS SQL DATA AS
BEGIN
    chromosome_infos = SELECT       
            "ChromosomeIndex",
            CASE WHEN :end_position IS NOT NULL AND :end_position < "Size" THEN :end_position ELSE "Size" END AS "Size",
            CEIL( "Size" / :bin_size ) AS "BinCount"
        FROM
            "hc.hph.genomics.db.models::Reference.Chromosomes"
        WHERE
            ( :chromosome_index IS NULL OR "ChromosomeIndex" = :chromosome_index ) AND
            "ReferenceID" = :reference_id
        ORDER BY
            "ChromosomeIndex";

    -- return a list of variants with their bin index
    SELECT COUNT( DISTINCT "PatientDWID" ) INTO sample_count FROM :sample_list AS samples INNER JOIN "hc.hph.genomics.db.models::General.Samples" AS all_samples ON samples."SampleIndex" = all_samples."SampleIndex";
    IF :sample_count = 1 THEN
        DECLARE sample_index INTEGER;
        SELECT "SampleIndex" INTO sample_index FROM :sample_list;
        
        binned_variants = SELECT
                "Variants"."ChromosomeIndex",
                "Variants"."VariantIndex",
                "Variants"."DWAuditID",
                CAST( FLOOR( ( "Position" - :begin_position ) / :bin_size ) AS INTEGER ) AS "BinIndex",
                "Variants"."AlleleIndex",
                MAX( "Variants"."AlleleIndex" ) OVER ( PARTITION BY "Variants"."ChromosomeIndex", "Position", "SampleIndex" ) AS "MaxAlleleIndex",
                "Variants"."SampleIndex"
            FROM
                "hc.hph.genomics.db.models::VariantBrowser.DataModelVariants" AS "Variants"
            INNER JOIN
                :chromosome_infos AS "Chromosomes"
            ON
                "Variants"."ChromosomeIndex" = "Chromosomes"."ChromosomeIndex"
            WHERE
                ( :chromosome_index IS NULL OR "Variants"."ChromosomeIndex" = :chromosome_index ) AND
                ( :end_position IS NULL OR "Position" BETWEEN :begin_position AND :end_position - 1 ) AND
                "Position" < "Size" AND
                "SampleIndex" = :sample_index AND
                "Variants"."AlleleIndex" > 0 AND
                "AlleleCount" > 0 AND
                "Variants"."SampleIndex" = :sample_index;
    ELSE
        binned_variants = SELECT
                "Variants"."ChromosomeIndex",
                "Variants"."VariantIndex",
                "Variants"."DWAuditID",
                CAST( FLOOR( ( "Position" - :begin_position ) / :bin_size ) AS INTEGER ) AS "BinIndex",
                "Variants"."AlleleIndex",
                MAX( "Variants"."AlleleIndex" ) OVER ( PARTITION BY "Variants"."ChromosomeIndex", "Position", "SampleIndex" ) AS "MaxAlleleIndex",
                "Variants"."SampleIndex"
            FROM
                "hc.hph.genomics.db.models::VariantBrowser.DataModelVariants" AS "Variants"
            INNER JOIN
                :chromosome_infos AS "Chromosomes"
            ON
                "Variants"."ChromosomeIndex" = "Chromosomes"."ChromosomeIndex"
            WHERE
                ( :chromosome_index IS NULL OR "Variants"."ChromosomeIndex" = :chromosome_index ) AND
                ( :end_position IS NULL OR "Position" BETWEEN :begin_position AND :end_position - 1 ) AND
                "Position" < "Size" AND
                "SampleIndex" IN ( SELECT "SampleIndex" FROM :sample_list ) AND
                "Variants"."AlleleIndex" > 0 AND
                "AlleleCount" > 0 AND
                "Variants"."SampleIndex" IN ( SELECT "SampleIndex"FROM :sample_list );
    END IF;
    
    -- aggregate bins and return result
    variant_counts = SELECT
            "ChromosomeIndex", 
            "BinIndex",
            COUNT( * ) AS "VariantCount",
            "Grouping"
        FROM
            :binned_variants
        JOIN :variant_grouping 
            ON
                :variant_grouping."AlleleIndex" = :binned_variants."AlleleIndex" AND
                :variant_grouping."VariantIndex" = :binned_variants."VariantIndex" AND
                :variant_grouping."DWAuditID" = :binned_variants."DWAuditID" 
        WHERE
            "MaxAlleleIndex" = :binned_variants."AlleleIndex"
        GROUP BY
            "ChromosomeIndex",
            "BinIndex",
            "Grouping"
        ORDER BY
            "ChromosomeIndex",
            "BinIndex";
            
    SELECT
        MAX( "Count" ) / ( :bin_size * sample_count )
        INTO max_density
        FROM
        (
            SELECT
                SUM( "VariantCount" ) AS "Count"
                FROM
                :variant_counts
                GROUP BY
                    "ChromosomeIndex",
                    "BinIndex"
                ORDER BY
                    "ChromosomeIndex",
                    "Count" DESC
        );
END
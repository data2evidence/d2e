PROCEDURE "hc.hph.eula.procedures::UPDATE_EULA" ( 
	IN  it_update "hc.hph.eula.model::SV_EULA",
	IN  it_before "hc.hph.eula.model::SV_EULA_LANGUAGES",
	OUT ot_error "hc.hph.eula.model::TT_ODATA_ERROR" 
	) 
	
	LANGUAGE SQLSCRIPT SQL SECURITY DEFINER AS
	lv_count INTEGER;
	newEulaId nvarchar(32);
	newEulaIdName nvarchar(256);
	
BEGIN

    -- Eula exists ?
    select top 1 "ID", "IdName" into newEulaId, newEulaIdName from :it_update;
    call "hc.hph.eula.procedures::EXISTS_EULA" ( newEulaId, newEulaIdName, lv_count );
    if :lv_count = 0 then 
		ot_error = 
			select 400 as http_status_code, 'Bad Request' error_message, 'Error updating Eula: Eula does not exist.' detail from "hc::DUMMY";
		return;	
	end if;
    -- Empty name or id
	select count(*) into lv_count from :it_update where length(trim(' ' from "ID")) = 0 OR length(trim(' ' from "IdName")) = 0;
	if :lv_count > 0 then 
		ot_error = 
			select 400 as http_status_code, 'Bad Request' error_message, 'Error updating Eula: ID and Name cannot be empty.' detail from "hc::DUMMY";
		return;	
	end if;
	
	 -- Empty start or enddate
	select count(*) into lv_count from :it_update where length(trim(' ' from "ValidFromPointInTime")) = 0 OR length(trim(' ' from "ValidToPointInTime")) = 0;
	if :lv_count > 0 then 
		ot_error = 
			select 400 as http_status_code, 'Bad Request' error_message, 'Error updating Eula: Start date and End date need to be filled' detail from "hc::DUMMY";
		return;	
	end if;
	
	-- Wrong Validity Range 
	select count(*) into lv_count from :it_update where "ValidFromPointInTime" > "ValidToPointInTime";
	if :lv_count > 0 then 
		ot_error = 
			select 400 as http_status_code, 'Bad Request' error_message, 'Start date cannot be after enddate' detail from "hc::DUMMY";
		return;	
	end if;

    update "hc.hph.eula.model::Eula_Model.Eula" eula 
	set eula."IdName" = upd."IdName",
		eula."ValidFromPointInTime" = upd."ValidFromPointInTime",
		eula."ValidToPointInTime" = upd."ValidToPointInTime"
	FROM "hc.hph.eula.model::Eula_Model.Eula" eula, :it_update upd
	WHERE eula."ID" = upd."ID";
	
	update "hc.hph.eula.model::Eula_Model.EulaDescription" eula 
		set eula."Name" = upd."Name",
			eula."Label" = upd."Label",
			eula."Description" = upd."Description",
			eula."Text" = upd."Text"
		FROM "hc.hph.eula.model::Eula_Model.EulaDescription" eula, :it_before upd
		WHERE eula."ID" = upd."ID" AND 
			  eula."LanguageISOCode" = upd."DescriptionLanguageISOCode";
    
END;

DROP SCHEMA SMART_ACCESS CASCADE;
CREATE SCHEMA SMART_ACCESS;

CREATE COLUMN TABLE SMART_ACCESS.ACCESS_HIERARCHY ( NODE VARCHAR2(50), PARENT VARCHAR(50), ROLE VARCHAR(50) );
INSERT INTO SMART_ACCESS.ACCESS_HIERARCHY VALUES( 'ROOT_1', null, 'ROLE');
INSERT INTO SMART_ACCESS.ACCESS_HIERARCHY VALUES( 'CHILD_1.1','ROOT_1', 'ROLE');
INSERT INTO SMART_ACCESS.ACCESS_HIERARCHY VALUES( 'CHILD_1.2','ROOT_1', 'ROLE');
INSERT INTO SMART_ACCESS.ACCESS_HIERARCHY VALUES( 'CHILD_1.2.1','CHILD_1.2', 'ROLE');
INSERT INTO SMART_ACCESS.ACCESS_HIERARCHY VALUES( 'CHILD_1.2.2','CHILD_1.2', 'ROLE');
INSERT INTO SMART_ACCESS.ACCESS_HIERARCHY VALUES( 'ROOT_2', null, 'ROLE');
INSERT INTO SMART_ACCESS.ACCESS_HIERARCHY VALUES( 'CHILD_2.1','ROOT_2', 'ROLE');
INSERT INTO SMART_ACCESS.ACCESS_HIERARCHY VALUES( 'CHILD_2.2','ROOT_2', 'ROLE');
INSERT INTO SMART_ACCESS.ACCESS_HIERARCHY VALUES( 'CHILD_2.2.1','CHILD_2.2', 'ROLE');
INSERT INTO SMART_ACCESS.ACCESS_HIERARCHY VALUES( 'CHILD_2.2.2','CHILD_2.2', 'ROLE');

CREATE COLUMN TABLE SMART_ACCESS.USER_ACCESS_MAP ( USER VARCHAR2(50), NODE VARCHAR(50));
INSERT INTO SMART_ACCESS.USER_ACCESS_MAP VALUES('USER1','CHILD_2.2.2');
INSERT INTO SMART_ACCESS.USER_ACCESS_MAP VALUES('USER1','ROOT_1');
INSERT INTO SMART_ACCESS.USER_ACCESS_MAP VALUES('USER2','CHILD_2.1');

CREATE COLUMN TABLE SMART_ACCESS.ACCESS_ENTRY (OWNER_ID VARCHAR2(64),TARGET VARCHAR2(50),RESOURCE VARCHAR2(64),MEANING VARCHAR2(20),PERMIT INTEGER);
INSERT INTO SMART_ACCESS.ACCESS_ENTRY VALUES('smart-8888803','CHILD_2.1','smart-8888803','dependents',1);
INSERT INTO SMART_ACCESS.ACCESS_ENTRY VALUES('smart-8888802','ROOT_1','smart-8888802','instance',1);

WITH ENTRIES as (
	SELECT * FROM SMART_ACCESS.ACCESS_ENTRY ae JOIN SMART_ACCESS.USER_ACCESS_MAP uam ON ae.TARGET = uam.NODE WHERE USER = 'USER2' 
	-- hana 2.0 hierarchies
),
ALL_ENTRIES AS(SELECT e.RESOURCE as RESOURCE, e.MEANING as MEANING,ref.PARENT_ID as DEPENDENT_ID, ref.REFERENCE as RELATED_ID 
	FROM "SMART"."FHIR_REFERENCE_TABLE" ref 
	JOIN ENTRIES e on (e.RESOURCE IN (ref.PARENT_ID,ref.REFERENCE)))
select * FROM ALL_ENTRIES where (MEANING IN ('instance','dependents') and RESOURCE=DEPENDENT_ID) 
UNION 
select * FROM ALL_ENTRIES where (MEANING IN ('dependents') and RESOURCE=RELATED_ID) 





SELECT TYPE,ID FROM "SMART"."FHIR_RESOURCE_TABLE" LIMIT 100;

--hana 2.0 necessary for hierarchies


   



package com.legacy.health.fhir.content.model;
import java.util.List;
import java.util.Collections;
import java.util.ArrayList;
import com.legacy.health.fhir.meta.instance.Structure;
import com.legacy.health.fhir.meta.entity.*;
import com.fasterxml.jackson.databind.JsonNode;
import com.legacy.health.fhir.content.ContentRepository;

public class $root.id extends BaseContentElement{

#foreach( $el in $root.snapshot.element )
#if ($el.id.pathElements().size()==2)
#set($name=$el.id.pathElements()[1])
#set($firstUpperName=$types.capitalize($name))
#set($type=$types.toJava($el.type[0],$el))
#set($cardinality=$el.max)
#parse("templates/de2field.vm")
#end
#end

public String getStructureDefinitionId(){
  return "$root.id";
}

public void fromJson(JsonNode node){
	if(node.get("resourceType")==null ||!"$root.id".equals(node.get("resourceType").asText())){
		return;
	}
	JsonNode elementNode = null;	
#foreach( $el in $root.snapshot.element )
#if ($el.id.pathElements().size()==2)
#set($name=$el.id.pathElements()[1])
#set($firstUpperName=$types.capitalize($name))
#set($rawtype=$el.type[0])
#set($parent=$el)
#set($type=$types.toJava($el.type[0],$el))
#set($cardinality=$el.max)
#parse("templates/de2json.vm")
#end
#end
}


#foreach( $el in $root.snapshot.element )
#if ($el.type[0].code=="BackboneElement")
#set($bbid= $el.id)
#set($bbsize=$el.id.pathElements().size()) 
#set($bbsegment=$types.dec($bbsize)) 
public class $types.capitalize($el.id.pathElements()[$bbsegment]) {
	protected ContentRepository repo;
	void setContentRepository(ContentRepository repo){
		this.repo = repo;
	}
#foreach( $child in $root.snapshot.element )
#if($child.id.pathElements().size()==$bbsize+1 && $child.id.startsWith("$bbid"))
#set($name=$child.id.pathElements()[$bbsize])
#set($firstUpperName=$types.capitalize($name))
#set($rawtype=$child.type[0])
#if ($types.isBackbone($rawtype)==true)
#set($type=$firstUpperName)
#else
#set($type=$types.toJava($child.type[0],$child))
#end
#set($cardinality=$child.max)
#parse("templates/de2field.vm")
#end
#end


public void fromJson(JsonNode node){
	JsonNode elementNode = null;	
#foreach( $child in $root.snapshot.element )
#if($child.id.pathElements().size()==$bbsize+1 && $child.id.startsWith("$bbid"))
#set($name=$child.id.pathElements()[$bbsize])
#set($firstUpperName=$types.capitalize($name))
#set($rawtype=$child.type[0])
#set($parent=$child)
#set($type=$types.toJava($child.type[0],$child))
#set($cardinality=$child.max)
#parse("templates/de2json.vm")
#end
#end
}

}
#end
#end
}
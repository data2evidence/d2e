{
	"info": {
		"_postman_id": "ec0ec2fe-ffaa-4dd3-9b0b-90f72dac4571",
		"name": "Demo MedMij BgZ - Tokens [ Catalog persistency Bugs]",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Get all observation - lastn operation with single code",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d2f2d9db-b164-47ad-adbd-777e8db06f24",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.have.status(\"OK\");",
							"});",
							"",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.include(\"application/fhir+json\");",
							"});",
							"",
							"",
							"pm.test(\"Multiple checks on bundle \", function () {",
							"    var jsonData = pm.response.json()",
							"    pm.expect(jsonData.resourceType).to.be.a('string')",
							"    pm.expect(jsonData.resourceType).to.equal(\"Bundle\")",
							"    pm.expect(jsonData.total).to.equal(1)",
							"    pm.expect(jsonData.entry[0].resource.id).to.equal(\"999111\")",
							"    ",
							"});",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{protocol}}://{{host}}:{{port}}/fhir/hcim_demo/fhir/Observation/$lastn?patient.identifier=12332332&code=http://loinc.org|15074-8",
					"protocol": "{{protocol}}",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"fhir",
						"hcim_demo",
						"fhir",
						"Observation",
						"$lastn"
					],
					"query": [
						{
							"key": "patient.identifier",
							"value": "12332332"
						},
						{
							"key": "code",
							"value": "http://loinc.org|15074-8"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all observation - lastn operation",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3ee310fc-c7e2-4011-96b2-ac04fdb4c8a1",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.have.status(\"OK\");",
							"});",
							"",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.include(\"application/fhir+json\");",
							"});",
							"",
							"",
							"",
							"",
							"pm.test(\"Multiple checks on bundle \", function () {",
							"    var jsonData = pm.response.json()",
							"    pm.expect(jsonData.resourceType).to.be.a('string')",
							"    pm.expect(jsonData.resourceType).to.equal(\"Bundle\")",
							"    pm.expect(jsonData.total).to.equal(2)",
							"    pm.expect(jsonData.entry[0].resource.id).to.equal(\"999111\")",
							"    pm.expect(jsonData.entry[1].resource.id).to.equal(\"999112\")",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{protocol}}://{{host}}:{{port}}/fhir/hcim_demo/fhir/Observation/$lastn?patient.identifier=12332332",
					"protocol": "{{protocol}}",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"fhir",
						"hcim_demo",
						"fhir",
						"Observation",
						"$lastn"
					],
					"query": [
						{
							"key": "patient.identifier",
							"value": "12332332"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all observation - lastn operation with multiple code values",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4bf98b62-4173-42a9-b955-1160d751919c",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.have.status(\"OK\");",
							"});",
							"",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.include(\"application/fhir+json\");",
							"});",
							"",
							"",
							"pm.test(\"Multiple checks on bundle \", function () {",
							"    var jsonData = pm.response.json()",
							"    pm.expect(jsonData.resourceType).to.be.a('string')",
							"    pm.expect(jsonData.resourceType).to.equal(\"Bundle\")",
							"    pm.expect(jsonData.total).to.equal(2)",
							"    pm.expect(jsonData.entry[0].resource.id).to.equal(\"999111\")",
							"    pm.expect(jsonData.entry[1].resource.id).to.equal(\"999112\")",
							"});",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{protocol}}://{{host}}:{{port}}/fhir/hcim_demo/fhir/Observation/$lastn?patient.identifier=12332332&code=http://loinc.org|15074-8,http://loinc.org|15074-9",
					"protocol": "{{protocol}}",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"fhir",
						"hcim_demo",
						"fhir",
						"Observation",
						"$lastn"
					],
					"query": [
						{
							"key": "patient.identifier",
							"value": "12332332"
						},
						{
							"key": "code",
							"value": "http://loinc.org|15074-8,http://loinc.org|15074-9"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all observation - lastn operation with patient identifier & category",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4bf98b62-4173-42a9-b955-1160d751919c",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.have.status(\"OK\");",
							"});",
							"",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.include(\"application/fhir+json\");",
							"});",
							"",
							"",
							"pm.test(\"Multiple checks on bundle \", function () {",
							"    var jsonData = pm.response.json()",
							"    pm.expect(jsonData.resourceType).to.be.a('string')",
							"    pm.expect(jsonData.resourceType).to.equal(\"Bundle\")",
							"    pm.expect(jsonData.total).to.equal(2)",
							"    pm.expect(jsonData.entry[0].resource.id).to.equal(\"999111\")",
							"    pm.expect(jsonData.entry[1].resource.id).to.equal(\"999112\")",
							"});",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{protocol}}://{{host}}:{{port}}/fhir/hcim_demo/fhir/Observation/$lastn?patient.identifier=12332332&category=http://hl7.org/fhir/observation-category|vital-signs",
					"protocol": "{{protocol}}",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"fhir",
						"hcim_demo",
						"fhir",
						"Observation",
						"$lastn"
					],
					"query": [
						{
							"key": "patient.identifier",
							"value": "12332332"
						},
						{
							"key": "category",
							"value": "http://hl7.org/fhir/observation-category|vital-signs"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all observation : Single recurse include",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4a2f7f3b-46ae-4c5f-94a3-0351c154fa63",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.have.status(\"OK\");",
							"});",
							"",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.include(\"application/fhir+json\");",
							"});",
							"",
							"",
							"pm.test(\" Element 'entry' check \", function () {",
							"    pm.expect(pm.response.text()).match(/[(entry)]\\\"\\:\\[\\]/);",
							"});",
							"",
							"",
							"pm.test(\"Resource tye should be 'Bundle' \", function () {",
							"    var jsonData = pm.response.json()",
							"    pm.expect(jsonData.resourceType).to.be.a('string')",
							"    pm.expect(jsonData.resourceType).to.equal(\"Bundle\")",
							"});",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{protocol}}://{{host}}:{{port}}/fhir/hcim_demo/fhir/MedicationDispense?_include=MedicationDispense:authorizingPrescription&_include:recurse=MedicationRequest:requester",
					"protocol": "{{protocol}}",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"fhir",
						"hcim_demo",
						"fhir",
						"MedicationDispense"
					],
					"query": [
						{
							"key": "_include",
							"value": "MedicationDispense:authorizingPrescription"
						},
						{
							"key": "_include:recurse",
							"value": "MedicationRequest:requester"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all observation using Chained parameters",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4a2f7f3b-46ae-4c5f-94a3-0351c154fa63",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.have.status(\"OK\");",
							"});",
							"",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.include(\"application/fhir+json\");",
							"});",
							"",
							"",
							"pm.test(\" Element 'entry' check \", function () {",
							"    pm.expect(pm.response.text()).match(/[(entry)]\\\"\\:\\[\\]/);",
							"});",
							"",
							"",
							"pm.test(\"Resource tye should be 'Bundle' \", function () {",
							"    var jsonData = pm.response.json()",
							"    pm.expect(jsonData.resourceType).to.be.a('string')",
							"    pm.expect(jsonData.resourceType).to.equal(\"Bundle\")",
							"});",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{protocol}}://{{host}}:{{port}}/fhir/hcim_demo/fhir/Observation?subject.name=T. van Beek",
					"protocol": "{{protocol}}",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"fhir",
						"hcim_demo",
						"fhir",
						"Observation"
					],
					"query": [
						{
							"key": "subject.name",
							"value": "T. van Beek"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get any observation with code using :in",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4a2f7f3b-46ae-4c5f-94a3-0351c154fa63",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.have.status(\"OK\");",
							"});",
							"",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.include(\"application/fhir+json\");",
							"});",
							"",
							"",
							"pm.test(\" Element 'entry' check \", function () {",
							"    pm.expect(pm.response.text()).match(/[(entry)]\\\"\\:\\[\\]/);",
							"});",
							"",
							"",
							"pm.test(\"Resource tye should be 'Bundle' \", function () {",
							"    var jsonData = pm.response.json()",
							"    pm.expect(jsonData.resourceType).to.be.a('string')",
							"    pm.expect(jsonData.resourceType).to.equal(\"Bundle\")",
							"});",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{protocol}}://{{host}}:{{port}}/fhir/hcim_demo/fhir/Observation?code:in=http://hl7.org/fhir/v2/0078",
					"protocol": "{{protocol}}",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"fhir",
						"hcim_demo",
						"fhir",
						"Observation"
					],
					"query": [
						{
							"key": "code:in",
							"value": "http://hl7.org/fhir/v2/0078"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get any condition with code using :in ( encoded url )",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4a2f7f3b-46ae-4c5f-94a3-0351c154fa63",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.have.status(\"OK\");",
							"});",
							"",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.include(\"application/fhir+json\");",
							"});",
							"",
							"",
							"pm.test(\" Element 'entry' check \", function () {",
							"    pm.expect(pm.response.text()).match(/[(entry)]\\\"\\:\\[\\]/);",
							"});",
							"",
							"",
							"pm.test(\"Resource tye should be 'Bundle' \", function () {",
							"    var jsonData = pm.response.json()",
							"    pm.expect(jsonData.resourceType).to.be.a('string')",
							"    pm.expect(jsonData.resourceType).to.equal(\"Bundle\")",
							"});",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{protocol}}://{{host}}:{{port}}/fhir/hcim_demo/fhir/Condition?code:in=http%3A%2F%2Fhl7.org%2Ffhir%2Fv2%2F0078",
					"protocol": "{{protocol}}",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"fhir",
						"hcim_demo",
						"fhir",
						"Condition"
					],
					"query": [
						{
							"key": "code:in",
							"value": "http%3A%2F%2Fhl7.org%2Ffhir%2Fv2%2F0078"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get procedure request using status = active",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4a2f7f3b-46ae-4c5f-94a3-0351c154fa63",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.have.status(\"OK\");",
							"});",
							"",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.include(\"application/fhir+json\");",
							"});",
							"",
							"",
							"pm.test(\" Element 'entry' check \", function () {",
							"    pm.expect(pm.response.text()).match(/[(entry)]\\\"\\:\\[\\]/);",
							"});",
							"",
							"",
							"pm.test(\"Resource tye should be 'Bundle' \", function () {",
							"    var jsonData = pm.response.json()",
							"    pm.expect(jsonData.resourceType).to.be.a('string')",
							"    pm.expect(jsonData.resourceType).to.equal(\"Bundle\")",
							"});",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{protocol}}://{{host}}:{{port}}/fhir/hcim_demo/fhir/ProcedureRequest?patient.identifier=999911338&status=active",
					"protocol": "{{protocol}}",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"fhir",
						"hcim_demo",
						"fhir",
						"ProcedureRequest"
					],
					"query": [
						{
							"key": "patient.identifier",
							"value": "999911338"
						},
						{
							"key": "status",
							"value": "active"
						}
					]
				}
			},
			"response": []
		}
	]
}
# Default values for cdm.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

isD4LEnv: true

replicaCount: 1

alpReleaseName: "v23.1-kita-dake"

imagePullSecrets: 
  - name: alpcrregistrykeys
  - name: alp-regsecret
nameOverride: ""
fullnameOverride: ""

podSecurityContext:
    runAsUser: 3000
    runAsGroup: 3000
    fsGroup: 2000

securityContext:
    allowPrivilegeEscalation: false
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 3000

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

ingress:
  enabled: false

service:
  type: ClusterIP
  port: 80

env:
  NODE_ENV: production
  azureCR:
      repository: alpcr.azurecr.io
      imageCredentials: alpcrregistrykeys
      imageTag: develop
  d4lNexus:
      repository: alp-snapshots.alp-dev.org
      imageCredentials: alp-regsecret
      imageTag: develop
  image:
    repository: "{{- ternary .Values.env.d4lNexus.repository .Values.env.azureCR.repository .Values.isD4LEnv -}}"
    tag: "{{- ternary .Values.env.d4lNexus.imageTag .Values.env.azureCR.imageTag .Values.isD4LEnv -}}"
    imageCredentials: "{{- ternary .Values.env.d4lNexus.imageCredentials .Values.env.azureCR.imageCredentials .Values.isD4LEnv -}}"
    pullPolicy: Always

secrets:
  POSTGRES_CONNECTION_CONFIG:
  POSTGRES_SUPERUSER:
  POSTGRES_SUPERUSER_PASSWORD:
  POSTGRES_MANAGE_USERS:

  # Having "+" as prefix for certain keys means to create that object if it
  # doesnt exists in Postgres DB. Reason for this design is to extend this to have a
  # "-" in future, that will remove these objects when needed.
  POSTGRES_MANAGE_CONFIG:

  # Ex: for POSTGRES_MANAGE_CONFIG
  # POSTGRES_MANAGE_CONFIG: >
  #   {
  #     "postgres":{
  #         "databases":{
  #           "+db1":{
  #               "schemas":{
  #                 "+schema1":{
                      
  #                 }
  #               }
  #           }
  #         }
  #     }
  #   }

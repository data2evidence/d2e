--liquibase formatted sql
--changeset alp:V1.0.0.0.0__create_omop_tables
CREATE TABLE "CONCEPT" (
  "CONCEPT_ID"			INTEGER			NOT NULL,
  "CONCEPT_NAME"			VARCHAR(255)	NOT NULL,
  "DOMAIN_ID"				VARCHAR(20)		NOT NULL,
  "VOCABULARY_ID"			VARCHAR(20)		NOT NULL,
  "CONCEPT_CLASS_ID"		VARCHAR(20)		NOT NULL,
  "STANDARD_CONCEPT"		VARCHAR(1)		NULL,
  "CONCEPT_CODE"			VARCHAR(50)		NOT NULL,
  "VALID_START_DATE"		DATE			NOT NULL,
  "VALID_END_DATE"		DATE			NOT NULL,
  "INVALID_REASON"		VARCHAR(1)		NULL
);

CREATE TABLE "RADIOLOGY_IMAGE" (
  "IMAGE_ID" VARCHAR(255),
  "RADIOLOGY_OCCURRENCE_ID" VARCHAR(255),
  "PERSON_ID" BIGINT,
  "IMAGE_ORIENTATION_CONCEPT_ID" INTEGER,
  "IMAGE_TYPE" VARCHAR(255),
  "RADIOLOGY_PHASECONCEPT_ID" INTEGER,
  "IMAGE_RESOLUTION_ROWS" INTEGER,
  "IMAGE_RESOLUTION_COLUMNS" INTEGER,
  "IMAGE_SLICE_THICKNESS" VARCHAR(255),
  "DICOM_PATH" VARCHAR(255),
  "IMAGE_NO" INTEGER,
  "PHASE_TOTAL_NO" INTEGER
);

CREATE TABLE "RADIOLOGY_OCCURRENCE" (
    "RADIOLOGY_OCCURRENCE_ID" VARCHAR(255),
    "STUDY_DATETIME" DATE,
    "MANUFACTURER" VARCHAR(255),
    "MODALITY" VARCHAR(255),
    "RADIOLOGY_PROTOCOL_CONCEPT_ID" INTEGER,
    "IMAGE_TOTALCOUNT" INTEGER,
    "RADIOLOGY_DIRPATH" VARCHAR(255),
    "ANATOMIC_REGION" VARCHAR(255),
    "PERSON_ID" BIGINT,
    "VISIT_OCCURRENCE_ID" BIGINT
);

CREATE TABLE "VOCABULARY" (
  "VOCABULARY_ID"			VARCHAR(20)		NOT NULL,
  "VOCABULARY_NAME"		VARCHAR(255)	NOT NULL,
  "VOCABULARY_REFERENCE"	VARCHAR(255)	NULL,
  "VOCABULARY_VERSION"	VARCHAR(255)	NULL,
  "VOCABULARY_CONCEPT_ID"	INTEGER			NOT NULL
);

CREATE TABLE "DOMAIN" (
  "DOMAIN_ID"			VARCHAR(20)		NOT NULL,
  "DOMAIN_NAME"		VARCHAR(255)	NOT NULL,
  "DOMAIN_CONCEPT_ID"	INTEGER			NOT NULL
);

CREATE TABLE "CONCEPT_CLASS" (
  "
  CONCEPT_CLASS_ID"			VARCHAR(20)		NOT NULL,
  "CONCEPT_CLASS_NAME"		VARCHAR(255)	NOT NULL,
  "CONCEPT_CLASS_CONCEPT_ID"	INTEGER			NOT NULL
);

CREATE TABLE "CONCEPT_RELATIONSHIP" (
  "CONCEPT_ID_1"			INTEGER			NOT NULL,
  "CONCEPT_ID_2"			INTEGER			NOT NULL,
  "RELATIONSHIP_ID"		VARCHAR(20)		NOT NULL,
  "VALID_START_DATE"		DATE			NOT NULL,
  "VALID_END_DATE"		DATE			NOT NULL,
  "INVALID_REASON"		VARCHAR(1)		NULL
);

CREATE TABLE "RELATIONSHIP" (
  "RELATIONSHIP_ID"			VARCHAR(20)		NOT NULL,
  "RELATIONSHIP_NAME"			VARCHAR(255)	NOT NULL,
  "IS_HIERARCHICAL"			VARCHAR(1)		NOT NULL,
  "DEFINES_ANCESTRY"			VARCHAR(1)		NOT NULL,
  "REVERSE_RELATIONSHIP_ID"	VARCHAR(20)		NOT NULL,
  "RELATIONSHIP_CONCEPT_ID"	INTEGER			NOT NULL
);

CREATE TABLE "CONCEPT_SYNONYM" (
  "CONCEPT_ID"			INTEGER			NOT NULL,
  "CONCEPT_SYNONYM_NAME"	VARCHAR(1000)	NOT NULL,
  "LANGUAGE_CONCEPT_ID"	INTEGER			NOT NULL
);

CREATE TABLE "CONCEPT_ANCESTOR" (
  "ANCESTOR_CONCEPT_ID"		INTEGER		NOT NULL,
  "DESCENDANT_CONCEPT_ID"		INTEGER		NOT NULL,
  "MIN_LEVELS_OF_SEPARATION"	INTEGER		NOT NULL,
  "MAX_LEVELS_OF_SEPARATION"	INTEGER		NOT NULL
);

CREATE TABLE "SOURCE_TO_CONCEPT_MAP" (
  "SOURCE_CODE"				VARCHAR(50)		NOT NULL,
  "SOURCE_CONCEPT_ID"			INTEGER			NOT NULL,
  "SOURCE_VOCABULARY_ID"		VARCHAR(20)		NOT NULL,
  "SOURCE_CODE_DESCRIPTION"	VARCHAR(255)	NULL,
  "TARGET_CONCEPT_ID"			INTEGER			NOT NULL,
  "TARGET_VOCABULARY_ID"		VARCHAR(20)		NOT NULL,
  "VALID_START_DATE"			DATE			NOT NULL,
  "VALID_END_DATE"			DATE			NOT NULL,
  "INVALID_REASON"			VARCHAR(1)		NULL
);

CREATE TABLE "DRUG_STRENGTH" (
  "DRUG_CONCEPT_ID"				INTEGER		NOT NULL,
  "INGREDIENT_CONCEPT_ID"			INTEGER		NOT NULL,
  "AMOUNT_VALUE"					DECIMAL(27,12)		NULL,
  "AMOUNT_UNIT_CONCEPT_ID"		INTEGER		NULL,
  "NUMERATOR_VALUE"				DECIMAL(27,12)		NULL,
  "NUMERATOR_UNIT_CONCEPT_ID"		INTEGER		NULL,
  "DENOMINATOR_VALUE"				DECIMAL(27,12)		NULL,
  "DENOMINATOR_UNIT_CONCEPT_ID"	INTEGER		NULL,
  "BOX_SIZE"						INTEGER		NULL,
  "VALID_START_DATE"				DATE		NOT NULL,
  "VALID_END_DATE"				DATE		NOT NULL,
  "INVALID_REASON"				VARCHAR(1)	NULL
);

CREATE TABLE "COHORT_DEFINITION" (
  "COHORT_DEFINITION_ID"				INTEGER			NOT NULL,
  "COHORT_DEFINITION_NAME"			VARCHAR(255)	NOT NULL,
  "COHORT_DEFINITION_DESCRIPTION"		TEXT	NULL,
  "DEFINITION_TYPE_CONCEPT_ID"		INTEGER			NOT NULL,
  "COHORT_DEFINITION_SYNTAX"			TEXT	NULL,
  "SUBJECT_CONCEPT_ID"				INTEGER			NOT NULL,
  "COHORT_INITIATION_DATE"			DATE			NULL
);

CREATE TABLE "ATTRIBUTE_DEFINITION" (
  "ATTRIBUTE_DEFINITION_ID"		INTEGER			NOT NULL,
  "ATTRIBUTE_NAME"				VARCHAR(255)	NOT NULL,
  "ATTRIBUTE_DESCRIPTION"			TEXT	NULL,
  "ATTRIBUTE_TYPE_CONCEPT_ID"		INTEGER			NOT NULL,
  "ATTRIBUTE_SYNTAX"				TEXT	NULL
);

/**************************

Standardized meta-data

***************************/

CREATE TABLE "CDM_SOURCE" (  
  "CDM_SOURCE_NAME"					VARCHAR(255)	NOT NULL,
	 "CDM_SOURCE_ABBREVIATION"			VARCHAR(25)		NULL,
	 "CDM_HOLDER"							VARCHAR(255)	NULL,
	 "SOURCE_DESCRIPTION"					TEXT	NULL,
	 "SOURCE_DOCUMENTATION_REFERENCE"		VARCHAR(255)	NULL,
	 "CDM_ETL_REFERENCE"					VARCHAR(255)	NULL,
	 "SOURCE_RELEASE_DATE"				DATE			NULL,
	 "CDM_RELEASE_DATE"					DATE			NULL,
	 "CDM_VERSION"						VARCHAR(10)		NULL,
	 "VOCABULARY_VERSION"					VARCHAR(20)		NULL
    );


/************************

Standardized clinical data

************************/

CREATE TABLE "PERSON" (
  "PERSON_ID"						BIGINT		NOT NULL , 
     "GENDER_CONCEPT_ID"				INTEGER		NOT NULL , 
     "YEAR_OF_BIRTH"					INTEGER		NOT NULL , 
     "MONTH_OF_BIRTH"					INTEGER		NULL, 
     "DAY_OF_BIRTH"					INTEGER		NULL, 
	   "BIRTH_DATETIME"					TIMESTAMP 	NULL,
     "RACE_CONCEPT_ID"				INTEGER		NOT NULL, 
     "ETHNICITY_CONCEPT_ID"			INTEGER		NOT NULL, 
     "LOCATION_ID"					BIGINT		NULL, 
     "PROVIDER_ID"					BIGINT		NULL, 
     "CARE_SITE_ID"					BIGINT		NULL, 
     "PERSON_SOURCE_VALUE"			VARCHAR(50) NULL, 
     "GENDER_SOURCE_VALUE"			VARCHAR(300) NULL,
	 "GENDER_SOURCE_CONCEPT_ID"		INTEGER		NULL, 
     "RACE_SOURCE_VALUE"				VARCHAR(300) NULL, 
	 "RACE_SOURCE_CONCEPT_ID"			INTEGER		NULL, 
     "ETHNICITY_SOURCE_VALUE"			VARCHAR(300) NULL,
	 "ETHNICITY_SOURCE_CONCEPT_ID"	INTEGER		NULL
    );

CREATE TABLE "OBSERVATION_PERIOD" 
    ( 
     "OBSERVATION_PERIOD_ID"				BIGINT		NOT NULL , 
     "PERSON_ID"							BIGINT		NOT NULL , 
     "OBSERVATION_PERIOD_START_DATE"		DATE		NOT NULL , 
     "OBSERVATION_PERIOD_END_DATE"		DATE		NOT NULL ,
	 "PERIOD_TYPE_CONCEPT_ID"				INTEGER		NOT NULL
    );

CREATE TABLE "SPECIMEN"
    ( 
     "SPECIMEN_ID"						BIGINT			NOT NULL ,
	 "PERSON_ID"							BIGINT			NOT NULL ,
	 "SPECIMEN_CONCEPT_ID"				INTEGER			NOT NULL ,
	 "SPECIMEN_TYPE_CONCEPT_ID"			INTEGER			NOT NULL ,
	 "SPECIMEN_DATE"						DATE			NOT NULL ,
	 "SPECIMEN_DATETIME"						TIMESTAMP		NULL ,
	 "QUANTITY"							DECIMAL(18,5)			NULL ,
	 "UNIT_CONCEPT_ID"					INTEGER			NULL ,
	 "ANATOMIC_SITE_CONCEPT_ID"			INTEGER			NULL ,
	 "DISEASE_STATUS_CONCEPT_ID"			INTEGER			NULL ,
	 "SPECIMEN_SOURCE_ID"					VARCHAR(50)		NULL ,
	 "SPECIMEN_SOURCE_VALUE"				VARCHAR(300)		NULL ,
	 "UNIT_SOURCE_VALUE"					VARCHAR(300)		NULL ,
	 "ANATOMIC_SITE_SOURCE_VALUE"			VARCHAR(300)		NULL ,
	 "DISEASE_STATUS_SOURCE_VALUE"		VARCHAR(300)		NULL
	);

CREATE TABLE "DEATH" 
    ( 
     "PERSON_ID"							BIGINT			NOT NULL , 
     "DEATH_DATE"							DATE			NOT NULL , 
     "DEATH_DATETIME"							TIMESTAMP			NULL ,
     "DEATH_TYPE_CONCEPT_ID"				INTEGER			NOT NULL ,
     "CAUSE_CONCEPT_ID"					INTEGER			NULL , 
     "CAUSE_SOURCE_VALUE"					VARCHAR(100)		NULL,
	 "CAUSE_SOURCE_CONCEPT_ID"			BIGINT			NULL
    ) ;


CREATE TABLE "VISIT_OCCURRENCE" 
    ( 
     "VISIT_OCCURRENCE_ID"			BIGINT			NOT NULL , 
     "PERSON_ID"						BIGINT			NOT NULL , 
     "VISIT_CONCEPT_ID"				INTEGER			NOT NULL , 
	 "VISIT_START_DATE"				DATE			NOT NULL , 
	 "VISIT_START_DATETIME"			TIMESTAMP		NULL ,
  "VISIT_END_DATE"					DATE			NOT NULL ,
	 "VISIT_END_DATETIME"				TIMESTAMP		NULL ,
	 "VISIT_TYPE_CONCEPT_ID"			INTEGER			NOT NULL ,
	 "PROVIDER_ID"					BIGINT			NULL,
  " CARE_SITE_ID"					BIGINT			NULL, 
   "VISIT_SOURCE_VALUE"				VARCHAR(300)		NULL,
	 "VISIT_SOURCE_CONCEPT_ID"		INTEGER			NULL ,
	 "ADMITTING_SOURCE_CONCEPT_ID"	INTEGER			NULL ,
	 "ADMITTING_SOURCE_VALUE"			VARCHAR(300)		NULL ,
	 "DISCHARGE_TO_CONCEPT_ID"		INTEGER		NULL ,
	 "DISCHARGE_TO_SOURCE_VALUE"		VARCHAR(300)		NULL ,
	 "PRECEDING_VISIT_OCCURRENCE_ID"	BIGINT			NULL
    );

CREATE TABLE "PROCEDURE_OCCURRENCE" 
    ( 
     "PROCEDURE_OCCURRENCE_ID"		BIGINT			NOT NULL , 
     "PERSON_ID"						BIGINT			NOT NULL , 
     "PROCEDURE_CONCEPT_ID"			INTEGER			NOT NULL , 
     "PROCEDURE_DATE"					DATE			NOT NULL , 
     "PROCEDURE_DATETIME"					TIMESTAMP			NOT NULL ,
     "PROCEDURE_TYPE_CONCEPT_ID"		INTEGER			NOT NULL ,
	 "MODIFIER_CONCEPT_ID"			INTEGER			NULL ,
	 "QUANTITY"						INTEGER			NULL , 
     "PROVIDER_ID"					BIGINT			NULL , 
     "VISIT_DETAIL_ID"    BIGINT     NULL,
     "VISIT_OCCURRENCE_ID"			BIGINT			NULL , 
     "PROCEDURE_SOURCE_VALUE"			VARCHAR(300)		NULL ,
	 "PROCEDURE_SOURCE_CONCEPT_ID"	INTEGER			NULL ,
	 "MODIFIER_SOURCE_VALUE"			VARCHAR(50)		NULL
    );

CREATE TABLE "DRUG_EXPOSURE" 
    ( 
     "DRUG_EXPOSURE_ID"				BIGINT			NOT NULL , 
     "PERSON_ID"						BIGINT			NOT NULL , 
     "DRUG_CONCEPT_ID"				INTEGER			NOT NULL , 
     "DRUG_EXPOSURE_START_DATE"		DATE			NOT NULL , 
     "DRUG_EXPOSURE_START_DATETIME"	TIMESTAMP		NOT NULL ,
     "DRUG_EXPOSURE_END_DATE"			DATE			NOT NULL ,
     "DRUG_EXPOSURE_END_DATETIME"		TIMESTAMP		NULL ,
     "VERBATIM_END_DATE"				DATE			NULL ,
	 "DRUG_TYPE_CONCEPT_ID"			INTEGER			NOT NULL ,
     "STOP_REASON"					VARCHAR(300)		NULL , 
     "REFILLS"						INTEGER			NULL , 
     "QUANTITY"						DECIMAL(18,5)			NULL , 
     "DAYS_SUPPLY"					INTEGER			NULL , 
     "SIG"							TEXT	NULL , 
	 "ROUTE_CONCEPT_ID"				INTEGER			NULL ,
	 "LOT_NUMBER"						VARCHAR(50)		NULL ,
     "PROVIDER_ID"					BIGINT			NULL , 
     "VISIT_DETAIL_ID"      BIGINT     NULL ,
     "VISIT_OCCURRENCE_ID"			BIGINT			NULL , 
     "DRUG_SOURCE_VALUE"				VARCHAR(300)		NULL ,
	 "DRUG_SOURCE_CONCEPT_ID"			INTEGER			NULL ,
	 "ROUTE_SOURCE_VALUE"				VARCHAR(300)		NULL ,
	 "DOSE_UNIT_SOURCE_VALUE"			VARCHAR(300)		NULL
    );

CREATE TABLE "DEVICE_EXPOSURE" 
    ( 
     "DEVICE_EXPOSURE_ID"				BIGINT			NOT NULL , 
     "PERSON_ID"						BIGINT			NOT NULL , 
     "DEVICE_CONCEPT_ID"				INTEGER			NOT NULL , 
     "DEVICE_EXPOSURE_START_DATE"		DATE			NOT NULL , 
     "DEVICE_EXPOSURE_START_DATETIME"		TIMESTAMP			NOT NULL ,
     "DEVICE_EXPOSURE_END_DATE"		DATE			NULL ,
     "DEVICE_EXPOSURE_END_DATETIME"		TIMESTAMP			NULL ,
     "DEVICE_TYPE_CONCEPT_ID"			INTEGER			NOT NULL ,
	 "UNIQUE_DEVICE_ID"				VARCHAR(50)		NULL ,
	 "QUANTITY"						INTEGER			NULL ,
     "PROVIDER_ID"					BIGINT			NULL , 
     "VISIT_DETAIL_ID"     BIGINT      NULL ,
     "VISIT_OCCURRENCE_ID"			BIGINT			NULL , 
     "DEVICE_SOURCE_VALUE"			VARCHAR(300)	NULL ,
	 "DEVICE_SOURCE_CONCEPT_ID"		INTEGER			NULL
    );

CREATE TABLE "CONDITION_OCCURRENCE" 
    ( 
     "CONDITION_OCCURRENCE_ID"		BIGINT			NOT NULL , 
     "PERSON_ID"						BIGINT			NOT NULL , 
     "CONDITION_CONCEPT_ID"			INTEGER			NOT NULL , 
     "CONDITION_START_DATE"			DATE			NOT NULL , 
     "CONDITION_START_DATETIME"			TIMESTAMP			NOT NULL ,
     "CONDITION_END_DATE"				DATE			NULL ,
     "CONDITION_END_DATETIME"				TIMESTAMP			NULL ,
     "CONDITION_TYPE_CONCEPT_ID"		INTEGER			NOT NULL ,
     "STOP_REASON"					VARCHAR(300)		NULL , 
     "PROVIDER_ID"					BIGINT			NULL , 
     "VISIT_DETAIL_ID"      BIGINT     NULL ,
     "VISIT_OCCURRENCE_ID"			BIGINT			NULL , 
     "CONDITION_SOURCE_VALUE"			VARCHAR(200)		NULL ,
	 "CONDITION_SOURCE_CONCEPT_ID"	INTEGER			NULL ,
	 "CONDITION_STATUS_SOURCE_VALUE"	VARCHAR(50)		NULL ,
     "CONDITION_STATUS_CONCEPT_ID"	INTEGER			NULL 
    );

CREATE TABLE "MEASUREMENT" 
    ( 
     "MEASUREMENT_ID"					BIGINT			NOT NULL , 
     "PERSON_ID"						BIGINT			NOT NULL , 
     "MEASUREMENT_CONCEPT_ID"			INTEGER			NOT NULL , 
     "MEASUREMENT_DATE"				DATE			NOT NULL , 
     "MEASUREMENT_DATETIME"				TIMESTAMP		NULL ,
     "MEASUREMENT_TIME"     VARCHAR(10)     NULL,
     "MEASUREMENT_TYPE_CONCEPT_ID"	INTEGER			NOT NULL ,
     "OPERATOR_CONCEPT_ID"			INTEGER			NULL , 
     "VALUE_AS_NUMBER"				DECIMAL(18,5)			NULL , 
     "VALUE_AS_CONCEPT_ID"			INTEGER			NULL , 
     "UNIT_CONCEPT_ID"				INTEGER			NULL , 
     "RANGE_LOW"						DECIMAL(18,5)			NULL , 
     "RANGE_HIGH"						DECIMAL(18,5)			NULL , 
     "PROVIDER_ID"					BIGINT			NULL , 
     "VISIT_DETAIL_ID"      BIGINT      NULL,
     "VISIT_OCCURRENCE_ID"			BIGINT			NULL ,  
     "MEASUREMENT_SOURCE_VALUE"		VARCHAR(300)		NULL , 
     "MEASUREMENT_SOURCE_CONCEPT_ID"	INTEGER			NULL ,
     "UNIT_SOURCE_VALUE"				VARCHAR(300) 	NULL ,
     "VALUE_SOURCE_VALUE"				VARCHAR(300)		NULL
    );

CREATE TABLE "NOTE" 
    ( 
     "NOTE_ID"						BIGINT			NOT NULL , 
     "PERSON_ID"						BIGINT			NOT NULL , 
     "NOTE_DATE"						DATE			NOT NULL ,
	 "NOTE_DATETIME"						TIMESTAMP		NULL ,
	 "NOTE_TYPE_CONCEPT_ID"			INTEGER			NOT NULL ,
	 "NOTE_CLASS_CONCEPT_ID"			INTEGER			NOT NULL ,
	 "NOTE_TITLE"						VARCHAR(250)	NULL ,
	 "NOTE_TEXT"						TEXT			NOT NULL ,
	 "ENCODING_CONCEPT_ID"			INTEGER			NOT NULL ,
	 "LANGUAGE_CONCEPT_ID"			INTEGER			NOT NULL ,
     "PROVIDER_ID"					BIGINT			NULL ,
     "VISIT_DETAIL_ID"       BIGINT       NULL ,
	 "VISIT_OCCURRENCE_ID"			BIGINT			NULL ,
	 "NOTE_SOURCE_VALUE"				VARCHAR(50)		NULL
    ) ;

/*This TABLE is new in CDM v5"."2*/
CREATE TABLE "NOTE_NLP"
(
  "NOTE_NLP_ID"					BIGINT			NOT NULL ,
  "NOTE_ID"						BIGINT			NOT NULL ,
  "SECTION_CONCEPT_ID"			INTEGER			NULL ,
  "SNIPPET"						VARCHAR(250)	NULL ,
  "OFFSET"						VARCHAR(250)	NULL ,
  "LEXICAL_VARIANT"				VARCHAR(250)	NOT NULL ,
  "NOTE_NLP_CONCEPT_ID"			INTEGER			NULL ,
  "NOTE_NLP_SOURCE_CONCEPT_ID"	INTEGER			NULL ,
  "NLP_SYSTEM"					VARCHAR(250)	NULL ,
  "NLP_DATE"						DATE			NOT NULL ,
  "NLP_DATETIME"					TIMESTAMP		NULL ,
  "TERM_EXISTS"					VARCHAR(1)		NULL ,
  "TERM_TEMPORAL"					VARCHAR(50)		NULL ,
  "TERM_MODIFIERS"				VARCHAR(2000)	NULL
);

CREATE TABLE "OBSERVATION" 
    ( 
     "OBSERVATION_ID"					BIGINT			NOT NULL , 
     "PERSON_ID"						BIGINT			NOT NULL , 
     "OBSERVATION_CONCEPT_ID"			INTEGER			NOT NULL , 
     "OBSERVATION_DATE"				DATE			NOT NULL , 
     "OBSERVATION_DATETIME"				TIMESTAMP		NULL ,
     "OBSERVATION_EVENT_ID"     BIGINT    NULL ,
     "OBSERVATION_TYPE_CONCEPT_ID"	INTEGER			NOT NULL , 
     "VALUE_AS_DATETIME"     TIMESTAMP    NULL,
	 "VALUE_AS_NUMBER"				DECIMAL(18,5)			NULL , 
     "VALUE_AS_STRING"				VARCHAR(500)		NULL , 
     "VALUE_AS_CONCEPT_ID"			INTEGER			NULL , 
	 "QUALIFIER_CONCEPT_ID"			INTEGER			NULL ,
     "UNIT_CONCEPT_ID"				INTEGER			NULL , 
     "PROVIDER_ID"					BIGINT			NULL , 
     "VISIT_DETAIL_ID"     BIGINT     NULL ,
     "VISIT_OCCURRENCE_ID"			BIGINT			NULL , 
     "OBSERVATION_SOURCE_VALUE"		VARCHAR(300)		NULL ,
	 "OBSERVATION_SOURCE_CONCEPT_ID"	INTEGER			NULL , 
     "UNIT_SOURCE_VALUE"				VARCHAR(400)		NULL ,
	 "QUALIFIER_SOURCE_VALUE"			VARCHAR(400)		NULL ,
   "OBS_EVENT_FIELD_CONCEPT_ID"       INTEGER NULL
    );

CREATE TABLE "FACT_RELATIONSHIP" 
    ( 
     "DOMAIN_CONCEPT_ID_1"			INTEGER			NOT NULL , 
	 "FACT_ID_1"						BIGINT			NOT NULL ,
	 "DOMAIN_CONCEPT_ID_2"			INTEGER			NOT NULL ,
	 "FACT_ID_2"						BIGINT			NOT NULL ,
	 "RELATIONSHIP_CONCEPT_ID"		INTEGER			NOT NULL
	);

/************************

Standardized health system data

************************/


CREATE TABLE "LOCATION" 
    ( 
     "LOCATION_ID"					BIGINT			NOT NULL , 
     "ADDRESS_1"						VARCHAR(150)		NULL , 
     "ADDRESS_2"						VARCHAR(150)		NULL , 
     "CITY"							VARCHAR(300)		NULL , 
     "STATE"							VARCHAR(2)		NULL , 
     "ZIP"							VARCHAR(9)		NULL , 
     "COUNTY"							VARCHAR(300)		NULL , 
     "LOCATION_SOURCE_VALUE"			VARCHAR(50)		NULL
    );

CREATE TABLE "CARE_SITE" 
    ( 
     "CARE_SITE_ID"						BIGINT			NOT NULL , 
	 "CARE_SITE_NAME"						VARCHAR(300)	NULL ,
     "PLACE_OF_SERVICE_CONCEPT_ID"		INTEGER			NULL ,
     "LOCATION_ID"						BIGINT			NULL , 
     "CARE_SITE_SOURCE_VALUE"				VARCHAR(300)		NULL , 
     "PLACE_OF_SERVICE_SOURCE_VALUE"		VARCHAR(300)		NULL
    );

CREATE TABLE "PROVIDER" 
    ( 
     "PROVIDER_ID"					BIGINT			NOT NULL ,
	 "PROVIDER_NAME"					VARCHAR(255)	NULL , 
     "NPI"							VARCHAR(50)		NULL , 
     "DEA"							VARCHAR(50)		NULL , 
     "SPECIALTY_CONCEPT_ID"			INTEGER			NULL , 
     "CARE_SITE_ID"					BIGINT			NULL , 
	 "YEAR_OF_BIRTH"					INTEGER			NULL ,
	 "GENDER_CONCEPT_ID"				INTEGER			NULL ,
     "PROVIDER_SOURCE_VALUE"			VARCHAR(50)		NULL , 
     "SPECIALTY_SOURCE_VALUE"			VARCHAR(300)		NULL ,
	 "SPECIALTY_SOURCE_CONCEPT_ID"	INTEGER			NULL , 
	 "GENDER_SOURCE_VALUE"			VARCHAR(300)		NULL ,
	 "GENDER_SOURCE_CONCEPT_ID"		INTEGER			NULL
    );

/************************

Standardized health economics

************************/

CREATE TABLE "PAYER_PLAN_PERIOD" 
    ( 
     "PAYER_PLAN_PERIOD_ID"			BIGINT			NOT NULL , 
     "PERSON_ID"						BIGINT			NOT NULL , 
     "PAYER_PLAN_PERIOD_START_DATE"	DATE			NOT NULL , 
     "PAYER_PLAN_PERIOD_END_DATE"		DATE			NOT NULL , 
     "PAYER_SOURCE_VALUE"				VARCHAR(50)	NULL , 
     "PLAN_SOURCE_VALUE"				VARCHAR(50)	NULL , 
     "FAMILY_SOURCE_VALUE"			VARCHAR(50)	NULL ,
     "PAYER_CONCEPT_ID"              INTEGER       NULL ,
     "PAYER_SOURCE_CONCEPT_ID"       INTEGER       NULL ,
     "PLAN_CONCEPT_ID"               INTEGER       NULL ,
     "PLAN_SOURCE_CONCEPT_ID"        INTEGER       NULL ,
     "SPONSOR_CONCEPT_ID"            INTEGER       NULL ,
     "SPONSOR_SOURCE_CONCEPT_ID"     INTEGER       NULL ,
     "STOP_REASON_CONCEPT_ID"        INTEGER       NULL ,
     "STOP_REASON_SOURCE_VALUE"      VARCHAR(50)      NULL ,
     "STOP_REASON_SOURCE_CONCEPT_ID" INTEGER       NULL
    );

CREATE TABLE "COST" 
    (
     "COST_ID"					BIGINT	    NOT NULL , 
     "COST_EVENT_ID"       BIGINT     NOT NULL ,
     "COST_DOMAIN_ID"       VARCHAR(50)    NOT NULL ,
     "COST_TYPE_CONCEPT_ID"       INTEGER     NOT NULL ,
     "CURRENCY_CONCEPT_ID"			INTEGER			NULL ,
     "TOTAL_CHARGE"						DECIMAL(18,2)			NULL , 
     "TOTAL_COST"						DECIMAL(18,2)			NULL , 
     "TOTAL_PAID"						DECIMAL(18,2)			NULL , 
     "PAID_BY_PAYER"					DECIMAL(18,2)			NULL , 
     "PAID_BY_PATIENT"						DECIMAL(18,2)			NULL , 
     "PAID_PATIENT_COPAY"						DECIMAL(18,2)			NULL , 
     "PAID_PATIENT_COINSURANCE"				DECIMAL(18,2)			NULL , 
     "PAID_PATIENT_DEDUCTIBLE"			DECIMAL(18,2)			NULL , 
     "PAID_BY_PRIMARY"						DECIMAL(18,2)			NULL , 
     "PAID_INGREDIENT_COST"				DECIMAL(18,2)			NULL , 
     "PAID_DISPENSING_FEE"					DECIMAL(18,2)			NULL , 
     "PAYER_PLAN_PERIOD_ID"			INTEGER			NULL ,
     "AMOUNT_ALLOWED"		DECIMAL(18,2)			NULL , 
     "REVENUE_CODE_CONCEPT_ID"		INTEGER			NULL , 
     "REVEUE_CODE_SOURCE_VALUE"    VARCHAR(50)   NULL ,
	 "DRG_CONCEPT_ID"			INTEGER		NULL,
     "DRG_SOURCE_VALUE"		VARCHAR(3)		NULL
    );

/************************

Standardized derived elements

************************/

CREATE TABLE "COHORT" 
    ( 
	 "COHORT_DEFINITION_ID"			INTEGER			NOT NULL , 
     "SUBJECT_ID"						INTEGER			NOT NULL ,
	 "COHORT_START_DATE"				DATE			NOT NULL , 
     "COHORT_END_DATE"				DATE			NOT NULL
    );


CREATE TABLE "COHORT_ATTRIBUTE" 
    ( 
	 "COHORT_DEFINITION_ID"			INTEGER			NOT NULL , 
     "COHORT_START_DATE"				DATE			NOT NULL , 
     "COHORT_END_DATE"				DATE			NOT NULL , 
     "SUBJECT_ID"						INTEGER			NOT NULL , 
     "ATTRIBUTE_DEFINITION_ID"		INTEGER			NOT NULL ,
	 "VALUE_AS_NUMBER"				NUMERIC			NULL ,
	 "VALUE_AS_CONCEPT_ID"			INTEGER			NULL
    );

CREATE TABLE "DRUG_ERA" 
    ( 
     "DRUG_ERA_ID"					BIGINT			NOT NULL , 
     "PERSON_ID"						BIGINT			NOT NULL , 
     "DRUG_CONCEPT_ID"				INTEGER			NOT NULL , 
     "DRUG_ERA_START_DATE"			DATE			NOT NULL , 
     "DRUG_ERA_END_DATE"				DATE			NOT NULL , 
     "DRUG_EXPOSURE_COUNT"			INTEGER			NULL ,
	 "GAP_DAYS"						INTEGER			NULL
    );

CREATE TABLE "DOSE_ERA" 
    (
     "DOSE_ERA_ID"					BIGINT			NOT NULL , 
     "PERSON_ID"						BIGINT			NOT NULL , 
     "DRUG_CONCEPT_ID"				INTEGER			NOT NULL , 
	 "UNIT_CONCEPT_ID"				INTEGER			NOT NULL ,
	 "DOSE_VALUE"						DECIMAL(18,5)			NOT NULL ,
     "DOSE_ERA_START_DATE"			DATE			NOT NULL , 
     "DOSE_ERA_END_DATE"				DATE			NOT NULL 
    );

CREATE TABLE "CONDITION_ERA" 
    ( 
     "CONDITION_ERA_ID"				BIGINT			NOT NULL , 
     "PERSON_ID"						BIGINT			NOT NULL , 
     "CONDITION_CONCEPT_ID"			INTEGER			NOT NULL , 
     "CONDITION_ERA_START_DATE"		DATE			NOT NULL , 
     "CONDITION_ERA_END_DATE"			DATE			NOT NULL , 
     "CONDITION_OCCURRENCE_COUNT"		INTEGER			NULL
    );

CREATE TABLE "VISIT_DETAIL"
(
  "VISIT_DETAIL_ID"                    BIGINT     NOT NULL ,
  "PERSON_ID"                          BIGINT     NOT NULL ,
  "VISIT_DETAIL_CONCEPT_ID"            INTEGER     NOT NULL ,
  "VISIT_DETAIL_START_DATE"            DATE        NOT NULL ,
  "VISIT_DETAIL_START_DATETIME"        TIMESTAMP    NULL ,
  "VISIT_DETAIL_END_DATE"              DATE        NOT NULL ,
  "VISIT_DETAIL_END_DATETIME"          TIMESTAMP    NULL ,
  "VISIT_DETAIL_TYPE_CONCEPT_ID"       INTEGER     NOT NULL ,
  "PROVIDER_ID"                        BIGINT     NULL ,
  "CARE_SITE_ID"                       BIGINT     NULL ,
  "ADMITTING_SOURCE_CONCEPT_ID"        INTEGER     NULL ,
  "DISCHARGE_TO_CONCEPT_ID"            INTEGER     NULL ,
  "PRECEDING_VISIT_DETAIL_ID"          BIGINT     NULL ,
  "VISIT_DETAIL_SOURCE_VALUE"          VARCHAR(300) NULL ,
  "VISIT_DETAIL_SOURCE_CONCEPT_ID"     INTEGER     NULL ,
  "ADMITTING_SOURCE_VALUE"             VARCHAR(300) NULL ,
  "DISCHARGE_TO_SOURCE_VALUE"          VARCHAR(300) NULL ,
  "VISIT_DETAIL_PARENT_ID"             BIGINT     NULL ,
  "VISIT_OCCURRENCE_ID"                BIGINT     NOT NULL
);

CREATE TABLE "METADATA"
(
  "METADATA_CONCEPT_ID"       INTEGER       NOT NULL ,
  "METADATA_TYPE_CONCEPT_ID"  INTEGER       NOT NULL ,
  "NAME"                      VARCHAR(250)  NOT NULL ,
  "VALUE_AS_STRING"           TEXT  NULL ,
  "VALUE_AS_CONCEPT_ID"       INTEGER       NULL ,
  "METADATA_DATE"             DATE          NULL ,
  "METADATA_DATETIME"         TIMESTAMP      NULL
);

CREATE TABLE "SURVEY_CONDUCT" 
(
  "SURVEY_CONDUCT_ID"		  			BIGINT			NOT NULL ,
  "PERSON_ID"						        BIGINT			NOT NULL ,
  "SURVEY_CONCEPT_ID"			  		INTEGER			NOT NULL ,
  "SURVEY_START_DATE"				    DATE		  	NULL ,
  "SURVEY_START_DATETIME"		 		TIMESTAMP		NULL ,
  "SURVEY_END_DATE"					    DATE		  	NULL ,
  "SURVEY_END_DATETIME"		  		TIMESTAMP		NOT NULL ,
  "PROVIDER_ID"					      	BIGINT			NULL ,
  "ASSISTED_CONCEPT_ID"	  			INTEGER			NOT NULL ,
  "RESPONDENT_TYPE_CONCEPT_ID"	INTEGER			NOT NULL ,
  "TIMING_CONCEPT_ID"			  		INTEGER			NOT NULL ,
  "COLLECTION_METHOD_CONCEPT_ID"		INTEGER			NOT NULL ,
  "ASSISTED_SOURCE_VALUE"		  		VARCHAR(50)		NULL ,
  "RESPONDENT_TYPE_SOURCE_VALUE"		VARCHAR(100)  	NULL ,
  "TIMING_SOURCE_VALUE"				VARCHAR(100)	NULL ,
  "COLLECTION_METHOD_SOURCE_VALUE"	VARCHAR(100)	NULL ,
  "SURVEY_SOURCE_VALUE"				VARCHAR(100)	NULL ,
  "SURVEY_SOURCE_CONCEPT_ID"			INTEGER			NOT NULL ,
  "SURVEY_SOURCE_IDENTIFIER"			VARCHAR(200)	NULL ,
  "VALIDATED_SURVEY_CONCEPT_ID"		INTEGER			NOT NULL ,
  "VALIDATED_SURVEY_SOURCE_VALUE"		VARCHAR(100)	NULL ,
  "SURVEY_VERSION_NUMBER"				VARCHAR(20)		NULL ,
  "VISIT_OCCURRENCE_ID"				BIGINT			NULL ,
  "VISIT_DETAIL_ID"					BIGINT			NULL ,
  "RESPONSE_VISIT_OCCURRENCE_ID"	BIGINT			NULL
);

CREATE SEQUENCE "SEQ::OBSERVATION" START WITH 1 NO MAXVALUE;

CREATE OR REPLACE VIEW "VIEW::OMOP.CONCEPT" AS SELECT * FROM "CONCEPT";

CREATE OR REPLACE VIEW "VIEW::OMOP.PATIENT" (
  "PATIENT_ID",
  "BIRTH_DATE",
  "MONTH_OF_BIRTH",
  "YEAR_OF_BIRTH",
  "DEATH_DATE",
  "GENDER",
  "RACE",
  "ETHNICITY",
  "STATE",
  "COUNTY",
  "GENDER_CONCEPT_CODE",
  "RACE_CONCEPT_CODE",
  "ETHNICITY_CONCEPT_CODE"
  ) AS
SELECT
  "p_$0"."PERSON_ID" AS "PATIENT_ID",
  TO_DATE (
    (
      (TO_CHAR("p_$0"."YEAR_OF_BIRTH", '0000') || TO_CHAR("p_$0"."MONTH_OF_BIRTH", '00')) || 
      TO_CHAR("p_$0"."DAY_OF_BIRTH", '00')
    ), 'yyyymmdd') AS "BIRTH_DATE",
  "p_$0"."MONTH_OF_BIRTH",
  "p_$0"."YEAR_OF_BIRTH",
  COALESCE ("d_$1"."DEATH_DATE", NULL) AS "DEATH_DATE",
  "gernder_c_$2"."CONCEPT_NAME" AS "GENDER",
  "race_c_$3"."CONCEPT_NAME" AS "RACE",
  "ethnicity_c_$4"."CONCEPT_NAME" AS "ETHNICITY",
  "l_$5"."STATE" AS "STATE",
  "l_$5"."COUNTY" AS "COUNTY",
  "gernder_c_$2"."CONCEPT_CODE" AS "GENDER_CONCEPT_CODE",
  "race_c_$3"."CONCEPT_CODE" AS "RACE_CONCEPT_CODE",
  "ethnicity_c_$4"."CONCEPT_CODE" AS "ETHNICITY_CONCEPT_CODE"
FROM
  (
    (
      (
        (
          (
            "PERSON" AS "p_$0"
            LEFT OUTER JOIN "DEATH" AS "d_$1" ON("d_$1"."PERSON_ID" = "p_$0"."PERSON_ID")
          )
          LEFT OUTER JOIN "VIEW::OMOP.CONCEPT" AS "gernder_c_$2" ON(
            "gernder_c_$2"."CONCEPT_ID" = "p_$0"."GENDER_CONCEPT_ID"
          )
        )
        LEFT OUTER JOIN "VIEW::OMOP.CONCEPT" AS "race_c_$3" ON(
          "race_c_$3"."CONCEPT_ID" = "p_$0"."RACE_CONCEPT_ID"
        )
      )
      LEFT OUTER JOIN "VIEW::OMOP.CONCEPT" AS "ethnicity_c_$4" ON(
          "ethnicity_c_$4"."CONCEPT_ID" = "p_$0"."ETHNICITY_CONCEPT_ID"
      )
    )
    LEFT OUTER JOIN "LOCATION" AS "l_$5" ON("l_$5"."LOCATION_ID" = "p_$0"."LOCATION_ID")
  );

CREATE OR REPLACE VIEW "VIEW::OMOP.COND" (
    "CONDITION_OCCURRENCE_ID",
    "CONDITION_CONCEPT_ID",
    "CONDITION_NAME",
    "CONDITION_TYPE_NAME",
    "CONDITION_SOURCE_NAME",
    "CONDITION_STATUS_NAME",
    "PATIENT_ID",
    "CONDITION_START_DATE",
    "CONDITION_END_DATE",
    "VISIT_OCCURRENCE_ID",
    "CONDITION_SOURCE_VALUE",
    "CONDITION_CONCEPT_CODE",
    "CONDITION_TYPE_CONCEPT_CODE",
    "CONDITION_SOURCE_CONCEPT_CODE",
    "CONDITION_STATUS_CONCEPT_CODE"
  ) AS
SELECT
  "co_$0"."CONDITION_OCCURRENCE_ID",
  "co_$0"."CONDITION_CONCEPT_ID",
  "c_$2"."CONCEPT_NAME" AS "CONDITION_NAME",
  "t_$3"."CONCEPT_NAME" AS "CONDITION_TYPE_NAME",
  "s_$4"."CONCEPT_NAME" AS "CONDITION_SOURCE_NAME",
  "cs_$5"."CONCEPT_NAME" AS "CONDITION_STATUS_NAME",
  "p_$1"."PATIENT_ID",
  "co_$0"."CONDITION_START_DATE",
  "co_$0"."CONDITION_END_DATE",
  "co_$0"."VISIT_OCCURRENCE_ID",
  "co_$0"."CONDITION_SOURCE_VALUE",
  "c_$2"."CONCEPT_CODE" AS "CONDITION_CONCEPT_CODE",
  "t_$3"."CONCEPT_CODE" AS "CONDITION_TYPE_CONCEPT_CODE",
  "s_$4"."CONCEPT_CODE" AS "CONDITION_SOURCE_CONCEPT_CODE",
  "cs_$5"."CONCEPT_CODE" AS "CONDITION_STATUS_CONCEPT_CODE"
FROM
  (
    (
      (
         (
           (
            "CONDITION_OCCURRENCE" AS "co_$0"
            INNER JOIN "VIEW::OMOP.PATIENT" AS "p_$1" ON("co_$0"."PERSON_ID" = "p_$1"."PATIENT_ID")
          )
          INNER JOIN "VIEW::OMOP.CONCEPT" AS "c_$2" ON(
             "c_$2"."CONCEPT_ID" = "co_$0"."CONDITION_CONCEPT_ID"
          )
        )
        INNER JOIN "VIEW::OMOP.CONCEPT" AS "t_$3" ON(
           "t_$3"."CONCEPT_ID" = "co_$0"."CONDITION_TYPE_CONCEPT_ID"
        )
      )
      LEFT OUTER JOIN "VIEW::OMOP.CONCEPT" AS "s_$4" ON(
        "s_$4"."CONCEPT_ID" = "co_$0"."CONDITION_SOURCE_CONCEPT_ID"
      )
    )
    LEFT OUTER JOIN "VIEW::OMOP.CONCEPT" AS "cs_$5" ON(
      "cs_$5"."CONCEPT_ID" = "co_$0"."CONDITION_STATUS_CONCEPT_ID"
    )
  );


CREATE OR REPLACE VIEW "VIEW::OMOP.COND_ERA" (
    "CONDITION_ERA_ID",
    "CONDITION_CONCEPT_ID",
    "CONDITION_NAME",
    "PATIENT_ID",
    "CONDITION_ERA_START_DATE",
    "CONDITION_ERA_END_DATE",
    "CONDITION_OCCURRENCE_COUNT",
    "CONDITION_CONCEPT_CODE"
  ) AS
SELECT
  "ce_$0"."CONDITION_ERA_ID",
  "ce_$0"."CONDITION_CONCEPT_ID",
  "c_$2"."CONCEPT_NAME" AS "CONDITION_NAME",
  "p_$1"."PATIENT_ID",
  "ce_$0"."CONDITION_ERA_START_DATE",
  "ce_$0"."CONDITION_ERA_END_DATE",
  "ce_$0"."CONDITION_OCCURRENCE_COUNT",
  "c_$2"."CONCEPT_CODE" AS "CONDITION_CONCEPT_CODE"
FROM
  (
    (
      "CONDITION_ERA" AS "ce_$0"
      INNER JOIN "VIEW::OMOP.PATIENT" AS "p_$1" ON("ce_$0"."PERSON_ID" = "p_$1"."PATIENT_ID")
    )
    INNER JOIN "VIEW::OMOP.CONCEPT" AS "c_$2" ON(
       "c_$2"."CONCEPT_ID" = "ce_$0"."CONDITION_CONCEPT_ID"
    )
  );


CREATE OR REPLACE VIEW "VIEW::OMOP.COND_ICD10" (
    "CONDITION_OCCURRENCE_ID",
    "CONDITION_CONCEPT_ID",
    "CONDITION_NAME",
    "CONDITION_TYPE_NAME",
    "CONDITION_SOURCE_NAME",
    "CONDITION_STATUS_NAME",
    "PATIENT_ID",
    "CONDITION_START_DATE",
    "CONDITION_END_DATE",
    "VISIT_OCCURRENCE_ID",
    "CONDITION_SOURCE_VALUE",
    "CONDITION_CONCEPT_CODE",
    "CONDITION_TYPE_CONCEPT_CODE",
    "CONDITION_SOURCE_CONCEPT_CODE",
    "CONDITION_STATUS_CONCEPT_CODE"
  ) AS
SELECT
  "co_$0"."CONDITION_OCCURRENCE_ID",
  "co_$0"."CONDITION_CONCEPT_ID",
  "c_$2"."CONCEPT_NAME" AS "CONDITION_NAME",
  "t_$3"."CONCEPT_NAME" AS "CONDITION_TYPE_NAME",
  "s_$4"."CONCEPT_NAME" AS "CONDITION_SOURCE_NAME",
  "cs_$5"."CONCEPT_NAME" AS "CONDITION_STATUS_NAME",
  "p_$1"."PATIENT_ID",
  "co_$0"."CONDITION_START_DATE",
  "co_$0"."CONDITION_END_DATE",
  "co_$0"."VISIT_OCCURRENCE_ID",
  "co_$0"."CONDITION_SOURCE_VALUE",
  "c_$2"."CONCEPT_CODE" AS "CONDITION_CONCEPT_CODE",
  "t_$3"."CONCEPT_CODE" AS "CONDITION_TYPE_CONCEPT_CODE",
  "s_$4"."CONCEPT_CODE" AS "CONDITION_SOURCE_CONCEPT_CODE",
  "cs_$5"."CONCEPT_CODE" AS "CONDITION_STATUS_CONCEPT_CODE"
FROM
  (
    (
      (
        (
          (
            "CONDITION_OCCURRENCE" AS "co_$0"
            INNER JOIN "VIEW::OMOP.PATIENT" AS "p_$1" ON ("co_$0"."PERSON_ID" = "p_$1"."PATIENT_ID")
          )
          INNER JOIN "VIEW::OMOP.CONCEPT" AS "c_$2" ON (
            (
              "c_$2"."CONCEPT_ID" = "co_$0"."CONDITION_CONCEPT_ID"
            )
            AND ("c_$2"."VOCABULARY_ID" = 'icd10cm')
          )
        )
        LEFT OUTER JOIN "VIEW::OMOP.CONCEPT" AS "t_$3" ON (
          "t_$3"."CONCEPT_ID" = "co_$0"."CONDITION_TYPE_CONCEPT_ID"
        )
      )
      LEFT OUTER JOIN "VIEW::OMOP.CONCEPT" AS "s_$4" ON (
        "s_$4"."CONCEPT_ID" = "co_$0"."CONDITION_SOURCE_CONCEPT_ID"
      )
    )
    LEFT OUTER JOIN "VIEW::OMOP.CONCEPT" AS "cs_$5" ON (
      "cs_$5"."CONCEPT_ID" = "co_$0"."CONDITION_STATUS_CONCEPT_ID"
    )
  );


CREATE OR REPLACE VIEW "VIEW::OMOP.PROC" (
    "PROCEDURE_OCCURRENCE_ID",
    "PATIENT_ID",
    "PROCEDURE_CONCEPT_ID",
    "PROCEDURE_NAME",
    "PROCEDURE_DATE",
    "PROCEDURE_DATETIME",
    "PROCEDURE_TYPE_CONCEPT_ID",
    "PROCEDURE_TYPE_NAME",
    "MODIFIER_CONCEPT_ID",
    "MODIFIER_NAME",
    "QUANTITY",
    "PROVIDER_ID",
    "VISIT_OCCURRENCE_ID",
    "PROCEDURE_SOURCE_VALUE",
    "PROCEDURE_SOURCE_CONCEPT_ID",
    "MODIFIER_SOURCE_VALUE",
    "PROCEDURE_CONCEPT_CODE",
    "PROCEDURE_TYPE_CONCEPT_CODE",
    "MODIFIER_CONCEPT_CODE"
  ) AS
SELECT
  "p_$0"."PROCEDURE_OCCURRENCE_ID",
  "p_$0"."PERSON_ID" AS "PATIENT_ID",
  "p_$0"."PROCEDURE_CONCEPT_ID",
  "c_$1"."CONCEPT_NAME" AS "PROCEDURE_NAME",
  "p_$0"."PROCEDURE_DATE",
  "p_$0"."PROCEDURE_DATETIME",
  "p_$0"."PROCEDURE_TYPE_CONCEPT_ID",
  "t_$2"."CONCEPT_NAME" AS "PROCEDURE_TYPE_NAME",
  "p_$0"."MODIFIER_CONCEPT_ID",
  "m_$3"."CONCEPT_NAME" AS "MODIFIER_NAME",
  "p_$0"."QUANTITY",
  "p_$0"."PROVIDER_ID",
  "p_$0"."VISIT_OCCURRENCE_ID",
  "p_$0"."PROCEDURE_SOURCE_VALUE",
  "p_$0"."PROCEDURE_SOURCE_CONCEPT_ID",
  "p_$0"."MODIFIER_SOURCE_VALUE",
  "c_$1"."CONCEPT_CODE" AS "PROCEDURE_CONCEPT_CODE",
  "t_$2"."CONCEPT_CODE" AS "PROCEDURE_TYPE_CONCEPT_CODE",
  "m_$3"."CONCEPT_CODE" AS "MODIFIER_CONCEPT_CODE"
FROM
  (
    (
      (
        "PROCEDURE_OCCURRENCE" AS "p_$0"
        LEFT OUTER JOIN "VIEW::OMOP.CONCEPT" AS "c_$1" ON(
           "c_$1"."CONCEPT_ID" = "p_$0"."PROCEDURE_CONCEPT_ID"
        )
      )
      LEFT OUTER JOIN "VIEW::OMOP.CONCEPT" AS "t_$2" ON(
         "t_$2"."CONCEPT_ID" = "p_$0"."PROCEDURE_TYPE_CONCEPT_ID"
      )
    )
    LEFT OUTER JOIN "VIEW::OMOP.CONCEPT" AS "m_$3" ON(
      "m_$3"."CONCEPT_ID" = "p_$0"."MODIFIER_CONCEPT_ID"
    )
  );


CREATE OR REPLACE VIEW "VIEW::OMOP.VISIT" (
    "VISIT_OCCURRENCE_ID",
    "VISIT_CONCEPT_ID",
    "VISIT_NAME",
    "VISIT_TYPE_NAME",
    "PATIENT_ID",
    "VISIT_START_DATE",
    "PRECEDING_VISIT_OCCURRENCE_ID",
    "VISIT_END_DATE",
    "VISIT_CONCEPT_CODE",
    "VISIT_TYPE_CONCEPT_CODE"
  ) AS
SELECT
  "vo_$0"."VISIT_OCCURRENCE_ID",
  "vo_$0"."VISIT_CONCEPT_ID",
  "c_$2"."CONCEPT_NAME" AS "VISIT_NAME",
  "t_$3"."CONCEPT_NAME" AS "VISIT_TYPE_NAME",
  "p_$1"."PATIENT_ID",
  "vo_$0"."VISIT_START_DATE",
  "vo_$0"."PRECEDING_VISIT_OCCURRENCE_ID",
  "vo_$0"."VISIT_END_DATE",
  "c_$2"."CONCEPT_CODE" AS "VISIT_CONCEPT_CODE",
  "t_$3"."CONCEPT_CODE" AS "VISIT_TYPE_CONCEPT_CODE"
FROM
  (
     (
       (
        "VISIT_OCCURRENCE" AS "vo_$0"
        INNER JOIN "VIEW::OMOP.PATIENT" AS "p_$1" ON("vo_$0"."PERSON_ID" = "p_$1"."PATIENT_ID")
      )
      INNER JOIN "VIEW::OMOP.CONCEPT" AS "c_$2" ON(
         "c_$2"."CONCEPT_ID" = "vo_$0"."VISIT_CONCEPT_ID"
      )
    )
    INNER JOIN "VIEW::OMOP.CONCEPT" AS "t_$3" ON(
       "t_$3"."CONCEPT_ID" = "vo_$0"."VISIT_TYPE_CONCEPT_ID"
    )
  );


CREATE OR REPLACE VIEW "VIEW::OMOP.SPEC" (
    "SPECIMEN_ID",
    "PATIENT_ID",
    "SPECIMEN_CONCEPT_ID",
    "SPECIMEN_NAME",
    "SPECIMEN_TYPE_CONCEPT_ID",
    "SPECIMEN_TYPE_NAME",
    "SPECIMEN_DATE",
    "SPECIMEN_DATETIME",
    "QUANTITY",
    "UNIT_CONCEPT_ID",
    "UNIT_NAME",
    "ANATOMIC_SITE_CONCEPT_ID",
    "ANATOMIC_SITE_NAME",
    "DISEASE_STATUS_CONCEPT_ID",
    "DISEASE_STATUS_NAME",
    "SPECIMEN_SOURCE_ID",
    "SPECIMEN_SOURCE_VALUE",
    "UNIT_SOURCE_VALUE",
    "ANATOMIC_SITE_SOURCE_VALUE",
    "DISEASE_STATUS_SOURCE_VALUE",
    "SPECIMEN_CONCEPT_CODE",
    "SPECIMEN_TYPE_CONCEPT_CODE",
    "UNIT_CONCEPT_CODE",
    "ANATOMIC_SITE_CONCEPT_CODE",
    "DISEASE_STATUS_CONCEPT_CODE"
  ) AS
SELECT
  "s_$0"."SPECIMEN_ID",
  "s_$0"."PERSON_ID" AS "PATIENT_ID",
  "s_$0"."SPECIMEN_CONCEPT_ID",
  "c_$1"."CONCEPT_NAME" AS "SPECIMEN_NAME",
  "s_$0"."SPECIMEN_TYPE_CONCEPT_ID",
  "t_$2"."CONCEPT_NAME" AS "SPECIMEN_TYPE_NAME",
  "s_$0"."SPECIMEN_DATE",
  "s_$0"."SPECIMEN_DATETIME",
  "s_$0"."QUANTITY",
  "s_$0"."UNIT_CONCEPT_ID",
  "u_$3"."CONCEPT_NAME" AS "UNIT_NAME",
  "s_$0"."ANATOMIC_SITE_CONCEPT_ID",
  "a_$4"."CONCEPT_NAME" AS "ANATOMIC_SITE_NAME",
  "s_$0"."DISEASE_STATUS_CONCEPT_ID",
  "d_$5"."CONCEPT_NAME" AS "DISEASE_STATUS_NAME",
  "s_$0"."SPECIMEN_SOURCE_ID",
  "s_$0"."SPECIMEN_SOURCE_VALUE",
  "s_$0"."UNIT_SOURCE_VALUE",
  "s_$0"."ANATOMIC_SITE_SOURCE_VALUE",
  "s_$0"."DISEASE_STATUS_SOURCE_VALUE",
  "c_$1"."CONCEPT_CODE" AS "SPECIMEN_CONCEPT_CODE",
  "t_$2"."CONCEPT_CODE" AS "SPECIMEN_TYPE_CONCEPT_CODE",
  "u_$3"."CONCEPT_CODE" AS "UNIT_CONCEPT_CODE",
  "a_$4"."CONCEPT_CODE" AS "ANATOMIC_SITE_CONCEPT_CODE",
  "d_$5"."CONCEPT_CODE" AS "DISEASE_STATUS_CONCEPT_CODE"
FROM
  (
    (
      (
        (
          (
            "SPECIMEN" AS "s_$0"
            LEFT OUTER JOIN "VIEW::OMOP.CONCEPT" AS "c_$1" ON(
               "c_$1"."CONCEPT_ID" = "s_$0"."SPECIMEN_CONCEPT_ID"
            )
          )
          LEFT OUTER JOIN "VIEW::OMOP.CONCEPT" AS "t_$2" ON(
                     "t_$2"."CONCEPT_ID" = "s_$0"."SPECIMEN_TYPE_CONCEPT_ID"
          )
        )
        LEFT OUTER JOIN "VIEW::OMOP.CONCEPT" AS "u_$3" ON("u_$3"."CONCEPT_ID" = "s_$0"."UNIT_CONCEPT_ID")
      )
      LEFT OUTER JOIN "VIEW::OMOP.CONCEPT" AS "a_$4" ON(
        "a_$4"."CONCEPT_ID" = "s_$0"."ANATOMIC_SITE_CONCEPT_ID"
      )
    )
    LEFT OUTER JOIN "VIEW::OMOP.CONCEPT" AS "d_$5" ON(
       "d_$5"."CONCEPT_ID" = "s_$0"."DISEASE_STATUS_CONCEPT_ID"
    )
  );


CREATE OR REPLACE VIEW "VIEW::OMOP.PP_PER" (
    "PAYER_PLAN_PERIOD_ID",
    "PATIENT_ID",
    "PAYER_PLAN_PERIOD_START_DATE",
    "PAYER_PLAN_PERIOD_END_DATE",
    "PAYER_SOURCE_VALUE",
    "PLAN_SOURCE_VALUE",
    "FAMILY_SOURCE_VALUE"
  ) AS
SELECT
  "p_$0"."PAYER_PLAN_PERIOD_ID",
  "p_$0"."PERSON_ID" AS "PATIENT_ID",
  "p_$0"."PAYER_PLAN_PERIOD_START_DATE",
  "p_$0"."PAYER_PLAN_PERIOD_END_DATE",
  "p_$0"."PAYER_SOURCE_VALUE",
  "p_$0"."PLAN_SOURCE_VALUE",
  "p_$0"."FAMILY_SOURCE_VALUE"
FROM
  "PAYER_PLAN_PERIOD" AS "p_$0";


CREATE OR REPLACE VIEW "VIEW::OMOP.OBS_PER" (
    "OBSERVATION_PERIOD_ID",
    "PATIENT_ID",
    "OBSERVATION_PERIOD_START_DATE",
    "OBSERVATION_PERIOD_END_DATE",
    "PERIOD_TYPE_CONCEPT_ID",
    "PERIOD_TYPE_NAME",
    "PERIOD_TYPE_CONCEPT_CODE"
  ) AS
SELECT
  "o_$0"."OBSERVATION_PERIOD_ID",
  "o_$0"."PERSON_ID" AS "PATIENT_ID",
  "o_$0"."OBSERVATION_PERIOD_START_DATE",
  "o_$0"."OBSERVATION_PERIOD_END_DATE",
  "o_$0"."PERIOD_TYPE_CONCEPT_ID",
  "t_$1"."CONCEPT_NAME" AS "PERIOD_TYPE_NAME",
  "t_$1"."CONCEPT_CODE" AS "PERIOD_TYPE_CONCEPT_CODE"
FROM
  (
    "OBSERVATION_PERIOD" AS "o_$0"
    LEFT OUTER JOIN "VIEW::OMOP.CONCEPT" AS "t_$1" ON(
       "t_$1"."CONCEPT_ID" = "o_$0"."PERIOD_TYPE_CONCEPT_ID"
    )
  );


CREATE OR REPLACE VIEW "VIEW::OMOP.OBS" (
    "OBSERVATION_ID",
    "PATIENT_ID",
    "OBSERVATION_CONCEPT_ID",
    "OBSERVATION_NAME",
    "OBSERVATION_DATE",
    "OBSERVATION_DATETIME",
    "OBSERVATION_TYPE_CONCEPT_ID",
    "OBSERVATION_TYPE_NAME",
    "VALUE_AS_NUMBER",
    "VALUE_AS_STRING",
    "VALUE_AS_CONCEPT_ID",
    "VALUE_NAME",
    "QUALIFIER_CONCEPT_ID",
    "QUALIFIER_NAME",
    "UNIT_CONCEPT_ID",
    "UNIT_NAME",
    "PROVIDER_ID",
    "VISIT_OCCURRENCE_ID",
    "OBSERVATION_SOURCE_VALUE",
    "OBSERVATION_SOURCE_CONCEPT_ID",
    "UNIT_SOURCE_VALUE",
    "QUALIFIER_SOURCE_VALUE",
    "OBSERVATION_CONCEPT_CODE",
    "OBSERVATION_TYPE_CONCEPT_CODE",
    "VALUE_AS_CONCEPT_CODE",
    "QUALIFIER_CONCEPT_CODE",
    "UNIT_CONCEPT_CODE",
    "OBSERVATION_EVENT_ID",
    "OBS_EVENT_FIELD_CONCEPT_ID"
  ) AS
SELECT
  "o_$0"."OBSERVATION_ID",
  "o_$0"."PERSON_ID" AS "PATIENT_ID",
  "o_$0"."OBSERVATION_CONCEPT_ID",
  "c_$1"."CONCEPT_NAME" AS "OBSERVATION_NAME",
  "o_$0"."OBSERVATION_DATE",
  "o_$0"."OBSERVATION_DATETIME",
  "o_$0"."OBSERVATION_TYPE_CONCEPT_ID",
  "t_$2"."CONCEPT_NAME" AS "OBSERVATION_TYPE_NAME",
  "o_$0"."VALUE_AS_NUMBER",
  "o_$0"."VALUE_AS_STRING",
  "o_$0"."VALUE_AS_CONCEPT_ID",
  "v_$3"."CONCEPT_NAME" AS "VALUE_NAME",
  "o_$0"."QUALIFIER_CONCEPT_ID",
  "q_$4"."CONCEPT_NAME" AS "QUALIFIER_NAME",
  "o_$0"."UNIT_CONCEPT_ID",
  "u_$5"."CONCEPT_NAME" AS "UNIT_NAME",
  "o_$0"."PROVIDER_ID",
  "o_$0"."VISIT_OCCURRENCE_ID",
  "o_$0"."OBSERVATION_SOURCE_VALUE",
  "o_$0"."OBSERVATION_SOURCE_CONCEPT_ID",
  "o_$0"."UNIT_SOURCE_VALUE",
  "o_$0"."QUALIFIER_SOURCE_VALUE",
  "c_$1"."CONCEPT_CODE" AS "OBSERVATION_CONCEPT_CODE",
  "t_$2"."CONCEPT_CODE" AS "OBSERVATION_TYPE_CONCEPT_CODE",
  "v_$3"."CONCEPT_CODE" AS "VALUE_AS_CONCEPT_CODE",
  "q_$4"."CONCEPT_CODE" AS "QUALIFIER_CONCEPT_CODE",
  "u_$5"."CONCEPT_CODE" AS "UNIT_CONCEPT_CODE",
  "o_$0"."OBSERVATION_EVENT_ID",
  "o_$0"."OBS_EVENT_FIELD_CONCEPT_ID"
FROM
  (
     (
       (
         (
           (
            "OBSERVATION" AS "o_$0"
            LEFT OUTER JOIN "VIEW::OMOP.CONCEPT" AS "c_$1" ON(
               "c_$1"."CONCEPT_ID" = "o_$0"."OBSERVATION_CONCEPT_ID"
            )
          )
          LEFT OUTER JOIN "VIEW::OMOP.CONCEPT" AS "t_$2" ON(
             "t_$2"."CONCEPT_ID" = "o_$0"."OBSERVATION_TYPE_CONCEPT_ID"
          )
        )
        LEFT OUTER JOIN "VIEW::OMOP.CONCEPT" AS "v_$3" ON(
         "v_$3"."CONCEPT_ID" = "o_$0"."VALUE_AS_CONCEPT_ID"
        )
      )
      LEFT OUTER JOIN "VIEW::OMOP.CONCEPT" AS "q_$4" ON(
        "q_$4"."CONCEPT_ID" = "o_$0"."QUALIFIER_CONCEPT_ID"
      )
    )
    LEFT OUTER JOIN "VIEW::OMOP.CONCEPT" AS "u_$5" ON("u_$5"."CONCEPT_ID" = "o_$0"."UNIT_CONCEPT_ID")
  );


CREATE OR REPLACE VIEW "VIEW::OMOP.MEAS" (
    "MEASUREMENT_ID",
    "MEASUREMENT_CONCEPT_ID",
    "MEASUREMENT_NAME",
    "MEASUREMENT_TYPE_NAME",
    "MEASUREMENT_VALUE_NAME",
    "PATIENT_ID",
    "MEASUREMENT_DATE",
    "VALUE_AS_NUMBER",
    "VISIT_OCCURRENCE_ID",
    "MEASUREMENT_CONCEPT_CODE",
    "MEASUREMENT_TYPE_CONCEPT_CODE",
    "VALUE_AS_CONCEPT_CODE",
    "UNIT_CONCEPT_CODE"
  ) AS
SELECT
  "m_$0"."MEASUREMENT_ID",
  "m_$0"."MEASUREMENT_CONCEPT_ID",
  "c_$2"."CONCEPT_NAME" AS "MEASUREMENT_NAME",
  "t_$3"."CONCEPT_NAME" AS "MEASUREMENT_TYPE_NAME",
  "vt_$4"."CONCEPT_NAME" AS "MEASUREMENT_VALUE_NAME",
  "p_$1"."PATIENT_ID",
  "m_$0"."MEASUREMENT_DATE",
  "m_$0"."VALUE_AS_NUMBER",
  "m_$0"."VISIT_OCCURRENCE_ID",
  "c_$2"."CONCEPT_CODE" AS "MEASUREMENT_CONCEPT_CODE",
  "t_$3"."CONCEPT_CODE" AS "MEASUREMENT_TYPE_CONCEPT_CODE",
  "vt_$4"."CONCEPT_CODE" AS "VALUE_AS_CONCEPT_CODE",
  "u_$5"."CONCEPT_CODE" AS "UNIT_CONCEPT_CODE"
FROM
  (
    (
      (
        (
          (
            "MEASUREMENT" AS "m_$0"
            INNER JOIN "VIEW::OMOP.PATIENT" AS "p_$1" ON("m_$0"."PERSON_ID" = "p_$1"."PATIENT_ID")
          )
          INNER JOIN "VIEW::OMOP.CONCEPT" AS "c_$2" ON("c_$2"."CONCEPT_ID" = "m_$0"."MEASUREMENT_CONCEPT_ID")
        )
        LEFT OUTER JOIN "VIEW::OMOP.CONCEPT" AS "t_$3" ON(
          "t_$3"."CONCEPT_ID" = "m_$0"."MEASUREMENT_TYPE_CONCEPT_ID"
        )
      )
      LEFT OUTER JOIN "VIEW::OMOP.CONCEPT" AS "vt_$4" ON(
        "vt_$4"."CONCEPT_ID" = "m_$0"."VALUE_AS_CONCEPT_ID"
      )
    )
    LEFT OUTER JOIN "VIEW::OMOP.CONCEPT" AS "u_$5" ON("u_$5"."CONCEPT_ID" = "m_$0"."UNIT_CONCEPT_ID")
  );


CREATE OR REPLACE VIEW "VIEW::OMOP.DRUG_EXP" (
    "DRUG_EXPOSURE_ID",
    "PATIENT_ID",
    "DRUG_CONCEPT_ID",
    "DRUG_NAME",
    "DRUG_EXPOSURE_START_DATE",
    "DRUG_EXPOSURE_END_DATE",
    "DRUG_EXPOSURE_START_DATETIME",
    "DRUG_EXPOSURE_END_DATETIME",
    "VERBATIM_END_DATE",
    "DRUG_TYPE_CONCEPT_ID",
    "DRUG_TYPE_NAME",
    "STOP_REASON",
    "REFILLS",
    "DAYS_SUPPLY",
    "SIG",
    "ROUTE_CONCEPT_ID",
    "ROUTE_NAME",
    "LOT_NUMBER",
    "PROVIDER_ID",
    "VISIT_OCCURRENCE_ID",
    "DRUG_CONCEPT_CODE",
    "DRUG_TYPE_CONCEPT_CODE",
    "ROUTE_CONCEPT_CODE"
  ) AS
SELECT
  "de_$0"."DRUG_EXPOSURE_ID",
  "p_$1"."PATIENT_ID",
  "de_$0"."DRUG_CONCEPT_ID",
  "c_$2"."CONCEPT_NAME" AS "DRUG_NAME",
  "de_$0"."DRUG_EXPOSURE_START_DATE",
  "de_$0"."DRUG_EXPOSURE_END_DATE",
  "de_$0"."DRUG_EXPOSURE_START_DATETIME",
  "de_$0"."DRUG_EXPOSURE_END_DATETIME",
  "de_$0"."VERBATIM_END_DATE",
  "de_$0"."DRUG_TYPE_CONCEPT_ID",
  "ct_$3"."CONCEPT_NAME" AS "DRUG_TYPE_NAME",
  "de_$0"."STOP_REASON",
  "de_$0"."REFILLS",
  "de_$0"."DAYS_SUPPLY",
  "de_$0"."SIG",
  "de_$0"."ROUTE_CONCEPT_ID",
  "r_$4"."CONCEPT_NAME" AS "ROUTE_NAME",
  "de_$0"."LOT_NUMBER",
  "de_$0"."PROVIDER_ID",
  "de_$0"."VISIT_OCCURRENCE_ID",
  "c_$2"."CONCEPT_CODE" AS "DRUG_CONCEPT_CODE",
  "ct_$3"."CONCEPT_CODE" AS "DRUG_TYPE_CONCEPT_CODE",
  "r_$4"."CONCEPT_CODE" AS "ROUTE_CONCEPT_CODE"
FROM
  (
    (
      (
        (
         "DRUG_EXPOSURE" AS "de_$0"
          INNER JOIN "VIEW::OMOP.PATIENT" AS "p_$1" ON("de_$0"."PERSON_ID" = "p_$1"."PATIENT_ID")
        )
        INNER JOIN "VIEW::OMOP.CONCEPT" AS "c_$2" ON(
          "c_$2"."CONCEPT_ID" = "de_$0"."DRUG_CONCEPT_ID"
        )
      )
      INNER JOIN "VIEW::OMOP.CONCEPT" AS "ct_$3" ON(
        "ct_$3"."CONCEPT_ID" = "de_$0"."DRUG_TYPE_CONCEPT_ID"
      )
    )
    INNER JOIN "VIEW::OMOP.CONCEPT" AS "r_$4" ON(
      "r_$4"."CONCEPT_ID" = "de_$0"."ROUTE_CONCEPT_ID"
    )
  );


CREATE OR REPLACE VIEW "VIEW::OMOP.DRUG_ERA" (
    "DRUG_ERA_ID",
    "PATIENT_ID",
    "DRUG_NAME",
    "DRUG_ERA_START_DATE",
    "DRUG_ERA_END_DATE",
    "DRUG_EXPOSURE_COUNT",
    "GAP_DAYS",
    "DRUG_CONCEPT_CODE"
  ) AS
SELECT
  "de_$0"."DRUG_ERA_ID",
  "p_$1"."PATIENT_ID",
  "c_$2"."CONCEPT_NAME" AS "DRUG_NAME",
  "de_$0"."DRUG_ERA_START_DATE",
  "de_$0"."DRUG_ERA_END_DATE",
  "de_$0"."DRUG_EXPOSURE_COUNT",
  "de_$0"."GAP_DAYS",
  "c_$2"."CONCEPT_CODE" AS "DRUG_CONCEPT_CODE"
FROM
  (
    (
      "DRUG_ERA" AS "de_$0"
      INNER JOIN "VIEW::OMOP.PATIENT" AS "p_$1" ON("de_$0"."PERSON_ID" = "p_$1"."PATIENT_ID")
    )
    LEFT OUTER JOIN "VIEW::OMOP.CONCEPT" AS "c_$2" ON(
       "c_$2"."CONCEPT_ID" = "de_$0"."DRUG_CONCEPT_ID"
    )
  );


CREATE OR REPLACE VIEW "VIEW::OMOP.DOSE_ERA" (
    "DOSE_ERA_ID",
    "PATIENT_ID",
    "DRUG_NAME",
    "UNIT_NAME",
    "DOSE_VALUE",
    "DOSE_ERA_START_DATE",
    "DOSE_ERA_END_DATE",
    "DRUG_CONCEPT_CODE",
    "UNIT_CONCEPT_CODE"
  ) AS
SELECT
  "de_$0"."DOSE_ERA_ID",
  "p_$1"."PATIENT_ID",
  "c_$2"."CONCEPT_NAME" AS "DRUG_NAME",
  "u_$3"."CONCEPT_NAME" AS "UNIT_NAME",
  "de_$0"."DOSE_VALUE",
  "de_$0"."DOSE_ERA_START_DATE",
  "de_$0"."DOSE_ERA_END_DATE",
  "c_$2"."CONCEPT_CODE" AS "DRUG_CONCEPT_CODE",
  "u_$3"."CONCEPT_CODE" AS "UNIT_CONCEPT_CODE"
FROM
  (
     (
       (
        "DOSE_ERA" AS "de_$0"
        INNER JOIN "VIEW::OMOP.PATIENT" AS "p_$1" ON("de_$0"."PERSON_ID" = "p_$1"."PATIENT_ID")
      )
      INNER JOIN "VIEW::OMOP.CONCEPT" AS "c_$2" ON(
        "c_$2"."CONCEPT_ID" = "de_$0"."DRUG_CONCEPT_ID"
      )
    )
    INNER JOIN "VIEW::OMOP.CONCEPT" AS "u_$3" ON(
      "u_$3"."CONCEPT_ID" = "de_$0"."UNIT_CONCEPT_ID"
    )
  );


CREATE OR REPLACE VIEW "VIEW::OMOP.DEVICE_EXPOSURE" (
    "DEVICE_EXPOSURE_ID",
    "PATIENT_ID",
    "DEVICE_NAME",
    "DEVICE_CONCEPT_ID",
    "DEVICE_EXPOSURE_START_DATE",
    "DEVICE_EXPOSURE_END_DATE",
    "DEVICE_TYPE_NAME",
    "VISIT_OCCURRENCE_ID",
   "DEVICE_CONCEPT_CODE",
   "DEVICE_TYPE_CONCEPT_CODE"
  ) AS
SELECT
  "de_$0"."DEVICE_EXPOSURE_ID",
  "p_$1"."PATIENT_ID",
  "c_$2"."CONCEPT_NAME" AS "DEVICE_NAME",
  "de_$0"."DEVICE_CONCEPT_ID",
  "de_$0"."DEVICE_EXPOSURE_START_DATE",
  "de_$0"."DEVICE_EXPOSURE_END_DATE",
  "ct_$3"."CONCEPT_NAME" AS "DEVICE_TYPE_NAME",
  "de_$0"."VISIT_OCCURRENCE_ID",
  "c_$2"."CONCEPT_CODE" AS "DEVICE_CONCEPT_CODE",
  "ct_$3"."CONCEPT_CODE" AS "DEVICE_TYPE_CONCEPT_CODE"
FROM
  (
    (
      (
        "DEVICE_EXPOSURE" AS "de_$0"
        INNER JOIN "VIEW::OMOP.PATIENT" AS "p_$1" ON("de_$0"."PERSON_ID" = "p_$1"."PATIENT_ID")
      )
      INNER JOIN "VIEW::OMOP.CONCEPT" AS "c_$2" ON(
         "c_$2"."CONCEPT_ID" = "de_$0"."DEVICE_CONCEPT_ID"
      )
    )
    INNER JOIN "VIEW::OMOP.CONCEPT" AS "ct_$3" ON(
     "ct_$3"."CONCEPT_ID" = "de_$0"."DEVICE_TYPE_CONCEPT_ID"
    )
  );


CREATE OR REPLACE VIEW "VIEW::OMOP.DEATH" (
  "PATIENT_ID",
  "DEATH_TYPE_NAME",
  "DEATH_DATE",
  "DEATH_DATETIME",
  "DEATH_TYPE_CONCEPT_CODE"
  ) AS
SELECT
  "p_$1"."PATIENT_ID",
  "c_$2"."CONCEPT_NAME" AS "DEATH_TYPE_NAME",
  "d_$0"."DEATH_DATE",
  "d_$0"."DEATH_DATETIME",
  "c_$2"."CONCEPT_CODE" AS "DEATH_TYPE_CONCEPT_CODE"
FROM
  (
    (
      "DEATH" AS "d_$0"
      INNER JOIN "VIEW::OMOP.PATIENT" AS "p_$1" ON("d_$0"."PERSON_ID" = "p_$1"."PATIENT_ID")
    )
    INNER JOIN "VIEW::OMOP.CONCEPT" AS "c_$2" ON(
     "c_$2"."CONCEPT_ID" = "d_$0"."DEATH_TYPE_CONCEPT_ID"
    )
  );


-- Unique Constraints
-- ALTER TABLE "CONCEPT_SYNONYM" ADD CONSTRAINT UQ_CONCEPT_SYNONYM UNIQUE ("CONCEPT_ID", "CONCEPT_SYNONYM_NAME", "LANGUAGE_CONCEPT_ID");

-- CREATE INDEX "IDX_VISIT_DETAIL_PERSON_ID" ON "VISIT_DETAIL" ("PERSON_ID" ASC);
-- CREATE INDEX "IDX_VISIT_DETAIL_CONCEPT_ID" ON"VISIT_DETAIL" ("VISIT_DETAIL_CONCEPT_ID" ASC);


--rollback ALTER TABLE "OBSERVATION" DROP COLUMN "OBS_EVENT_FIELD_CONCEPT_ID";

--rollback DROP SEQUENCE "SEQ::OBSERVATION";

--rollback DROP VIEW "VIEW::OMOP.COND";
--rollback DROP VIEW "VIEW::OMOP.COND_ERA";
--rollback DROP VIEW "VIEW::OMOP.COND_ICD10";
--rollback DROP VIEW "VIEW::OMOP.PROC";
--rollback DROP VIEW "VIEW::OMOP.VISIT";
--rollback DROP VIEW "VIEW::OMOP.SPEC";
--rollback DROP VIEW "VIEW::OMOP.PP_PER";
--rollback DROP VIEW "VIEW::OMOP.OBS_PER";
--rollback DROP VIEW "VIEW::OMOP.OBS";
--rollback DROP VIEW "VIEW::OMOP.MEAS";
--rollback DROP VIEW "VIEW::OMOP.DRUG_EXP";
--rollback DROP VIEW "VIEW::OMOP.DRUG_ERA";
--rollback DROP VIEW "VIEW::OMOP.DOSE_ERA";
--rollback DROP VIEW "VIEW::OMOP.DEVICE_EXPOSURE";
--rollback DROP VIEW "VIEW::OMOP.DEATH";
--rollback DROP VIEW "VIEW::OMOP.PATIENT";
###
### A complete description of a Prefect Deployment for flow 'exec-flow'
###
name: testflow
description: null
version: 19881ecf275bd7c29540f055f7f58feb
# The work queue that will handle this deployment's runs
work_queue_name: default
work_pool_name: null
tags: []
parameters: {"json_graph": {"nodes":{"my_data_mapping":{"type":"data_mapping_node","tables":{"death":"death_sql_node","person":"person_sql_node"},"table_joins":[{"full":false,"is_outer_join":false,"left_table_name":"person","right_table_name":"death","left_table_join_on":"PERSON_ID","right_table_join_on":"PERSON_ID"}],"data_mapping":[{"fields":[{"source_field":"PERSON_ID","target_field":"PERSON_PERSON_ID"},{"source_field":"DAY_OF_BIRTH","target_field":"PERSON_DAY_OF_BIRTH"},{"source_field":"MONTH_OF_BIRTH","target_field":"PERSON_MONTH_OF_BIRTH"},{"source_field":"YEAR_OF_BIRTH","target_field":"PERSON_YEAR_OF_BIRTH"}],"input_table":"person","output_table":"custom_data_map_table"},{"fields":[{"source_field":"PERSON_ID","target_field":"DEATH_PERSON_ID"},{"source_field":"DEATH_DATE","target_field":"DEATH_DEATH_DATE"}],"input_table":"death","output_table":"custom_data_map_table"}],"parent_table":"person"},"person_csv_node":{"type":"csv_node","file":"/pysrc/data/person.csv","delimiter":",","columns":["person_id","gender_concept_id","year_of_birth","month_of_birth","day_of_birth","birth_datetime","race_concept_id","ethnicity_concept_id","location_id","provider_id","care_site_id","person_source_value","gender_source_value","gender_source_concept_id","race_source_value","race_source_concept_id","ethnicity_source_value","ethnicity_source_concept_id"],"hasheader":true,"name":"person_csv","datatypes":{}},"death_csv_node":{"file":"/pysrc/data/death.csv","type":"csv_node","columns":["person_id","death_date","death_datetime","death_type_concept_id","cause_concept_id","cause_source_value","cause_source_concept_id"],"hasheader":true,"name":"death_csv","datatypes":{},"delimiter":","},"person_sql_node":{"type":"sql_node","tables":{"person":["person_csv_node"]},"sql":"SELECT * FROM PERSON"},"death_sql_node":{"type":"sql_node","tables":{"death":["death_csv_node"]},"sql":"SELECT * FROM DEATH"},"mysql_node":{"type":"sql_node","tables":{"person":["person_csv_node"],"death":["death_csv_node"]},"sql":"SELECT COUNT(*) FROM person join death on person.\"PERSON_ID\" = death.\"PERSON_ID\""},"py_node":{"type":"python_node","python_code":"import sqlalchemy as asql\nimport pandas as pd\nimport dask.dataframe as dd\ndef exec(myinput):\n myinput[\"dbrjson\"] = myinput[\"dbread\"].data.compute().to_json(orient=\"records\")\n myinput[\"Hello\"] = \"hello world!\"\n return myinput\ndef test_exec(myinput):\n return exec(myinput)"},"my_r_node":{"type":"r_node","r_code":"library(PatientLevelPrediction)\n\nexec <- function(myinput) {return(toString(packageVersion(\"PatientLevelPrediction\")))}"},"writer_node":{"type":"db_writer_node","dataframe":["py_node","mysql_node"],"dbtablename":"JoinedTable","database":"alp"},"dbread":{"type":"db_reader_node","database":"alp","sqlquery":"select name, size FROM horses","columns":["name","size"],"testdata":[["Mr X",111],["Mr Y",333]]},"sqlquery":{"type":"sql_query_node","database":"alp","sqlquery":"insert into horses values (:myname,5)","params":{"myname":["py_node","Hello"]},"is_select":false,"testsqlquery":"select name, size FROM horses"},"productsubflow":{"type":"subflow","graph":{"edges":{"e3":{"source":"givefive","target":"tempproduct"},"e4":{"source":"givethree","target":"tempproduct"}},"nodes":{"givethree":{"type":"python_node","python_code":"def exec(myinput):\n    return 3"},"givefive":{"type":"python_node","python_code":"def exec(myinput):\n    return 5"},"tempproduct":{"type":"python_node","python_code":"def exec(myinput):\n    givethree = myinput[\"givethree\"].data\n    givefive = myinput[\"givefive\"].data\n    return givefive * givethree"}}},"executor_options":{"executor_type":"default","executor_address":{"host":"","port":"","ssl":false}}},"givetwo":{"type":"python_node","python_code":"def exec(myinput):\n    return 2"},"multiplyagain":{"type":"python_node","python_code":"def exec(myinput):\n    givetwo = myinput[\"givetwo\"].data\n    productsubflow = myinput[\"productsubflow\"].data\n    return givetwo * productsubflow"}},"edges":{"e1":{"source":"person_csv_node","target":"mysql_node"},"e2":{"source":"death_csv_node","target":"mysql_node"},"e3":{"source":"mysql_node","target":"py_node"},"e4":{"source":"py_node","target":"writer_node"},"e5":{"source":"dbread","target":"py_node"},"e6":{"source":"py_node","target":"sqlquery"},"e7":{"source":"person_csv_node","target":"my_r_node"},"e8":{"source":"person_csv_node","target":"person_sql_node"},"e9":{"source":"death_csv_node","target":"death_sql_node"},"e10":{"source":"person_sql_node","target":"my_data_mapping"},"e11":{"source":"death_sql_node","target":"my_data_mapping"},"e13":{"source":"productsubflow","target":"multiplyagain"},"e14":{"source":"givetwo","target":"multiplyagain"}}}, "options": {"trace_config":{"trace_mode":true,"trace_db":"alp"},"test_mode":false}}
schedule: null
is_schedule_active: null
infrastructure:
  type: process
  env: {}
  labels: {}
  name: null
  command: null
  stream_output: true
  working_dir: null
  block_type_slug: process
  _block_type_slug: process

###
### DO NOT EDIT BELOW THIS LINE
###
flow_name: exec-flow
manifest_path: null
storage: null
path: '.'
entrypoint: /app/pysrc/main.py:execute_dataflow_flow
parameter_openapi_schema:
  title: Parameters
  type: object
  properties:
    json_graph:
      title: json_graph
      position: 0
    options:
      title: options
      position: 1
  required:
  - json_graph
  - dbjson
  - options
  definitions: null
timestamp: '2023-04-13T11:18:25.370003+00:00'

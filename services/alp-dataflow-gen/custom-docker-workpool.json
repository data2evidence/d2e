{
    "variables": {
        "type": "object",
        "properties": {
            "env": {
                "type": "object",
                "title": "Environment Variables",
                "description": "Environment variables to set when starting a flow run.",
                "additionalProperties": {
                    "type": "string"
                }
            },
            "name": {
                "type": "string",
                "title": "Name",
                "description": "Name given to infrastructure created by the worker using this job configuration."
            },
            "image": {
                "type": "string",
                "title": "Image",
                "example": "docker.io/prefecthq/prefect:2-latest",
                "description": "The image reference of a container image to use for created jobs. If not set, the latest Prefect image will be used."
            },
            "labels": {
                "type": "object",
                "title": "Labels",
                "description": "Labels applied to infrastructure created by the worker using this job configuration.",
                "additionalProperties": {
                    "type": "string"
                }
            },
            "command": {
                "type": "string",
                "title": "Command",
                "description": "The command to use when starting a flow run. In most cases, this should be left blank and the command will be automatically generated by the worker."
            },
            "volumes": {
                "type": "array",
                "items": {
                    "type": "string"
                },
                "title": "Volumes",
                "example": [
                    "/my/local/path:/path/in/container"
                ],
                "description": "A list of volume to mount into created containers."
            },
            "networks": {
                "type": "array",
                "items": {
                    "type": "string"
                },
                "title": "Networks",
                "description": "Docker networks that created containers should be connected to."
            },
            "mem_limit": {
                "type": "string",
                "title": "Memory Limit",
                "description": "Memory limit of created containers. Accepts a value with a unit identifier (e.g. 100000b, 1000k, 128m, 1g.) If a value is given without a unit, bytes are assumed."
            },
            "privileged": {
                "type": "boolean",
                "title": "Privileged",
                "default": false,
                "description": "Give extended privileges to created container."
            },
            "auto_remove": {
                "type": "boolean",
                "title": "Auto Remove",
                "default": true,
                "description": "If set, containers will be deleted on completion."
            },
            "network_mode": {
                "type": "string",
                "title": "Network Mode",
                "description": "The network mode for the created containers (e.g. host, bridge). If 'networks' is set, this cannot be set."
            },
            "memswap_limit": {
                "type": "string",
                "title": "Memory Swap Limit",
                "description": "Total memory (memory + swap), -1 to disable swap. Should only be set if `mem_limit` is also set. If `mem_limit` is set, this defaults toallowing the container to use as much swap as memory. For example, if `mem_limit` is 300m and `memswap_limit` is not set, containers can use 600m in total of memory and swap."
            },
            "stream_output": {
                "type": "boolean",
                "title": "Stream Output",
                "default": true,
                "description": "If set, the output from created containers will be streamed to local standard output."
            },
            "image_pull_policy": {
                "enum": [
                    "IfNotPresent",
                    "Always",
                    "Never"
                ],
                "type": "string",
                "title": "Image Pull Policy",
                "description": "The image pull policy to use when pulling images."
            },
            "registry_credentials": {
                "allOf": [
                    {
                        "$ref": "#/definitions/DockerRegistryCredentials"
                    }
                ],
                "title": "Registry Credentials",
                "description": "Credentials for logging into a Docker registry to pull images from."
            }
        },
        "definitions": {
            "DockerRegistryCredentials": {
                "type": "object",
                "title": "DockerRegistryCredentials",
                "required": [
                    "username",
                    "password",
                    "registry_url"
                ],
                "properties": {
                    "reauth": {
                        "type": "boolean",
                        "title": "Reauth",
                        "default": true,
                        "description": "Whether or not to reauthenticate on each interaction."
                    },
                    "password": {
                        "type": "string",
                        "title": "Password",
                        "format": "password",
                        "writeOnly": true,
                        "description": "The password to log into the registry with."
                    },
                    "username": {
                        "type": "string",
                        "title": "Username",
                        "description": "The username to log into the registry with."
                    },
                    "registry_url": {
                        "type": "string",
                        "title": "Registry Url",
                        "example": "index.docker.io",
                        "description": "The URL to the registry. Generally, \"http\" or \"https\" can be omitted."
                    }
                },
                "description": "Store credentials for interacting with a Docker Registry.",
                "secret_fields": [
                    "password"
                ],
                "block_type_slug": "docker-registry-credentials",
                "block_schema_references": {}
            }
        },
        "description": "Configuration class used by the Docker worker.\n\nAn instance of this class is passed to the Docker worker's `run` method\nfor each flow run. It contains all the information necessary to execute the\nflow run as a Docker container.\n\nAttributes:\n    name: The name to give to created Docker containers.\n    command: The command executed in created Docker containers to kick off\n        flow run execution.\n    env: The environment variables to set in created Docker containers.\n    labels: The labels to set on created Docker containers.\n    image: The image reference of a container image to use for created jobs.\n        If not set, the latest Prefect image will be used.\n    image_pull_policy: The image pull policy to use when pulling images.\n    networks: Docker networks that created containers should be connected to.\n    network_mode: The network mode for the created containers (e.g. host, bridge).\n        If 'networks' is set, this cannot be set.\n    auto_remove: If set, containers will be deleted on completion.\n    volumes: Docker volumes that should be mounted in created containers.\n    stream_output: If set, the output from created containers will be streamed\n        to local standard output.\n    mem_limit: Memory limit of created containers. Accepts a value\n        with a unit identifier (e.g. 100000b, 1000k, 128m, 1g.) If a value is\n        given without a unit, bytes are assumed.\n    memswap_limit: Total memory (memory + swap), -1 to disable swap. Should only be\n        set if `mem_limit` is also set. If `mem_limit` is set, this defaults to\n        allowing the container to use as much swap as memory. For example, if\n        `mem_limit` is 300m and `memswap_limit` is not set, containers can use\n        600m in total of memory and swap.\n    privileged: Give extended privileges to created containers."
    },
    "job_configuration": {
        "env": "{{ env }}",
        "name": "{{ name }}",
        "image": "{{ image }}",
        "labels": "{{ labels }}",
        "command": "{{ command }}",
        "volumes": "{{ volumes }}",
        "networks": "{{ networks }}",
        "mem_limit": "{{ mem_limit }}",
        "privileged": "{{ privileged }}",
        "auto_remove": "{{ auto_remove }}",
        "network_mode": "{{ network_mode }}",
        "memswap_limit": "{{ memswap_limit }}",
        "stream_output": "{{ stream_output }}",
        "image_pull_policy": "{{ image_pull_policy }}",
        "registry_credentials": "{{ registry_credentials }}"
    }
}
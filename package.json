{
  "name": "alp-data-node",
  "version": "1.0.0",
  "description": "ALP Data Node",
  "license": "MIT",
  "scripts": {
    "edit": "code package.json",
    "gen:env": "ENV_NAME=$ENV_NAME ENV_TYPE=$ENV_TYPE DOTENV_APPEND=$DOTENV_APPEND scripts/gen-env.sh",
    "gen:env:all": "ENV_NAME=$ENV_NAME ENV_TYPE=$ENV_TYPE DOTENV_APPEND=$DOTENV_APPEND yarn gen:env && ENV_TYPE=$ENV_TYPE TLS_REGENERATE=$TLS_REGENERATE yarn gen:tls && D2E_RESOURCE_LIMIT=$D2E_RESOURCE_LIMIT ENV_TYPE=$ENV_TYPE yarn gen:resource-limits",
    "gen:tls": "ENV_TYPE=$ENV_TYPE TLS_REGENERATE=$TLS_REGENERATE scripts/gen-tls.sh",
    "gen:resource-limits": "D2E_RESOURCE_LIMIT=$D2E_RESOURCE_LIMIT ENV_TYPE=$ENV_TYPE scripts/gen-resource-limits.sh",
    "base:minerva": "BASE_PORT=1 docker compose --file docker-compose.yml --file docker-compose-atlas.yml ",
    "remote:minerva": "ENV_TYPE=remote yarn base:minerva --env-file .env.remote --profile minerva-ui --profile perseus",
    "local:minerva": "ENV_TYPE=local GIT__COMMIT_ID__PLUGINS=${GIT__COMMIT_ID__PLUGINS:-main} yarn base:minerva --file docker-compose-local.yml ${ADDITIONAL_DC_FILES} --env-file .env.local",
    "build:minerva": "yarn local:minerva build --build-arg GIT_COMMIT_ARG=$(git rev-parse HEAD)",
    "build:nest-dev:minerva": "ADDITIONAL_DC_FILES='--file docker-compose-nest-dev-local.yml' yarn build:minerva alp-minerva-dataflow-mgmt alp-minerva-portal-server alp-minerva-terminology-svc",
    "build:nest-prod:minerva": "yarn build:minerva alp-minerva-dataflow-mgmt alp-minerva-portal-server alp-minerva-terminology-svc",
    "init:logto": "ENV_TYPE=${ENV_TYPE:-local} && yarn $ENV_TYPE:minerva up alp-minerva-postgres alp-logto --wait && sleep 10 && yarn $ENV_TYPE:minerva up alp-logto-post-init",
    "start:minerva": "yarn build:nest-prod:minerva && yarn local:minerva up --renew-anon-volumes",
    "start:minerva:perseus": "yarn local:minerva --profile perseus up --renew-anon-volumes",
    "start:nest-dev:minerva": "yarn build:nest-dev:minerva && ADDITIONAL_DC_FILES='--file docker-compose-nest-dev-local.yml' yarn local:minerva up --renew-anon-volumes alp-minerva-dataflow-mgmt alp-minerva-portal-server alp-minerva-terminology-svc --wait --force-recreate --no-deps",
    "start:nest-prod:minerva": "yarn build:nest-prod:minerva && yarn local:minerva up --renew-anon-volumes alp-minerva-dataflow-mgmt alp-minerva-portal-server alp-minerva-terminology-svc --wait --force-recreate --no-deps",
    "stop:minerva": "yarn local:minerva stop",
    "clean:minerva": "yarn local:minerva down --volumes --remove-orphans",
    "config:minerva": "yarn local:minerva config",
    "ps:minerva": "yarn local:minerva ps",
    "logs:minerva:startup": "yarn base:minerva logs -t --until 1s",
    "logs:minerva:follow": "yarn base:minerva logs -t --follow",
    "logs:minerva": "yarn base:minerva logs -t",
    "echo:tags": "echo '# add to .zshrc' && RELATIVE_PATH__UI_REPO=${RELATIVE_PATH__UI_REPO:-../d2e-ui} && echo export GIT__COMMIT_ID__UI=$(git -C $RELATIVE_PATH__UI_REPO rev-parse HEAD || echo ${GIT__COMMIT_ID__UI:-develop}) && RELATIVE_PATH__PLUGINS_REPO=${RELATIVE_PATH__PLUGINS_REPO:-../d2e-plugins} && echo export GIT__COMMIT_ID__PLUGINS=$(git -C ${RELATIVE_PATH__PLUGINS_REPO} rev-parse HEAD || echo ${GIT__COMMIT_ID__PLUGINS:-main})",
    "base:ui": "DN_REPO_RELATIVE_PATH='.' && GIT__COMMIT_ID__UI=${GIT__COMMIT_ID__UI:-develop} docker compose --file ${DN_REPO_RELATIVE_PATH}/docker-compose.yml --file ${DN_REPO_RELATIVE_PATH}/docker-compose-local.yml --profile minerva-s3",
    "az:start:ui": "yarn base:ui up alp-caddy",
    "start:ui": "RELATIVE_PATH__UI_REPO=../${RELATIVE_PATH__UI_REPO:-d2e-ui} yarn az:start:ui",
    "build:start:ui": "RELATIVE_PATH__UI_REPO=../${RELATIVE_PATH__UI_REPO:-d2e-ui} && yarn base:ui --file ${RELATIVE_PATH__UI_REPO}/docker-compose-ui.yml up alp-caddy",
    "build:ui": "RELATIVE_PATH__UI_REPO=../${RELATIVE_PATH__UI_REPO:-d2e-ui} && yarn base:ui --file ${RELATIVE_PATH__UI_REPO}/docker-compose-ui.yml build alp-caddy",
    "build:minerva-test": "yarn local:minerva build",
    "start:minerva-test": "yarn local:minerva up",
    "create-postgres-cdm-schemas": "bash scripts/create-cdm-schema.sh",
    "build": "ts-node internal/build/buildservices.ts build",
    "tsc": "ts-node internal/build/buildservices.ts build --only-tsc",
    "inittestdb": "node internal/build/initdb.js test",
    "removetestdb": "node internal/build/initdb.js rmonly",
    "internal": "npm run-script --prefix internal"
  },
  "devDependencies": {
    "@types/node": "^18",
    "yarn": "1.22.10",
    "ts-node": "9.1.1"
  },
  "optionalDependencies": {
    "@alp/alp-dbcli": "file:cache/drivers/alp-dbcli-v1.0.0.tgz"
  },
  "private": true,
  "workspaces": {
    "packages": [
      "alp-libs/nodejs/*",
      "services/alp-db-svc",
      "services/analytics-svc",
      "services/query-gen-svc",
      "services/bookmark-svc",
      "services/envConverter",
      "services/mri-pg-config",
      "services/cdw-svc"
    ]
  }
}
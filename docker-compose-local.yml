services:

  alp-bookmark:
    build:
      context: .
      dockerfile: ./services/bookmark-svc/Dockerfile
    ports:
      - 9205:9205
    volumes:
      - ./services/bookmark-svc/src:/home/docker/src/alp-data-node/app/src
    environment:
      LOCAL_DEBUG: "true"

  alp-caddy:
    command: caddy run --environ --config /srv/caddy-config/Caddyfile --adapter caddyfile --watch
    image:  alpcr.azurecr.io/alp-data-node/alp-caddy:${GIT_HEAD_COMMIT_ALP_UI_REPO:-develop}
    ports:
      - 41100:41100
      - 41000:41000
      - 41130:41130
    environment:
      CADDY__FHIR_SERVER__PUBLIC_FQDN: ${CADDY__FHIR_SERVER__PUBLIC_FQDN:-localhost}

  alp-dataflow-gen:
    build:
      context: .
      dockerfile: ./services/alp-dataflow-gen/Dockerfile
    volumes:
      - ./services/alp-dataflow-gen/pysrc:/app/pysrc
    ports:
      - 41${BASE_PORT:-1}20:41${BASE_PORT:-1}20
    environment:
      PORTAL__API_URL: https://alp-minerva-gateway-${BASE_PORT:-1}:41${BASE_PORT:-1}00/portalsvc/graphql
      SYSTEM_PORTAL__API_URL: https://alp-minerva-gateway-${BASE_PORT:-1}:41${BASE_PORT:-1}00/system-portal/

  alp-dataflow-gen-agent:
    build:
      context: .
      dockerfile: ./services/alp-dataflow-gen/Dockerfile
    volumes:
      - ./services/alp-dataflow-gen/pysrc:/app/pysrc
    ports:
      - 9234:9234
    environment:
      ANALYTICS_SVC__API_BASE_URL: https://alp-minerva-gateway-${BASE_PORT:-1}:41${BASE_PORT:-1}00/analytics-svc/
      PORTAL__API_URL: https://alp-minerva-gateway-${BASE_PORT:-1}:41${BASE_PORT:-1}00/portalsvc/graphql
      SYSTEM_PORTAL__API_URL: https://alp-minerva-gateway-${BASE_PORT:-1}:41${BASE_PORT:-1}00/system-portal/

  alp-dataflow-gen-init:
    build:
      context: .
      dockerfile: ./services/alp-dataflow-gen/Dockerfile
    volumes:
      - ./services/alp-dataflow-gen/init.sh:/app/init.sh
      - ./services/alp-dataflow-gen/init.py:/app/init.py
      - ./services/alp-dataflow-gen/pysrc:/app/pysrc

  alp-db-credentials-mgr:
    extends:
      file: ./services/alp-db-credentials/docker-compose.yml
      service: db-credentials-mgr
    ports:
      - 9229:9229
    environment:
      DATABASE_CREDENTIALS: ${DATABASE_CREDENTIALS}
      NODE_ENV: development

  alp-logto:
    build:
      context: ./services/alp-logto
      dockerfile: Dockerfile

  alp-minerva-analytics-svc:
    build:
      context: .
      dockerfile: ./services/analytics-svc/Dockerfile
    external_links:
      - alp-minerva-portal-server:alp-minerva-portal-server-${BASE_PORT:-1}
      - alp-minerva-terminology-svc:alp-minerva-terminology-svc-${BASE_PORT:-1}
      - alp-minerva-dataflow-mgmt:alp-minerva-dataflow-mgmt-${BASE_PORT:-1}
    ports:
      - 9222:9222
    volumes:
      - ./services/analytics-svc/target:/home/docker/src/alp-data-node/app/dist
      - ./services/analytics-svc/src:/home/docker/src/alp-data-node/app/src
      - ./services/analytics-svc/api:/home/docker/src/alp-data-node/app/api
    environment:
      INSIGHTS__LOG_LEVEL: info
      LOCAL_DEBUG: "true"
      MINIO__REGION: ${MINIO__REGION:-ap-southeast-1}
      MINIO__SSL: false
      USE_EXTENSION_FOR_COHORT_CREATION: "false"

  alp-minerva-cdw-svc:
    build:
      context: .
      dockerfile: ./services/cdw-svc/Dockerfile
    ports:
      - 9206:9206
    volumes:
      - ./services/cdw-svc/src:/home/docker/src/services/app/src
    environment:
      LOCAL_DEBUG: "true"
      NODE_ENV: development

  alp-minerva-dataflow-mgmt:
    build:
      context: ./services/alp-dataflow
      dockerfile: Dockerfile
    container_name: alp-minerva-dataflow-mgmt-nest-prod-${BASE_PORT:-1}
    external_links:
      - alp-minerva-portal-server:alp-minerva-portal-server-${BASE_PORT:-1}
    environment:
      NODE_ENV: development

  alp-minerva-gateway:
    build:
      context: ./services/alp-gateway
      dockerfile: Dockerfile
      target: development
    command: yarn dev
    depends_on:
      alp-logto-post-init:
        condition: service_completed_successfully
    external_links:
      - alp-minerva-portal-server:alp-minerva-portal-server-${BASE_PORT:-1}
      - alp-minerva-terminology-svc:alp-minerva-terminology-svc-${BASE_PORT:-1}
      - alp-minerva-dataflow-mgmt:alp-minerva-dataflow-mgmt-${BASE_PORT:-1}
    ports:
      - 9220:9220
    volumes:
      - ./services/alp-gateway/src:/usr/src/app/src
    environment:
      LOCAL_DEBUG: "true"

  alp-minerva-meilisearch-svc:
    ports:
      - 41111:41111

  alp-minerva-pa-config-svc:
    build:
      context: .
      dockerfile: services/mri-pa-config/Dockerfile
    ports:
      - 9207:9207
    volumes:
      - ./services/mri-pa-config/src:/home/docker/src/services/app/src
    environment:
      LOCAL_DEBUG: "true"
      NODE_ENV: development

  alp-minerva-pg-mgmt-init:
    build:
      context: services/alp-pg-management
      dockerfile: Dockerfile
    volumes:
      - ./services/alp-pg-management/app:/home/docker/app
    environment:
      LOCAL_DEBUG: "true"

  alp-minerva-portal-server:
    build:
      context: ./services/alp-portal-server
      dockerfile: Dockerfile
    container_name: alp-minerva-portal-server-nest-prod-${BASE_PORT:-1}
    environment:
      MINIO__REGION: ${MINIO__REGION:-ap-southeast-1}
      MINIO__SSL: false
      NODE_ENV: development

  alp-minerva-postgres:
    ports:
      - 41190:5432

  alp-minerva-ps-config-svc:
    build:
      context: .
      dockerfile: services/ps-config/Dockerfile
    ports:
      - 9209:9209
    volumes:
      - ./services/ps-config/src:/home/docker/src/services/app/src
    environment:
      LOCAL_DEBUG: "true"
      NODE_ENV: development

  alp-minerva-sqleditor:
    build:
      context: .
      dockerfile: ./services/alp-sqleditor/Dockerfile
    ports:
      - 8888:8888
    volumes:
      - ./services/alp-sqleditor/init.sh:/usr/share/hue/init.sh

  alp-minerva-terminology-svc:
    build:
      context: .
      dockerfile: ./services/alp-terminology-svc/Dockerfile
    container_name: alp-minerva-terminology-svc-nest-prod-${BASE_PORT:-1}
    environment:
      LOCAL_DEBUG: "false"

  alp-minerva-user-mgmt:
    build:
      context: ./services/alp-usermgmt
      target: development
    command:
      - sh
      - start.sh
    ports:
      - 9224:9224
    volumes:
      - ./services/alp-usermgmt/src:/usr/src/app/src
    environment:
      LOCAL_DEBUG: "true"
      NODE_ENV: development

  alp-mri-pg-config:
    build: ./services/mri-pg-config

  alp-query-gen:
    build:
      context: .
      dockerfile: services/query-gen-svc/Dockerfile
    external_links:
      - alp-minerva-portal-server:alp-minerva-portal-server-${BASE_PORT:-1}
      - alp-minerva-terminology-svc:alp-minerva-terminology-svc-${BASE_PORT:-1}
    ports:
      - 9208:9208
    volumes:
      - ./services/query-gen-svc/src:/home/docker/src/alp-data-node/app/src
    environment:
      LOCAL_DEBUG: "true"
      NODE_ENV: development

  alp-dicom-server:
    # uses 8042 port on the container
    ports:
      - 8042:8042

  alp-fhir-server:
    build:
      context: ./services/alp-fhir
      dockerfile: Dockerfile

  alp-fhir-fe-server:
    build:
      context: ./services/alp-fhir/
      dockerfile: Dockerfile.frontend
    volumes:
    - ./services/alp-fhir/ui-file-server/index.js:/home/docker/index.js

  alp-logto-post-init:
    container_name: alp-logto-post-init
    image: node:18.20.2-slim
    networks:
      - alp
    volumes:
      - ./services/alp-logto:/home/docker
    depends_on:
      alp-logto:
        condition: service_healthy
      alp-minerva-postgres:
        condition: service_healthy
    entrypoint: ["sh", "-c", "cd /home/docker && npm install && npm run build-and-seed"] 
    environment:
      PG__DB_NAME: logto
      PG__HOST: ${PG_HOST:-alp-minerva-postgres-1}
      PG__PASSWORD: ${PG_SUPER_PASSWORD}
      PG__PORT: ${PG_PORT:-5432}
      PG__USER: ${PG_SUPER_USER:-postgres}
      LOGTO__CLIENT_APPS: '[{"name":"alp-svc","description":"alp-svc","type":"MachineToMachine"},{"name":"alp-data","description":"alp-data","type":"MachineToMachine"},{"name":"alp-app","description":"alp-app","type":"Traditional","oidcClientMetadata":{"redirectUris":["https://localhost:41100/portal/login-callback","https://localhost:4000/portal/login-callback","https://localhost:8081"],"postLogoutRedirectUris":["https://localhost:41100/portal","https://localhost:4000/portal","https://localhost:8081"]},"customClientMetadata":{"corsAllowedOrigins":[],"refreshTokenTtlInDays":14,"alwaysIssueRefreshToken":true,"rotateRefreshToken":true}}]'
      LOGTO__RESOURCE:  '{"name":"alp-default","indicator":"https://alp-default","accessTokenTtl":3600}'
      LOGTO__USER: '{"username":"admin","password":"$argon2i$v=19$m=4096,t=256,p=1$gFXKgnc0tFywI7DcRVN+Tg$c0TeMUiDq6PMCLyJmR/V/sb1MV8MpMBeRy24+ZsZgeY","passwordAlgorithm":"Argon2i"}'
      LOGTO__ROLES: '[{"name":"role.systemadmin","description":"ALP System admin","type":"User"},{"name":"role.useradmin","description":"ALP User admin","type":"User"},{"name":"role.tenantviewer","description":"ALP Tenant viewer","type":"User"}]'
      LOGTO__SCOPES: '[{"name":"role.systemadmin","description":"ALP System admin"},{"name":"role.useradmin","description":"ALP User admin"},{"name":"role.tenantviewer","description":"ALP Tenant viewer"}]'
      LOGTO__ADMIN_SERVER__FQDN_URL: "http://alp-logto-1:3002"
      LOGTO__CLIENTID_PASSWORD__BASIC_AUTH: ${LOGTO__CLIENTID_PASSWORD__BASIC_AUTH:-YTU2MG84dHF3NzloeTJjcG44eDFxOnhrOEhQNFZEenFKY25YQ1RwZGFRTTZVdDJTd3JHMzd1}
      LOGTO__ALP_ADMIN_APP: '{"application": {"id": "${LOGTO_API_M2M_CLIENT_ID}", "name":"alp-admin","description":"alp-admin", "secret": "${LOGTO_API_M2M_CLIENT_SECRET}"}, "role": { "name":"api-access","description":"Logto API access"}}'

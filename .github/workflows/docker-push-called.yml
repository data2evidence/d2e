name: Docker Build (called)

on:
  workflow_call:
    inputs:
      AZ_REG_REPOSITORY:
        required: true
        type: string
      DOCKER_BUILD_ARG1:
        default: ""
        required: false
        type: string
      DOCKER_BUILD_CONTEXT_PATH:
        default: "."
        required: false
        type: string
      DOCKER_BUILD_FILE_PATH:
        required: true
        type: string
      DOCKER_BUILD_PULL_BOOL_STR:
        default: "false"
        required: false
        type: string
      DOCKER_BUILD_PUSH_BOOL_STR:
        default: "false"
        required: false
        type: string
      DOCKER_IMG_TAG_NAME:
        required: true
        type: string
      GIT_BRANCH_NAME:
        required: true
        type: string
      GIT_REPO_FULL_NAME:
        required: true
        type: string
      GIT_SSH_PRIVATE_KEY1:
        default: ""
        required: false
        type: string
      GIT_SSH_PRIVATE_KEY2:
        default: ""
        required: false
        type: string

jobs:
  build-push-prune:
    name: ${{ inputs.AZ_REG_REPOSITORY }}
    runs-on: ubuntu-latest
    env:
      AZ_REG_FQDN: ${{ vars.AZ_REGISTRY_NAME }}.azurecr.io
      AZ_REG_NAME: ${{ vars.AZ_REGISTRY_NAME }}
      AZ_REG_PASSWORD: ${{ secrets.AZ_REGISTRY_PASSWORD }}
      AZ_REG_PRUNE_DAYS: ${{ vars.AZ_REG_PRUNE_DAYS || '20' }}
      AZ_REG_PRUNE_ENABLE_DELETE: ${{ vars.AZ_REG_PRUNE_ENABLE_DELETE || 'false' }}
      AZ_REG_PRUNE_FORCE_ANALYZE: ${{ vars.AZ_REG_PRUNE_FORCE_ANALYZE || 'false' }}
      AZ_REG_PRUNE_KEEP_REGEX: ${{ vars.AZ_REG_PRUNE_KEEP_REGEX }}
      AZ_REG_REPOSITORY: ${{ inputs.AZ_REG_REPOSITORY }}
      AZ_REG_USERNAME: ${{ vars.AZ_REGISTRY_USERNAME }}
      DOCKER_BUILD_ARG1: ${{ inputs.DOCKER_BUILD_ARG1 }}
      DOCKER_BUILD_CONTEXT_PATH: ${{ inputs.DOCKER_BUILD_CONTEXT_PATH }}
      DOCKER_BUILD_DISABLE: ${{ vars.DOCKER_BUILD_DISABLE || 'false' }}
      DOCKER_BUILD_FILE_PATH: ${{ inputs.DOCKER_BUILD_FILE_PATH }}
      DOCKER_BUILD_PULL_BOOL_STR: ${{ inputs.DOCKER_BUILD_PULL_BOOL_STR }}
      DOCKER_BUILD_PUSH_BOOL_OVERRIDE: ${{ vars.DOCKER_BUILD_PUSH_BOOL_OVERRIDE || 'false' }}
      DOCKER_BUILD_PUSH_BOOL_STR: ${{ inputs.DOCKER_BUILD_PUSH_BOOL_STR }}
      DOCKER_IMG_TAG_NAME: ${{ inputs.DOCKER_IMG_TAG_NAME }}
      GIT_BRANCH_NAME: ${{ inputs.GIT_BRANCH_NAME }}
      GIT_REPO_FULL_NAME: ${{ inputs.GIT_REPO_FULL_NAME }}
      GIT_SSH_PRIVATE_KEY1: ${{ inputs.GIT_SSH_PRIVATE_KEY1 }}
      GIT_SSH_PRIVATE_KEY2: ${{ inputs.GIT_SSH_PRIVATE_KEY2 }}

    steps:
      - name: Free Disk Space (Ubuntu)
        if: ${{ env.DOCKER_BUILD_DISABLE != 'true' }}
        uses: jlumbroso/free-disk-space@main
        with:
          # this might remove tools that are actually needed,
          # if set to "true" but frees about 6 GB
          tool-cache: false
          # all of these default to true, but feel free to set to
          # "false" if necessary for your workflow
          android: true
          dotnet: true
          haskell: true
          large-packages: false
          docker-images: true
          swap-storage: true

      - uses: actions/checkout@v4
        with:
          ref: ${{ env.GIT_BRANCH_NAME }}
          repository: ${{ env.GIT_REPO_FULL_NAME }}
          token: ${{ secrets.CI_PAT }}
          
      - name: 'Login to GitHub Container Registry'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{github.actor}}
          password: ${{secrets.GITHUB_TOKEN}}
          
      - name: Build and push
        uses: docker/build-push-action@v6
        if: ${{ env.DOCKER_BUILD_DISABLE != 'true' }}
        with:
          builder: ${{ steps.builder.outputs.name }}
          # cache-from: type=gha
          # cache-to: type=gha,mode=max
          # ulimit: nofile=1048576:1048576
          platforms: "linux/amd64"
          pull: ${{ env.DOCKER_BUILD_PULL_BOOL_STR == 'true' }}
          push: ${{ env.DOCKER_BUILD_PUSH_BOOL_STR == 'true' }}
          context: ${{ env.DOCKER_BUILD_CONTEXT_PATH }}
          file: ${{ env.DOCKER_BUILD_FILE_PATH }}
          tags: ghcr.io/data2evidence/${{ env.AZ_REG_REPOSITORY }}:${{ env.DOCKER_IMG_TAG_NAME }}
          
      - name: Login to ACR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.AZ_REG_FQDN }}
          username: ${{ env.AZ_REG_USERNAME }}
          password: ${{ env.AZ_REG_PASSWORD }}

      - name: SSH_AUTH_SOCK if GIT_SSH_PRIVATE_KEYS are set
        shell: bash
        if: ${{ env.GIT_SSH_PRIVATE_KEY1 == '' && env.GIT_SSH_PRIVATE_KEY2 == '' }}
        run: |
          ssh-agent -s | sed -e 's/;.*//' -e '/^echo/d' | tee -a $GITHUB_ENV

      - name: SSH_AUTH_SOCK if GIT_SSH_PRIVATE_KEYS are not set
        uses: webfactory/ssh-agent@v0.9.0
        if: ${{ env.GIT_SSH_PRIVATE_KEY1 != '' || env.GIT_SSH_PRIVATE_KEY2 != '' }}
        with:
          ssh-private-key: |
            ${{ env.GIT_SSH_PRIVATE_KEY1 }}
            ${{ env.GIT_SSH_PRIVATE_KEY2 }}

      - name: Process Git & SSH config for Docker build context
        if: ${{ env.GIT_SSH_PRIVATE_KEY1 != '' || env.GIT_SSH_PRIVATE_KEY2 != '' }}
        run: |
          cp -r ~/.gitconfig  ~/.ssh .github/
          cd .github/
          sed 's|/home/runner|/root|g' -i.bak .ssh/config

      - uses: docker/setup-buildx-action@v3
        if: ${{ env.DOCKER_BUILD_DISABLE != 'true' }}
        id: builder

      - name: Purge docker images and cache
        if: ${{ env.DOCKER_BUILD_DISABLE != 'true' }}
        run: |
          docker image prune -af
          docker buildx prune -af

      - name: Build and push
        uses: docker/build-push-action@v6
        if: ${{ env.DOCKER_BUILD_DISABLE != 'true' }}
        with:
          builder: ${{ steps.builder.outputs.name }}
          # cache-from: type=gha
          # cache-to: type=gha,mode=max
          # ulimit: nofile=1048576:1048576
          platforms: "linux/amd64"
          context: ${{ env.DOCKER_BUILD_CONTEXT_PATH }}
          pull: ${{ env.DOCKER_BUILD_PULL_BOOL_STR == 'true' }}
          file: ${{ env.DOCKER_BUILD_FILE_PATH }}
          push: ${{ env.DOCKER_BUILD_PUSH_BOOL_STR == 'true' }}
          tags: ${{ env.AZ_REG_FQDN }}/${{ env.AZ_REG_REPOSITORY }}:${{ env.DOCKER_IMG_TAG_NAME }}
          ssh: |
            default=${{ env.SSH_AUTH_SOCK }}
          build-args: |
            GIT_COMMIT_ARG=${{ github.sha }}
            ${{ env.BUILD_ARG1 }}

      - name: Post purge
        if: ${{ env.DOCKER_BUILD_DISABLE != 'true' }}
        run: |
          docker system prune -af

      - name: Prune ACR Images created before vars.AZ_REG_PRUNE_DAYS_TAGGED
        if: env.AZ_REG_PRUNE_FORCE_ANALYZE == 'true' || env.GIT_BRANCH_NAME == 'develop'
        id: prune
        continue-on-error: true
        run: |
          npx --suppess-warnings zx scripts/analyze-acr.mjs

          if [ $AZ_REG_PRUNE_ENABLE_DELETE = true ]; then
            echo "INFO . manifests delete ..."
            sh "private-manifests-delete.sh"
          else
            echo "INFO . manifests delete skipped"
          fi

          echo AZ_REG_ARTIFACTS_NAME=${AZ_REG_REPOSITORY/\//--} | tee -a $GITHUB_ENV | tee -a $GITHUB_OUTPUT | tee -a $GITHUB_STEP_SUMMARY

      - name: Upload ACR manifests artifacts
        if: steps.prune.outcome == 'success'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.AZ_REG_ARTIFACTS_NAME }}
          retention-days: 30
          path: |
            private*manifests*

name: Docker Build & Push
run-name: ${{ github.event.inputs.branch_name || github.head_ref || github.ref_name }}

on: 
  pull_request:
    types: [opened, reopened, ready_for_review, synchronize]
  push:
      branches:
        - develop

  workflow_dispatch:
    inputs:
      repo_full_name:
        description: Select RepoName
        required: false
        type: choice
        options:
          - alp-os/d2e
          - alp-os/d2e-dev-afreen
          - alp-os/d2e-dev-alicia
          - alp-os/d2e-dev-brandan
          - alp-os/d2e-dev-brian
          - alp-os/d2e-dev-hengxian
          - alp-os/d2e-dev-jerome
          - alp-os/d2e-dev-khairul
          - alp-os/d2e-dev-karthik
          - alp-os/d2e-dev-nadirah
          - alp-os/d2e-dev-nicholas
          - alp-os/d2e-dev-peter
          - alp-os/d2e-dev-qiya
          - alp-os/d2e-dev-ragavan
          - alp-os/d2e-dev-santan
          - alp-os/d2e-dev-satish
          - alp-os/d2e-dev-suwarno
      branch_name:
        default: develop
        description: Enter BranchName / Release Tag Name
        required: true
        type: string

concurrency: 
  group: ${{ github.event.inputs.branch_name || github.head_ref || github.ref_name }}-${{ github.event_name }}-docker-build
  cancel-in-progress: true

env:
  BRANCH_NAME: ${{ github.event.inputs.branch_name || github.head_ref || github.ref_name }}
  REPO_FULL_NAME: ${{ github.event.inputs.repo_full_name || github.event.pull_request.head.repo.full_name || github.event.repository.full_name }} # workflow_dispatch || pull_request || push

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
    - name: Free Disk Space (Ubuntu)
      uses: jlumbroso/free-disk-space@main
      with:
        # this might remove tools that are actually needed,
        # if set to "true" but frees about 6 GB
        tool-cache: false
        
        # all of these default to true, but feel free to set to
        # "false" if necessary for your workflow
        android: true
        dotnet: true
        haskell: true
        large-packages: false
        docker-images: true
        swap-storage: true

    - id: setup
      run: |
        echo repo_full_name="${REPO_FULL_NAME}" | tee -a $GITHUB_OUTPUT | tee -a $GITHUB_STEP_SUMMARY
        echo branch_name="${BRANCH_NAME}" | tee -a $GITHUB_OUTPUT | tee -a $GITHUB_STEP_SUMMARY
    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo "$GITHUB_CONTEXT"
    outputs:
      branch_name: ${{ steps.setup.outputs.branch_name }}
      repo_full_name: ${{ steps.setup.outputs.repo_full_name }}
  run:
    if: (needs.setup.outputs.branch_name == 'develop' ||  contains('release', needs.setup.outputs.branch_name) || github.event_name == 'workflow_dispatch') || ( github.event_name == 'pull_request' && !github.event.pull_request.draft ) # run if branch is develop|release|workflow_dispatch OR non-draft pull_request
    needs: setup
    runs-on: ubuntu-latest
    outputs:
      tag_name: ${{ steps.docker_tag.outputs.tag_name }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: alp-data-node/analytics-svc
            directory: ./services/analytics-svc
            context: .
            fileName: Dockerfile
          - name: alp-data-node/query-gen-svc
            directory: ./services/query-gen-svc
            context: .
            fileName: Dockerfile
          - name: alp-data-node/bookmark-svc
            directory: ./services/bookmark-svc
            context: .
            fileName: Dockerfile
          - name: alp-data-node/alp-usermgmt
            directory: ./services/alp-usermgmt
            context: ./services/alp-usermgmt
            fileName: Dockerfile
          - name: alp-data-node/alp-db-credentials
            directory: ./services/alp-db-credentials
            context: ./services/alp-db-credentials
            fileName: Dockerfile
          - name: alp-data-node/alp-portal-server
            directory: ./services/alp-portal-server
            context: ./services/alp-portal-server
            fileName: Dockerfile
          - name: alp-data-node/alp-dataflow
            directory: ./services/alp-dataflow
            context: ./services/alp-dataflow
            fileName: Dockerfile
          - name: alp-data-node/alp-pg-mgmt-init
            directory: ./services/alp-pg-management
            context: ./services/alp-pg-management
            fileName: Dockerfile
          - name: alp-data-node/alp-gateway
            directory: ./services/alp-gateway
            context: ./services/alp-gateway
            fileName: Dockerfile
          - name: alp-data-node/alp-terminology-svc
            directory: ./services/alp-terminology-svc
            context: .
            fileName: Dockerfile
          - name: alp-data-node/alp-dataflow-gen
            directory: ./services/alp-dataflow-gen
            context: .
            fileName: Dockerfile
            pull: true
          - name: alp-data-node/alp-sqleditor
            directory: ./services/alp-sqleditor
            context: .
            fileName: Dockerfile
          - name: alp-data-node/mri-pa-config
            directory: ./services/mri-pa-config
            context: .
            fileName: Dockerfile
          - name: alp-data-node/mri-pg-config
            directory: ./services/mri-pg-config
            context: ./services/mri-pg-config
            fileName: Dockerfile
          - name: alp-data-node/mri-cdw-svc
            directory: ./services/cdw-svc
            context: .
            fileName: Dockerfile
          - name: alp-data-node/mri-ps-config
            directory: ./services/ps-config
            context: .
            fileName: Dockerfile
          - name: alp-data-node/alp-logto
            directory: ./services/alp-logto
            context: ./services/alp-logto
            fileName: Dockerfile
          - name: alp-data-node/alp-logto-post-init
            directory: ./services/alp-logto/post-init
            context: ./services/alp-logto/post-init
            fileName: Dockerfile
          - name: alp-data-node/alp-fhir-server
            directory: ./services/alp-fhir
            context: ./services/alp-fhir
            fileName: Dockerfile
          - name: alp-data-node/alp-fhir-fe-server
            directory: ./services/alp-fhir
            context: ./services/alp-fhir
            fileName: Dockerfile.frontend
          - name: alp-data-node/alp-fhir-client
            directory: ./services/alp-fhir
            context: ./services/alp-fhir
            fileName: Dockerfile.client
          - name: alp-data-node/sql-proxy
            directory: ./services/sql-proxy
            context: ./services/sql-proxy
            fileName: Dockerfile

    steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{ env.BRANCH_NAME }}
        repository: ${{ env.REPO_FULL_NAME }}
        token: ${{ secrets.CI_PAT }}


    - name: Login to ACR
      uses: docker/login-action@v3
      with:
        registry: alpcr.azurecr.io
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}

    - name: Get docker tag name
      id: docker_tag
      shell: bash
      run: |
          if [ $BRANCH_NAME == "develop" ]; then
            echo "tag_name=develop" | tee -a $GITHUB_OUTPUT
            echo "is_push=true" | tee -a $GITHUB_OUTPUT
          elif [ $GITHUB_EVENT_NAME = "workflow_dispatch" ]; then
              echo "tag_name=$BRANCH_NAME" | tee -a $GITHUB_OUTPUT
              echo "is_push=true" | tee -a $GITHUB_OUTPUT
          else
              echo "is_push=false" | tee -a $GITHUB_OUTPUT
              echo "tag_name=$(echo ${{ github.sha }} | cut -c1-8)" | tee -a $GITHUB_OUTPUT
          fi

    - uses: docker/setup-buildx-action@v3
      id: builder

    - name: Purge docker images and cache
      run: |
        docker image prune -af
        docker buildx prune -af

    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        builder: ${{ steps.builder.outputs.name }}
        platforms: 'linux/amd64'
        context: ${{ matrix.context }}
        pull: ${{ matrix.pull || false }}
        file:  ${{ matrix.directory }}/${{ matrix.fileName }}
        push: ${{ steps.docker_tag.outputs.is_push }}
        tags: alpcr.azurecr.io/${{ matrix.name }}:${{ steps.docker_tag.outputs.tag_name }}
        build-args: |
          docker_image_prefix=alpcr.azurecr.io
          GIT_COMMIT_ARG=${{ github.sha }}

    - name: Post purge
      if: always()
      run: |  
        docker system prune -af
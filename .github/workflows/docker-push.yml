name: Docker Build & Push
run-name: ${{ github.event.inputs.GIT_BRANCH_NAME || github.head_ref || github.ref_name }}

on:
  pull_request:
    types: [opened, reopened, ready_for_review, synchronize]
  push:
    branches:
      - develop

  workflow_dispatch:
    inputs:
      GIT_REPO_FULL_NAME:
        description: Select RepoName
        required: false
        type: choice
        options:
          - alp-os/d2e
          - alp-os/d2e-dev-afreen
          - alp-os/d2e-dev-alicia
          - alp-os/d2e-dev-brandan
          - alp-os/d2e-dev-brian
          - alp-os/d2e-dev-hengxian
          - alp-os/d2e-dev-jerome
          - alp-os/d2e-dev-khairul
          - alp-os/d2e-dev-karthik
          - alp-os/d2e-dev-nadirah
          - alp-os/d2e-dev-nicholas
          - alp-os/d2e-dev-peter
          - alp-os/d2e-dev-qiya
          - alp-os/d2e-dev-ragavan
          - alp-os/d2e-dev-santan
          - alp-os/d2e-dev-satish
          - alp-os/d2e-dev-suwarno
      GIT_BRANCH_NAME:
        default: develop
        description: Enter BranchName / Release Tag Name
        required: true
        type: string

concurrency:
  group: ${{ github.event.inputs.GIT_BRANCH_NAME || github.head_ref || github.ref_name }}-${{ github.event_name }}-docker-build
  cancel-in-progress: true

env:
  GIT_BRANCH_NAME: ${{ github.event.inputs.GIT_BRANCH_NAME || github.head_ref || github.ref_name }}
  GIT_REPO_FULL_NAME: ${{ github.event.inputs.GIT_REPO_FULL_NAME || github.event.pull_request.head.repo.full_name || github.event.repository.full_name }} # workflow_dispatch || pull_request || push

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Free Disk Space (Ubuntu)
        if: false # debug
        uses: jlumbroso/free-disk-space@main
        with:
          # this might remove tools that are actually needed,
          # if set to "true" but frees about 6 GB
          tool-cache: false

          # all of these default to true, but feel free to set to
          # "false" if necessary for your workflow
          android: true
          dotnet: true
          haskell: true
          large-packages: false
          docker-images: true
          swap-storage: true

      - id: setup
        run: |
          echo GIT_BRANCH_NAME="${GIT_BRANCH_NAME}" | tee -a $GITHUB_OUTPUT | tee -a $GITHUB_STEP_SUMMARY
          echo GIT_REPO_FULL_NAME="${GIT_REPO_FULL_NAME}" | tee -a $GITHUB_OUTPUT | tee -a $GITHUB_STEP_SUMMARY

          if [ $GIT_BRANCH_NAME == "develop" ]; then
            DOCKER_IMG_IS_PUSH=true
            DOCKER_IMG_TAG_NAME=develop
          elif [ $GITHUB_EVENT_NAME = "workflow_dispatch" ]; then
            DOCKER_IMG_IS_PUSH=true
            DOCKER_IMG_TAG_NAME=$GIT_BRANCH_NAME
          else
            DOCKER_IMG_IS_PUSH=false
            DOCKER_IMG_TAG_NAME=$(echo ${{ github.sha }} | cut -c1-8)
          fi
          echo DOCKER_IMG_IS_PUSH=$DOCKER_IMG_IS_PUSH | tee -a $GITHUB_OUTPUT
          echo DOCKER_IMG_TAG_NAME=$DOCKER_IMG_TAG_NAME | tee -a $GITHUB_OUTPUT

      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
    outputs:
      DOCKER_IMG_IS_PUSH: ${{ steps.setup.outputs.DOCKER_IMG_IS_PUSH }}
      DOCKER_IMG_TAG_NAME: ${{ steps.setup.outputs.DOCKER_IMG_TAG_NAME }}
      GIT_BRANCH_NAME: ${{ steps.setup.outputs.GIT_BRANCH_NAME }}
      GIT_REPO_FULL_NAME: ${{ steps.setup.outputs.GIT_REPO_FULL_NAME }}

  bld:
    if: (needs.setup.outputs.GIT_BRANCH_NAME == 'develop' ||  contains('release', needs.setup.outputs.GIT_BRANCH_NAME) || github.event_name == 'workflow_dispatch') || ( github.event_name == 'pull_request' && !github.event.pull_request.draft ) # run if branch is develop|release|workflow_dispatch OR non-draft pull_request
    needs: setup
    strategy:
      matrix:
        include:
          - name: alp-data-node/alp-logto-post-init
            directory: ./services/alp-logto/post-init
            context: ./services/alp-logto/post-init
            fileName: Dockerfile
          - name: alp-data-node/alp-logto
            directory: ./services/alp-logto
            context: ./services/alp-logto
            fileName: Dockerfile
    uses: ./.github/workflows/gha-event.yml
    with:
      AZ_REGISTRY_REPOSITORY: ${{ matrix.name }}
      DOCKER_BUILD_CONTEXT: ${{ matrix.context }}
      DOCKER_BUILD_FILE_PATH: ${{ matrix.directory }}/${{ matrix.fileName }}
      DOCKER_BUILD_PULL_BOOL: ${{ matrix.pull || false }}
      DOCKER_IMG_IS_PUSH: false # ${{ needs.setup.outputs.DOCKER_IMG_IS_PUSH }}
      DOCKER_IMG_TAG_NAME: ${{ needs.setup.outputs.DOCKER_IMG_TAG_NAME }}
      GIT_BRANCH_NAME: ${{ needs.setup.outputs.GIT_BRANCH_NAME }}
      GIT_REPO_FULL_NAME: ${{ needs.setup.outputs.GIT_REPO_FULL_NAME }}
    secrets: inherit

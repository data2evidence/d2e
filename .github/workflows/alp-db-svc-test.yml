name: ALP DB-Svc integration tests with Azure Hana database and local Postgres database

on:
  pull_request:
    types: [opened, ready_for_review, reopened, synchronize]
  push:
    branches:
      - develop
  workflow_dispatch:

# Run only one job per branch
concurrency:
  group: ${{ github.head_ref || github.ref_name }}-db-svc-tests # Run the latest push
  cancel-in-progress: true # Cancel in progress jobs of the workflow of the branch

jobs:
  test-alp-db-svc:
    if: (github.ref_name == 'develop' ||  contains('release', github.ref_name) || github.event_name == 'workflow_dispatch') || ( github.event_name == 'pull_request' && !github.event.pull_request.draft ) # Should run if branch is develop/release/workflow_dispatch and doesnt have a PR
    runs-on: ubuntu-latest
    env:
      # DB-SVC ENV
      LB__LOG_LEVEL: "info"
      BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
      DB_SVC__LOG_LEVEL: "error"
      DB_SVC__DEBUG: "false"
      DB_SVC__PORT: "3333"
      DB_SVC__PATH: "/alpdb"
      OMOP__VOCAB_SCHEMA: "CDMVOCAB"
      HANA__READ_ROLE: "TENANT_READ_ROLE"
      HANA__DRIVER_CLASS_PATH: "${{ github.workspace }}/cache/drivers/ngdbc-latest.jar"
      POSTGRES__DRIVER_CLASS_PATH: "${{ github.workspace }}/services/alp-db-svc/db/drivers/postgres/postgresql-42.3.1.jar"
      B2C__ALP_APP__CLIENT_ID: "30dccbb9-5705-483f-bbaf-1f7c8f0f4fce"
      AD__IDENTITY_METADATA: "https://login.microsoftonline.com/f59c7915-9283-4fb5-b633-435b9145ca00/v2.0/.well-known/openid-configuration"
      AD__AUDIENCE: "30dccbb9-5705-483f-bbaf-1f7c8f0f4fce, 3da7b194-8456-4ef1-a790-00ef6360decd"
      SKIP_AUTH: "TRUE"
      DISABLE_SSL: "TRUE"
      ROLLBACK_SCHEMA_CREATION_FOR_LIQUIBASE_SCRIPT_FAILURE: "TRUE"
      HANA__TENANT_CONFIGS: "{}"
      # INTEGRATION_TEST__HANA__TENANT_CONFIGS: ${{ secrets.ALP_DB_SVC_INTEGRATION_TEST_HANA_TENANT_CONFIGS_GERMANY }}
      PG__TENANT_CONFIGS: '{"alp":{"host":"localhost","port":"5432","databaseName":"alp","postgresAdminUser":"postgres","postgresAdminPassword":"Toor1234","postgresReadUser":"postgres_tenant_read_user","postgresReadPassword":"Toor1234"}}'
      PG__READ_ROLE: "POSTGRES_TENANT_READ_ROLE"

    # services:
    #   postgres:
    #     image: postgres:15-alpine
    #     env:
    #       POSTGRES_USER: "postgres"
    #       POSTGRES_PASSWORD: "Toor1234"
    #       POSTGRES_DB: "alp"
    #     ports:
    #       - 5432:5432
    #     options: >-
    #       --health-cmd pg_isready
    #       --health-interval 10s
    #       --health-timeout 5s
    #       --health-retries 5

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install 1Password CLI
        uses: 1password/install-cli-action@v1

      # - name: Run this action
      #   uses: gacts/run-and-post-run@v1.4.0
      #   with:
      #     run: echo "First"
      #         "(can be multiline)"
      #     post: |
      #       echo "First post"
      #       echo "(can run multiply commands)"
      #       ls -la /tmp \
      #         /bin /opt

      - uses: pyTooling/Actions/with-post-step@v1.0.3
        name: op ratelimit
        env:
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
          # GITHUB_JOB: ${{ env.GITHUB_JOB }}
          # GITHUB_RUN_ID: ${{ env.GITHUB_RUN_ID }}
        with:
          main: |
            echo GITHUB_JOB=$GITHUB_JOB
            export GITHUB_JOB
            ./internal/scripts/get-op-ratelimit.sh
            # echo GITHUB_CONTEXT=$GITHUB_CONTEXT
            # echo GITHUB_ACTION=$GITHUB_ACTION
            # echo GITHUB_JOB=$GITHUB_JOB
            # echo GITHUB_RUN_ID=$GITHUB_RUN_ID
            # set | grep alp-db-svc-test
          # op service-account ratelimit > 
          post: |
            pwd
            echo post

      - name: Upload math result for job 2
        uses: actions/upload-artifact@v4
        with:
          name: homework_final
          path: math-homework.txt

      # - name: Get drivers from 1password
      #   env:
      #     OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
      #     OP_VAULT_NAME: ${{ secrets.OP_VAULT_NAME }}
      #   run: |
      #     op service-account ratelimit > private.op-ratelimit-start.json
      #     yarn get:drivers
      #     ls "${HANA__DRIVER_CLASS_PATH}"
      #     ls "${POSTGRES__DRIVER_CLASS_PATH}"

      # - name: Load dotenv from 1password
      #   uses: 1password/load-secrets-action@v2
      #   id: op-load-secret
      #   with:
      #     export-env: true
      #   env:
      #     OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
      #     INTEGRATION_TEST__HANA__TENANT_CONFIGS: "op://${{ secrets.OP_VAULT_NAME }}/Github Actions Secrets/ALP_DB_SVC_INTEGRATION_TEST_HANA_TENANT_CONFIGS_GERMANY"

      # - uses: actions/checkout@v4
      #   name: sameBranch checkout (OverrideRepo)
      #   id: sameBranch-checkout
      #   continue-on-error: true
      #   with:
      #     repository:  ${{ vars.OVERRIDE_REPO }}
      #     token: ${{ secrets.CI_PAT }}
      #     path: 'tmp'
      #     sparse-checkout: 'alp-data-node-override'
      #     sparse-checkout-cone-mode: false
      #     ref: ${{ env.BRANCH_NAME }}

      # - shell: bash
      #   name: sameBranch checkout test
      #   id: sameBranch-checkout-test
      #   run: |
      #     ls -lhtr tmp
      #     [ -d tmp/alp-data-node-override ] || echo OVERRIDE_DEVELOP_BRANCH=true | tee -a "$GITHUB_OUTPUT"

      # - uses: actions/checkout@v4
      #   name: develop branch checkout (sameBranch checkout fails)
      #   if: steps.sameBranch-checkout-test.outputs.OVERRIDE_DEVELOP_BRANCH == 'True' 
      #   with:
      #     repository:  ${{ vars.OVERRIDE_REPO }}
      #     token: ${{ secrets.CI_PAT }}
      #     path: 'tmp'
      #     sparse-checkout: 'alp-data-node-override'
      #     sparse-checkout-cone-mode: false
      #     ref: develop

      # - shell: bash
      #   name: merge files from override
      #   id: merge_files_from_override
      #   run: |
      #     ls -l tmp/alp-data-node-override
      #     cp -prnl ./tmp/alp-data-node-override/* .
      #     ls -l ./services/alp-db-svc/db/drivers
      #     ln -s tmp/alp-data-node-override alp-data-node-override

      # - name: Install 1Password CLI
      #   uses: 1password/install-cli-action@v1

      # - name: Get drivers from 1password
      #   env:
      #     OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
      #     OP_VAULT_NAME: ${{ secrets.OP_VAULT_NAME }}
      #   run: |
      #     yarn get:drivers

      # - shell: bash
      #   # Give an id to the step, so we can reference it later
      #   name: check if files changed
      #   id: check_file_changed
      #   run: |
      #     # Fetch develop & get file changes from feature branch
      #     git fetch origin develop

      #     # Diff HEAD with the last commit of develop & filter for 'services/alp-db-svc/**'
      #     diff=$(git diff --name-only origin/develop HEAD | grep '^services/alp-db-svc/**' || :)

      #     # Check if a file under services/alp-db-svc/** has changed (added, modified, deleted)
      #     hasDiff=$(if [ ${#diff} -gt 0 ] ; then echo "True" ; else echo "False"; fi)

      #     # Set the output named "has_dbsvc_changed"
      #     echo "has_dbsvc_changed=$hasDiff" >> $GITHUB_OUTPUT
      #     echo "Files changed: $diff"
      #     echo "Does db-svc have changes: $hasDiff"

      # - uses: actions/setup-node@v4
      #   if: github.ref_name == 'develop' || steps.check_file_changed.outputs.has_dbsvc_changed == 'True'
      #   with:
      #     node-version: "18.14.0"

      # - name: Build Project (DB-SVC)
      #   if: github.ref_name == 'develop' || steps.check_file_changed.outputs.has_dbsvc_changed == 'True'
      #   run: |
      #     # Build alp-libs dependencies for alp-db-svc
      #     yarn install --frozen-lockfile
      #     yarn workspace @alp/alp-base-utils run compile

      #     # Build alp-db-svc
      #     cd services/alp-db-svc
      #     yarn
      #     yarn compile

      # - name: Setup Test DB (postgres)
      #   if: github.ref_name == 'develop' || steps.check_file_changed.outputs.has_dbsvc_changed == 'True'
      #   working-directory: ./services/alp-db-svc
      #   run: |
      #     # Create cdmvocab and cdmdefault schema for db-svc integration tests
      #     yarn workspace alp-db-svc cdm-install-script post /alpdb/postgres/database/alp/data-model/omop5-4/schema/cdmvocab "{\"cleansedSchemaOption\": false, \"vocabSchema\": \"${OMOP__VOCAB_SCHEMA}\"}" && yarn workspace alp-db-svc cdm-install-script post /alpdb/postgres/database/alp/data-model/omop5-4/schema/cdmdefault "{\"cleansedSchemaOption\": false, \"vocabSchema\": \"${OMOP__VOCAB_SCHEMA}\"}"
      #   # env:
      #     # NODE_AUTH_TOKEN: ${{ secrets.CI_GITHUB_PKGS_NPM_TOKEN }}

      # - name: Run integration tests for DB-SVC POSTGRES
      #   working-directory: ./services/alp-db-svc
      #   # run only if files in 'has_dbsvc_changed' is set to 'True'
      #   if: github.ref_name == 'develop' || steps.check_file_changed.outputs.has_dbsvc_changed == 'True'
      #   run: |
      #     npm run pgtest

      # - name: Run integration tests for DB-SVC HANA
      #   working-directory: ./services/alp-db-svc
      #   # run only if files in 'has_dbsvc_changed' is set to 'True'
      #   if: github.ref_name == 'develop' || steps.check_file_changed.outputs.has_dbsvc_changed == 'True'
      #   run: |
      #     npm run test